{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Why Wiki\uff1f \u00b6 \u81ea\u5927\u4e8c\u53d8\u6545\u4e4b\u540e\uff0c\u5bf9\u4e8e\u77e5\u8bc6\u7684\u5438\u6536\u53d8\u6210\u4e00\u79cd\u6e34\u671b\u3002\u50cf\u4f1a\u53d1\u4f5c\u7684\u763e\u4e00\u822c\uff0c\u80fd\u591f\u5c06\u81ea\u5df1\u4ece\u73b0\u5b9e\u4e16\u754c\u62bd\u79bb\u51fa\u6765\u3002 \u540e\u6765\uff0c\u5b66\u4e60\u5730\u591a\u4e86\uff0c\u8111\u5b50\u4e5f\u6df7\u4e71\u4e86\u3002\u4e8e\u662f\u4fbf\u5f00\u59cb\u6574\u7406\u6240\u5b66\u3002\u7b14\u8bb0\u4e5f\u5c31\u6e10\u6e10\u591a\u4e86\u8d77\u6765\u3002 \u9ea6\u5e93\u7b14\u8bb0\u5f00\u59cb\uff0c\u5230OneNote, \u518d\u5230\u5370\u8c61\u7b14\u8bb0\u3002\u4f46\u662f\uff0c\u603b\u4f1a\u5728\u7b14\u8bb0\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u4e4b\u540e\u4fbf\u53d8\u5f97\u6df7\u4e71\u8d77\u6765\u3002\u540c\u65f6\uff0c**\u6536\u85cf\u763e**\u4e5f\u4f1a\u6162\u6162\u88ad\u6765\u3002\u4ece\u800c\u5bfc\u81f4\u6574\u4e2a\u7b14\u8bb0\u4f53\u7cfb\u66f4\u52a0\u6d51\u6d4a\u3002 \u518d\u540e\uff0c\u6162\u6162\u63a5\u89e6\u5230\u4e86**\u641c\u7d22\u610f\u8bc6**\u3002\u4e5f\u7b97\u7f13\u89e3\u4e86\u4e00\u90e8\u5206\u6267\u8457\u3002 \u7136\u800c\u5bf9\u4e8e\u7cfb\u7edf\u6027\u4f5c\u54c1\uff0c\u603b\u4f1a\u89c9\u5f97\u4e0d\u592a\u8fc7\u763e\u3002\u611f\u89c9\u4f1a\u6709\u592a\u591a\u7684\u52fe\u8fde\uff0c\u5c31\u50cf\u4e16\u754c\u6d69\u701a\u5230\u65e0\u7a77\u8fb9\u754c\u3002 ... ... \u6545\u6b64\uff0c\u5c1d\u8bd5\u4f7f\u7528**wiki\u8bb0\u5f55\u7cfb\u7edf\u6027\u603b\u7ed3**\u3002 \u76ee\u5f55\u7ed3\u6784 \u00b6 \u76ee\u524d\uff0cWiki \u76ee\u5f55\u6682\u65f6\u6458\u5f55\u7b14\u8bb0\u7ba1\u7406\u4f53\u7cfb\u4e2d\u7684\u90e8\u5206\uff0c\u540e\u7eed\u518d\u884c\u66f4\u65b0\u3002 200 Working Business \u5546\u52a1\u7ba1\u7406 210 Working Project \u9879\u76ee\u5b9e\u8df5 220 Working Professionalism \u4e13\u4e1a\u6280\u80fd 230 Working Talent Development 250 Working Coding \u7b56\u7801\u5954\u817e \u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42 \u6570\u636e\u5e93\u64cd\u4f5c\u4e0e\u914d\u7f6e Git & Github \u4ee3\u7801\u7ba1\u7406 Docker & K8s \u5bb9\u5668\u6280\u672f \u73af\u5883\u5b89\u88c5\u4e0e\u914d\u7f6e 250 Working Coding C 250 Working Coding Java \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5 JavaSE Spring 250 Working Coding Python Django Flask 310 Learning English \u9e1f\u8bed\u82b1\u9999 410 Loving Reading \u5f00\u5377\u6709\u76ca 420 Loving Writing \u63d0\u7b14\u5b89\u795e 500 Living Life \u4eba\u6d3b\u4e8e\u4e16 \u6b64\u76ee\u5f55\u7ed3\u6784\u4ec5\u4f5c\u53c2\u8003\uff0c\u672a\u6765\u5f97\u53ca\u66f4\u65b0\u90e8\u5206\uff0c\u8bf7\u4ee5\u5b9e\u9645\u6587\u7ae0\u4e3a\u51c6\u3002 \u5b58\u653e\u4f4d\u7f6e \u00b6 \u4e3b\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\uff1a wiki \u4f7f\u7528 Mkdocs \u8fdb\u884c\u642d\u5efa\uff0c\u6545\u6b64\uff0c\u6240\u6709\u6587\u7ae0\u5747\u4f4d\u4e8e wiki \u6587\u4ef6\u5939 \u5185\u3002 \u6587\u7ae0\u8d44\u6e90\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\uff1a \u7531\u4e8e\u4e00\u822c\u91c7\u7528Typora\u7f16\u8f91\u6587\u7ae0\uff0c\u6240\u4ee5\u91c7\u7528 Typora settings ./_resource/ ${ filename } Mkdocs \u6587\u7ae0\u90e8\u7f72\u4e0d\u4fdd\u969c\u670d\u52a1\u5668\u7edd\u5bf9\u8def\u5f84\uff0c\u56e0\u6b64\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u8fdb\u884c\u5b58\u653e\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u56fe\u5e93\u8fdb\u884c\u5b58\u50a8\u3002 ${filename} \uff1a \u6587\u4ef6\u540d\u79f0 Reference \u00b6 Mkdocs","title":"Home"},{"location":"#why-wiki","text":"\u81ea\u5927\u4e8c\u53d8\u6545\u4e4b\u540e\uff0c\u5bf9\u4e8e\u77e5\u8bc6\u7684\u5438\u6536\u53d8\u6210\u4e00\u79cd\u6e34\u671b\u3002\u50cf\u4f1a\u53d1\u4f5c\u7684\u763e\u4e00\u822c\uff0c\u80fd\u591f\u5c06\u81ea\u5df1\u4ece\u73b0\u5b9e\u4e16\u754c\u62bd\u79bb\u51fa\u6765\u3002 \u540e\u6765\uff0c\u5b66\u4e60\u5730\u591a\u4e86\uff0c\u8111\u5b50\u4e5f\u6df7\u4e71\u4e86\u3002\u4e8e\u662f\u4fbf\u5f00\u59cb\u6574\u7406\u6240\u5b66\u3002\u7b14\u8bb0\u4e5f\u5c31\u6e10\u6e10\u591a\u4e86\u8d77\u6765\u3002 \u9ea6\u5e93\u7b14\u8bb0\u5f00\u59cb\uff0c\u5230OneNote, \u518d\u5230\u5370\u8c61\u7b14\u8bb0\u3002\u4f46\u662f\uff0c\u603b\u4f1a\u5728\u7b14\u8bb0\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u4e4b\u540e\u4fbf\u53d8\u5f97\u6df7\u4e71\u8d77\u6765\u3002\u540c\u65f6\uff0c**\u6536\u85cf\u763e**\u4e5f\u4f1a\u6162\u6162\u88ad\u6765\u3002\u4ece\u800c\u5bfc\u81f4\u6574\u4e2a\u7b14\u8bb0\u4f53\u7cfb\u66f4\u52a0\u6d51\u6d4a\u3002 \u518d\u540e\uff0c\u6162\u6162\u63a5\u89e6\u5230\u4e86**\u641c\u7d22\u610f\u8bc6**\u3002\u4e5f\u7b97\u7f13\u89e3\u4e86\u4e00\u90e8\u5206\u6267\u8457\u3002 \u7136\u800c\u5bf9\u4e8e\u7cfb\u7edf\u6027\u4f5c\u54c1\uff0c\u603b\u4f1a\u89c9\u5f97\u4e0d\u592a\u8fc7\u763e\u3002\u611f\u89c9\u4f1a\u6709\u592a\u591a\u7684\u52fe\u8fde\uff0c\u5c31\u50cf\u4e16\u754c\u6d69\u701a\u5230\u65e0\u7a77\u8fb9\u754c\u3002 ... ... \u6545\u6b64\uff0c\u5c1d\u8bd5\u4f7f\u7528**wiki\u8bb0\u5f55\u7cfb\u7edf\u6027\u603b\u7ed3**\u3002","title":"Why Wiki\uff1f"},{"location":"#_1","text":"\u76ee\u524d\uff0cWiki \u76ee\u5f55\u6682\u65f6\u6458\u5f55\u7b14\u8bb0\u7ba1\u7406\u4f53\u7cfb\u4e2d\u7684\u90e8\u5206\uff0c\u540e\u7eed\u518d\u884c\u66f4\u65b0\u3002 200 Working Business \u5546\u52a1\u7ba1\u7406 210 Working Project \u9879\u76ee\u5b9e\u8df5 220 Working Professionalism \u4e13\u4e1a\u6280\u80fd 230 Working Talent Development 250 Working Coding \u7b56\u7801\u5954\u817e \u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42 \u6570\u636e\u5e93\u64cd\u4f5c\u4e0e\u914d\u7f6e Git & Github \u4ee3\u7801\u7ba1\u7406 Docker & K8s \u5bb9\u5668\u6280\u672f \u73af\u5883\u5b89\u88c5\u4e0e\u914d\u7f6e 250 Working Coding C 250 Working Coding Java \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5 JavaSE Spring 250 Working Coding Python Django Flask 310 Learning English \u9e1f\u8bed\u82b1\u9999 410 Loving Reading \u5f00\u5377\u6709\u76ca 420 Loving Writing \u63d0\u7b14\u5b89\u795e 500 Living Life \u4eba\u6d3b\u4e8e\u4e16 \u6b64\u76ee\u5f55\u7ed3\u6784\u4ec5\u4f5c\u53c2\u8003\uff0c\u672a\u6765\u5f97\u53ca\u66f4\u65b0\u90e8\u5206\uff0c\u8bf7\u4ee5\u5b9e\u9645\u6587\u7ae0\u4e3a\u51c6\u3002","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"#_2","text":"\u4e3b\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\uff1a wiki \u4f7f\u7528 Mkdocs \u8fdb\u884c\u642d\u5efa\uff0c\u6545\u6b64\uff0c\u6240\u6709\u6587\u7ae0\u5747\u4f4d\u4e8e wiki \u6587\u4ef6\u5939 \u5185\u3002 \u6587\u7ae0\u8d44\u6e90\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\uff1a \u7531\u4e8e\u4e00\u822c\u91c7\u7528Typora\u7f16\u8f91\u6587\u7ae0\uff0c\u6240\u4ee5\u91c7\u7528 Typora settings ./_resource/ ${ filename } Mkdocs \u6587\u7ae0\u90e8\u7f72\u4e0d\u4fdd\u969c\u670d\u52a1\u5668\u7edd\u5bf9\u8def\u5f84\uff0c\u56e0\u6b64\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u8fdb\u884c\u5b58\u653e\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u56fe\u5e93\u8fdb\u884c\u5b58\u50a8\u3002 ${filename} \uff1a \u6587\u4ef6\u540d\u79f0","title":"\u5b58\u653e\u4f4d\u7f6e"},{"location":"#reference","text":"Mkdocs","title":"Reference"},{"location":"230%20Working%20Talent%20Development/","text":"","title":"Content"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/","text":"Docker \u6700\u4f73\u5b9e\u8df5 \u00b6 Content \u00b6 \u8bb2\u89e3Docker\u539f\u7406\u4e0e\u6267\u884c\u547d\u4ee4 \u8bb2\u89e3Docker-Compose\u5feb\u901f\u90e8\u7f72Docker\u5e94\u7528 \u4e00\u3001\u5bb9\u5668\u5316\u6280\u672f \u00b6 \u5386\u53f2\u6f14\u5316\uff1a \u7269\u7406\u673a\u65f6\u4ee3 ---> \u865a\u62df\u673a\u65f6\u4ee3 ---> \u5bb9\u5668\u5316\u65f6\u4ee3 1. \u7269\u7406\u673a\u65f6\u4ee3 \u00b6 \u90e8\u7f72\u975e\u5e38\u6162 \u6210\u672c\u5f88\u9ad8 \u8d44\u6e90\u6d6a\u8d39 \u96be\u4e8e\u6269\u5c55\u4e0e\u8fc1\u79fb \u53d7\u5236\u4e8e\u786c\u4ef6 2. \u865a\u62df\u5316\u65f6\u4ee3 \u00b6 \u4f18\u70b9\uff1a - \u591a\u90e8\u7f72 - \u8d44\u6e90\u6c60\uff1a\u786c\u4ef6\u8d44\u6e90 - \u8d44\u6e90\u9694\u79bb - \u5f88\u5bb9\u6613\u6269\u5c55 \u95ee\u9898\uff1a - VM\u9700\u8981\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\uff1a\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u6d6a\u8d39\u4e86\u8d44\u6e90 3. \u5bb9\u5668\u5316\u65f6\u4ee3 \u00b6 \u6240\u89e3\u51b3\u7684\u95ee\u9898 - \u6253\u7834\u5f00\u53d1\u4e0e\u8fd0\u7ef4\u4e4b\u95f4\u7684\u8d44\u6e90\u914d\u7f6e\u94fe\u63a5 - \u6807\u51c6\u5316\u5730\u5e94\u7528\u6253\u5305 \u5e94\u7528\u573a\u666f - \u6807\u51c6\u5316\u7684\u8fc1\u79fb\u65b9\u5f0f - \u7edf\u4e00\u7684\u53c2\u6570\u914d\u7f6e - \u81ea\u52a8\u5316\u90e8\u7f72 - \u5e94\u7528\u96c6\u7fa4\u76d1\u63a7 - \u5f00\u53d1\u4e0e\u8fd0\u7ef4\u4e4b\u95f4\u7684\u6c9f\u901a\u6865\u6881 \u963f\u91cc\u4e91/\u817e\u8baf\u4e91\u7684\u5bb9\u5668\u5316\u5e94\u7528 \u4e8c\u3001\u521d\u8bc6Docker \u00b6 1. \u57fa\u672c\u4ecb\u7ecd \u00b6 \u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u57fa\u4e8e Go \u8bed\u8a00\u5f00\u53d1 \u5bb9\u5668\u662f\u5b8c\u5168\u4f7f\u7528\u6c99\u7bb1\u673a\u5236,\u5bb9\u5668\u5f00\u9500\u6781\u4f4e Docker\u5c31\u662f\u5bb9\u5668\u5316\u6280\u672f\u7684\u4ee3\u540d\u8bcd Docker\u4e5f\u5177\u5907\u4e00\u5b9a\u865a\u62df\u5316\u804c\u80fd 2. \u53d1\u5c55\u8fc7\u7a0b \u00b6 \u3002\u3002\u3002 3. \u57fa\u4e8e CentOS \u7684\u5b89\u88c5 \u00b6 \u5b89\u88c5\u6b65\u9aa4 \u00b6 \u5b89\u88c5\u5de5\u5177\u5305\u53ca\u5fc5\u8981\u7ec4\u5efa yum install -y yum-utils device-mapper-persistent-data lvm2 yum-utils : yum\u5de5\u5177\u5b89\u88c5\u5305\uff0c\u7b80\u5316\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5b89\u88c5\u6e90\u7684\u914d\u7f6e\u8fc7\u7a0b device-mapper-persistent-data && lvm2 : Docker \u6240\u4f7f\u7528\u7684\u6570\u636e\u5b58\u50a8\u9a71\u52a8\u3002 \u8bbe\u7f6e\u5b89\u88c5\u8f6f\u4ef6\u6e90\u4fe1\u606f yum-config-manager --add-repo http://mirrors.aliyun.com/docker-cn/linux/centos/docker-ce.repo yum-config-manager : yum-utils \u6240\u63d0\u4f9b\u7684\u4fee\u6539\u5b89\u88c5\u6e90\u5de5\u5177 \u5feb\u901f\u7f13\u5b58\u4e0b\u8f7d yum makecache fast \u5b89\u88c5Docker yum -y install docker-ce Docker \u670d\u52a1\u542f\u52a8 service docker start \u67e5\u770b\u7248\u672c docker version \u53c2\u8003\u6587\u6863 \u963f\u91cc\u4e91 Docker CE \u955c\u50cf \u914d\u7f6e\u963f\u91cc\u4e91\u52a0\u901f\u670d\u52a1 \u00b6 \u4e00\u3001\u767b\u5f55\u963f\u91cc\u4e91\uff0c\u8fdb\u5165**\u5bb9\u5668\u955c\u50cf\u670d\u52a1 - \u7ba1\u7406\u63a7\u5236\u53f0**\u3002 \u4e8c\u3001\u955c\u50cf\u52a0\u901f\u5668 https://16yagsawkrt.mirror.aliyuncs.com - \u6bcf\u4e2a\u4eba\u7684\u955c\u50cf\u52a0\u901f\u5668\u4e0d\u540c\uff0c\u8bf7\u4e0d\u8981\u51fa\u793a - \u6b64\u5904\u5df2\u8fdb\u884c\u6df7\u6dc6\u5904\u7406\uff0c\u8bf7\u52ff\u4f7f\u7528\u8be5\u5b57\u7b26 \u4e09\u3001\u64cd\u4f5c\u6587\u6863 CentOS \u5b89\u88c5/\u5347\u7ea7Docker\u5ba2\u6237\u7aef \u914d\u7f6e\u955c\u50cf\u52a0\u901f\u5668 # \u521b\u5efa\u6587\u4ef6\u5939 sudo mkdir -p /etc/docker # \u5199\u5165\u52a0\u901f\u5668\u5730\u5740 sudo tee /etc/docker/daemon.json <<-'EOF' { \"registry-mirrors\": [\"https://16yagsawkrt.mirror.aliyuncs.com\"] } EOF # \u91cd\u8f7d sudo systemctl daemon-reload sudo systemctl restart docker \u7f51\u7edc\u6d4b\u8bd5 \u00b6 # \u62c9\u53d6 docker pull hello-world # \u8fd0\u884c docker run hello-world \u4e09\u3001Docker \u57fa\u672c\u6982\u5ff5 \u00b6 1. \u5bb9\u5668\u5316\u5e73\u53f0 \u00b6 Docker \u63d0\u4f9b\u5e94\u7528\u6253\u5305\uff0c\u90e8\u7f72\u4e0e\u8fd0\u884c\u5e94\u7528\u7684\u5bb9\u5668\u5316\u5e73\u53f0 \u5e94\u7528\u7a0b\u5e8f Docker Engine \u53ef\u7528\u8d44\u6e90\uff08\u7269\u7406\u673a/\u865a\u62df\u673a\uff09 2. Docker \u7cfb\u7edf\u7ed3\u6784 \u00b6 Server - docker daemon REST API Clent - docker CLI 2 && 3 \u91c7\u7528\u6807\u51c6http\u534f\u8bae CS \u4f18\u52bf \u5bb9\u5668\u4e0e\u955c\u50cf \u955c\u50cf\uff1a\u955c\u50cf\u662f\u53ea\u8bfb\u7684\u6587\u4ef6\u3002\u63d0\u4f9b\u4e86\u8fd0\u884c\u7a0b\u5e8f\u5b8c\u6574\u7684\u8f6f\u786c\u4ef6\u8d44\u6e90\uff0c\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u201c\u96c6\u88c5\u7bb1\u201d\u3002 \u5bb9\u5668\uff1a\u5bb9\u5668\u662f\u955c\u50cf\u7684\u5b9e\u4f8b\u3002\u7531Docker\u8d1f\u8d23\u521b\u5efa\uff0c\u5bb9\u5668\u4e4b\u95f4\u5f7c\u6b64\u9694\u79bb\u3002 3. Docker \u6267\u884c\u6d41\u7a0b \u00b6 docker client: \u53d1\u9001\u547d\u4ee4 docker host: \u63a5\u53d7\u547d\u4ee4\u5e76\u5904\u7406 docker registry: \u6ce8\u518c\u4e2d\u5fc3\u63d0\u4f9b\u5927\u91cf\u5730\u955c\u50cf docker pull : \u62c9\u53d6\u955c\u50cf\u5230\u672c\u5730 docker run :\u521b\u5efa\u5e76\u8fd0\u884c\u5bb9\u5668 \u56db\u3001Dcoker \u5e38\u7528\u547d\u4ee4 \u00b6 # \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62bd\u53d6\u955c\u50cf docker pull image_name<:tags> # \u67e5\u770b\u672c\u5730\u955c\u50cf docker images # \u521b\u5efa\u5bb9\u5668\uff0c\u542f\u52a8\u5e94\u7528\uff08\u5982\u679c\u672c\u5730\u4ed3\u5e93\u6ca1\u6709\u955c\u50cf\uff0c\u90a3\u4e48\u4f1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u540e\u518d\u8fd0\u884c\u5e94\u7528) docker run image_name<:tags> # \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u955c\u50cf docker ps # \u5220\u9664\u5bb9\u5668 docker rm <-f> container_id # \u5220\u9664\u955c\u50cf docker rmi <-f> image_name<:tags> \u5728\u5b98\u65b9\u8fdc\u7a0b\u955c\u50cf\u4ed3\u5e93\uff1a hub.docker.com \u641c\u7d22\u955c\u50cf Supported tags and respective Dockerfile links Quick reference What is xxx? How to use this image? License \u83b7\u53d6\u955c\u50cf\uff0c\u8fd0\u884c\u5e94\u7528 # \u67e5\u770b\u672c\u5730\u955c\u50cf docker images # \u62c9\u53d6 docker pull tomcat # \u5b98\u7f51\u67e5\u770b\u9700\u8981\u7684\u7248\u672c docker pull tomcat:xxx docker run tomcat docker run tomcat:xxx docker run -p 8000:8080 tomcat # \u67e5\u770b\u7f51\u7edc netstat -tulpn # -d \u540e\u53f0\u8fd0\u884c docker run -p 8000:8080 -d tomcat # \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u955c\u50cf docker ps docker stop container_id docker rm container_id docker rm -f container_id docker rmi image_name Docker \u5bbf\u4e3b\u673a\u4e0e\u5bb9\u5668\u901a\u8baf \u00b6 \u4f7f\u7528\u7aef\u53e3\u6620\u5c04\uff1a 1. \u4f7f\u7528\u5bbf\u4e3b\u673a 8000 port \u6620\u5c04\u5bb9\u5668\u5e94\u7528 tomcat Expose 8080 2. \u5bf9\u5916\u59cb\u7ec8\u66b4\u9732 \u5bbf\u4e3b\u673aIP & 8000 port \u4e94\u3001\u5bb9\u5668\u5185\u90e8\u7ed3\u6784 \u00b6 \u67e5\u770b\u5b98\u65b9\u955c\u50cf\u4fe1\u606f \u5185\u90e8\u7ed3\u6784 Tomcat:lastest - Linux(Red Hat 4.8.5-28) - Jdk(1.8.0-222) - Apache Tomcat/8.5.46 \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 docker exec [-it] container_id \u547d\u4ee4 - exec : \u5728\u5bf9\u5e94\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 - -it : \u91c7\u7528\u4ea4\u4e92\u5f0f\u65b9\u5f0f\u6267\u884c\u547d\u4ee4 - \u5b9e\u4f8b\uff1a docker exec -it /bin/bash # \u67e5\u770b\u672c\u5730\u6587\u4ef6 ls # \u67e5\u770bLinux \u7248\u672c cat /proc/version # \u67e5\u770bJava \u7248\u672c java -version ... \u6240\u6709\u672c\u5730\u666f\u8c61\u548c\u5bb9\u5668\u5b58\u50a8\u76ee\u5f55\uff1a /var/lib/docker \u516d\u3001\u5bb9\u5668\u751f\u547d\u5468\u671f \u00b6 # \u62c9\u53d6 docker pull hello-world # \u521b\u5efa docker create hello-world # \u67e5\u770b\u6240\u6709\u955c\u50cf\u72b6\u6001 docker ps -a docker start xxx_id # status: Up about ... docker pause xxx_id # status: Up about a minute(Paused) docker unpause xxx_id # status: Up about ... docker stop xxx_id # status: Exited 2 seconds ago docker rm -f xxx_id \u4e03\u3001Dockerfile \u6784\u4ef6\u955c\u50cf \u00b6 1. Dockerfile\u955c\u50cf\u63cf\u8ff0\u6587\u4ef6 \u00b6 Dockerfile\u662f\u4e00\u4e2a\u5305\u542b\u7528\u4e8e\u7ec4\u5408\u955c\u50cf\u7684\u547d\u4ee4\u7684\u6587\u672c\u6587\u6863 Docker\u901a\u8fc7\u8bfb\u53d6Dockerfile\u4e2d\u7684\u6307\u4ee4\u6309\u6b65\u81ea\u52a8\u751f\u6210\u955c\u50cf \u547d\u4ee4\uff1a docker build -t \u673a\u6784/\u955c\u50cf\u540d<:tags> Dockerfile\u76ee\u5f55 \u6ce8\u610f\uff1a Dockerfile\u6587\u4ef6\u540d\u4e00\u5b9a\u662f Dockerfile . \u6848\u4f8b\uff1a\u81ea\u5b9a\u4e49\u6784\u5efatomcat webapp # \u8bbe\u7f6e\u57fa\u51c6\u955c\u50cf FROM tomcat:lastest # \u8bf4\u660e\u673a\u6784 MAINTAINER abookworm.site # \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55, \u4e0d\u5b58\u5728\u5219\u521b\u5efa WORKDIR /usr/local/tomcat/webapps # \u590d\u5236\u672c\u5730\u6587\u4ef6\u5230\u8fdc\u7a0b\u6587\u4ef6 ADD docker-web ./docker-web \u67e5\u770b\u57fa\u51c6\u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 # \u67e5\u770b\u5de5\u4f5c\u76ee\u5f55 docker ps # \u4ea4\u4e92\u5f0f\u8fd0\u884c docker exec -it xxx_id /bin/bash # \u67e5\u770b\u5185\u90e8\u7ed3\u6784 ls # \u5b9a\u4f4d\u81ea\u5b9a\u4e49\u76ee\u5f55 cd webapps \u6784\u5efa\u5b89\u88c5 # \u5207\u6362\u76ee\u5f55 cd Dockerfile_dir # \u4f7f\u7528Dockerfile\u6784\u5efa\u955c\u50cf docker build -t abookworm.site/mywebapp:1.0 . # \u8fd0\u884c docker run abookworm.site/mywebapp:1.0 - docker build - -t : \u673a\u6784\u540d\u79f0 + \u5e94\u7528\u540d\u79f0 + \u7248\u672c\u53f7 - . : \u6784\u5efa\u6240\u5b9a\u4f4d\u7684\u76ee\u5f55 2. \u955c\u50cf\u5206\u5c42\uff08Layer)\u6982\u5ff5 \u00b6 \u5c42\u7ea7 1. \u955c\u50cf\u5c42\uff1a\u53ea\u8bfb 2. \u5bb9\u5668\u5c42\uff1a\u53ef\u8bfb\u53ef\u5199 Dockerfile\u6267\u884c\u8fc7\u7a0b\u5206\u6790 1. \u6309\u5c42\u5806\u53e0\u6267\u884c 2. \u6784\u5efa\u4e34\u65f6\u5bb9\u5668\uff0c\u5373\u4fdd\u5b58\u5feb\u7167 3. Dockerfile \u57fa\u7840\u547d\u4ee4 \u00b6 FROM - \u57fa\u4e8e\u57fa\u51c6\u666f\u8c61 FROM centos \uff1a\u5236\u4f5c\u57fa\u51c6\u955c\u50cf\uff08\u57fa\u4e8ecentos:lastest) FROM scratch \uff1a\u4e0d\u4f9d\u8d56\u4efb\u4f55\u57fa\u51c6\u955c\u50cfbase image FROM tomcat:9.0.22-jadk8-openjdk \u6ce8\u610f\uff1a\u5c3d\u91cf\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684 Base Image LABEL & MAINTAINER - \u8bf4\u660e\u4fe1\u606f - MAINTAINER abookworm.site - LABEL version = \"1.0\" - LABEL description = \"\u58f9\u4e66\u540a\" WORKDIR - \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55 - WORKDIR /usr/local - WORKDIR /usr/local/newdir \uff1a\u81ea\u52a8\u521b\u5efa \u6ce8\u610f\uff1a\u5c3d\u91cf\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 ADD & COPY - \u590d\u5236\u6587\u4ef6 ADD hello / \uff1a\u590d\u5236\u5230\u6839\u8def\u5f84 ADD test.tar.gz / \uff1a\u6dfb\u52a0\u6839\u76ee\u5f55\uff0c\u5e76\u81ea\u52a8\u89e3\u538b ADD \u9664\u4e86\u590d\u5236\uff0c\u8fd8\u5177\u5907\u6dfb\u52a0\u8fdc\u7a0b\u6587\u4ef6\u529f\u80fd ENV - \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf - ENV JAVA_HOME /usr/local/openjdk8 - RUN ${JAVA_HOME}/bin/java - java test.jar \u6ce8\u610f\uff1a\u5c3d\u91cf\u4f7f\u7528\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u63d0\u9ad8\u7a0b\u5e8f\u7ef4\u62a4\u6027 4. Dockerfile \u6267\u884c\u547d\u4ee4 \u00b6 RUN : \u5728 Build \u6784\u5efa\u65f6\u6267\u884c\u547d\u4ee4 ENTRYPOINT : \u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u547d\u4ee4 CMD : \u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u9ed8\u8ba4\u7684\u547d\u4ee4\u6216\u53c2\u6570 \u4e09\u547d\u4ee4\u6267\u884c\u65f6\u673a\u4e0d\u540c\uff1a | \u6267\u884c\u65f6\u673a | \u6267\u884c\u547d\u4ee4 | | --------------------- | -------------------------------------- | | docker build \u521b\u5efa\u955c\u50cf | RUN \u6267\u884c\uff0c\u5728\u6784\u5efa\u955c\u50cf\u65f6\u6267\u884c\u547d\u4ee4 | | docker run \u521b\u5efa\u5bb9\u5668 | CMD & ENTRYPOINT\uff0c\u5728\u5bb9\u5668\u521b\u5efa\u65f6\u6267\u884c\u547d\u4ee4 | RUN - \u6784\u5efa\u65f6\u8fd0\u884c \u00b6 \u4e24\u79cd\u8fd0\u884c\u65b9\u5f0f\u683c\u5f0f\uff1a - Shell \u547d\u4ee4\u683c\u5f0f\uff1a RUN yum install -y vim - Exec \u547d\u4ee4\u683c\u5f0f\uff1a RUN [\"yum\", \"install\", \"-y\", \"vim\"] Shell\u8fd0\u884c\u65b9\u5f0f\uff1a - \u4f7f\u7528Shell\u6267\u884c\u65f6\uff0c\u5f53\u524dshell\u662f\u7236\u8fdb\u7a0b\uff0c\u751f\u6210\u4e00\u4e2a\u5b50shell\u8fdb\u7a0b - \u5728\u5b50shell\u4e2d\u6267\u884c\u811a\u672c\u3002\u811a\u672c\u6267\u884c\u5b8c\u6bd5\uff0c\u9000\u51fa\u5b50shell\uff0c\u56de\u5230\u5f53\u524dshell\u3002 Exec \u8fd0\u884c\u65b9\u5f0f\uff1a - \u4f7f\u7528Exec\u65b9\u5f0f\uff0c\u4f1a\u7528Exec\u8fdb\u7a0b\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\uff0c\u5e76\u4e14\u4fdd\u6301PID\u4e0d\u53d8 - \u6267\u884c\u5b8c\u6bd5\uff0c\u76f4\u63a5\u9000\u51fa\uff0c\u5e76\u4e0d\u4f1a\u9000\u56de\u4e4b\u524d\u7684\u8fdb\u7a0b\u73af\u5883 ENTRYPOINT \u542f\u52a8\u547d\u4ee4 \u00b6 ENTRYPOINT (\u5165\u53e3\u70b9)\u7528\u4e8e\u5728\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u547d\u4ee4 Dockerfile\u4e2d\u53ea\u6709\u6700\u540e\u4e00\u4e2aENTRYPOINT\u4f1a\u88ab\u6267\u884c ENTRYPOINT [\"ps\"] \uff1a\u63a8\u8350\u4f7f\u7528Exec\u683c\u5f0f CMD \u9ed8\u8ba4\u547d\u4ee4 \u00b6 CMD\u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4 \u5982Dockerfile\u4e2d\u51fa\u73b0\u591a\u4e2aCMD,\u5219\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u88ab\u6267\u884c \u5982\u5bb9\u5668\u542f\u52a8\u65f6\u9644\u52a0\u6307\u4ee4,\u5219CMD\u88ab\u5ffd\u7565 CMD [\"ps\" , \"-ef\"] : \u63a8\u8350\u4f7f\u7528Exec\u683c\u5f0f \u6848\u4f8b1\uff1a \u521b\u5efa\u6587\u4ef6 FROM centos RUN [\"echo\", \"Image building...\"] CMD [\"echo\", \"container starting... \"] \u6784\u5efa\u955c\u50cf docker build -t abookworm.site/docker_run_cmd . print Out: Image building... \u542f\u52a8\u5bb9\u5668 + \u4ec5\u955c\u50cf\u540d docker run abookworm.site/docker_run_cmd print out:container starting... \u542f\u52a8\u5bb9\u5668 + \u6267\u884c\u547d\u4ee4 docker run abookworm.site/docker_run_cmd ls print Out: \u5f53\u524d\u6587\u4ef6\u5939\u5185\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5373 ls \u5185\u5bb9 \u6848\u4f8b2: FROM centos RUN [\"echo\", \"Image building...\"] ENTRYPOINT [\"echo\", \"container starting... \"] - \u6b64\u6587\u4ef6\u64cd\u4f5c\u540e\uff0c\u6548\u679c\u540c\u6848\u4f8b1. \u6848\u4f8b3: \u521b\u5efa\u6587\u4ef6 FROM centos RUN [\"echo\", \"Image building...\"] ENTRYPOINT [\"echo\", \"container starting... \"] ENTRYPOINT [\"ps\"] CMD [\"-ef\"] \u6784\u5efa\u955c\u50cf docker build -t abookworm.site/docker_cmd_entrypoint . print Out: Image building... \u542f\u52a8\u5bb9\u5668 + \u4ec5\u955c\u50cf\u540d docker run abookworm.site/docker_cmd_entrypoint print out: ps -ef \u547d\u4ee4\u6548\u679c entrypoint \u547d\u4ee4\u4e3a\u547d\u4ee4\u5165\u53e3\uff0c\u4e24\u884c\u547d\u4ee4\u4ec5\u4f1a\u6267\u884c\u6700\u540e\u4e00\u884c\u547d\u4ee4 \u542f\u52a8\u5bb9\u5668 + \u6267\u884c\u547d\u4ee4 docker run abookworm.site/docker_cmd_entrypoint -aux print Out: ps -aux \u547d\u4ee4\u6548\u679c \u6b64\u65f6\uff0ccmd \u547d\u4ee4\u6240\u643a\u5e26\u7684\u53c2\u6570\u88ab\u66ff\u6362\u3002 \u516b\u3001\u6848\u4f8b\uff1a\u6784\u5efaRedis\u955c\u50cf \u00b6 \u521b\u5efa\u6587\u4ef6 FROM centos RUN [\"yum\", \"install\", \"-y\", \"gcc\", \"gcc-c++\", \"net-tools\", \"make\"] WORKDIR /usr/local ADD redis-4.0.14.tar.gz WORKDIR /usr/local/redis-4.0.14/src RUN make && make install WORKDIR /usr/local/redis-4.0.14 ADD redis-7000.cnf EXPOSE 7000 CMD [\"redis-server\", \"redis-7000.conf\"] \u521b\u5efa\u955c\u50cf docker build -t abookworm.site/myredis:4.0.14 . \u8fd0\u884c docker run -p 7000:7000 abookworm.site/myredis:4.0.14 \u9a8c\u8bc1\u7aef\u53e3\u68c0\u6d4b netstat -tulpn 7000 \u7aef\u53e3\uff1adocker-proxy \u9a8c\u8bc1\u5185\u90e8\u6267\u884c docker exec -it contain_id /bin/bash \u4e5d\u3001 \u5bb9\u5668\u95f4\u901a\u8baf \u00b6 1. \u5bb9\u5668\u95f4Link\u5355\u5411\u901a\u8baf \u00b6 \u5bb9\u5668\u95f4\u7684\u5355\u5411\u8bbf\u95ee\uff1a - \u865a\u62dfIP - \u5bb9\u5668\u540d\u79f0 # \u8fd0\u884c databases docker run -d --name database -it centos /bin/bash # \u8fd0\u884c web \u5e76\u8fde\u63a5database docker run -d --name web --link database tomcat # \u67e5\u770b\u8fd0\u884c\u72b6\u6001 docker ps # \u67e5\u770b\u5355\u4e2a\u5bb9\u5668\u4fe1\u606f docker inspect 9814e5509196 docker inspect 426dcefc5dc2 # \u6b64\u65f6\u53ef\u4ee5\u76f4\u63a5\u4e92\u76f8ping ipaddress # \u8fdb\u5165 web \u5185\u90e8\u4ea4\u4e92 docker exec -it 426dcefc5dc2 /bin/bash # \u67e5\u770b\u662f\u5426\u8fde\u63a5, \u65e2web\u5355\u5411\u901a\u8bafdatabase ping database - docker inspect container_id \uff1a \u67e5\u770b\u8fd0\u884c\u5bb9\u5668\u7684\u76f8\u5173\u4fe1\u606f - NetworkSettings: IPADDRESS 2. Bridge\u7f51\u6865\u53cc\u5411\u901a\u4fe1 \u00b6 # \u8fd0\u884c databases docker run -d --name database -it centos /bin/bash # \u8fd0\u884c web \u5e76\u8fde\u63a5database docker run -d --name web tomcat # \u67e5\u770b\u8fd0\u884c\u72b6\u6001 docker ps # \u67e5\u770b\u5355\u4e2a\u5bb9\u5668\u4fe1\u606f docker inspect 9814e5509196 docker inspect b33aebe5a67a # \u67e5\u770b\u5bb9\u5668\u7f51\u7edc\u72b6\u6001 docker network ls # \u521b\u5efa\u5b50\u5b9a\u4e49\u7f51\u6865 docker network create -d bridge my-bridge # \u67e5\u770b\u5b50\u5b9a\u4e49\u7f51\u6865 docker network ls # \u521b\u5efa\u4e92\u901a\u7f51\u6865 docker network connect my-bridge web docker network connect my-bridge database # \u8fdb\u5165 web \u5185\u90e8\u4ea4\u4e92 docker exec -it b33aebe5a67a /bin/bash # \u67e5\u770b\u662f\u5426\u8fde\u63a5, \u65e2web\u5355\u5411\u901a\u8bafdatabase ping database # \u8fdb\u5165 database \u5185\u90e8\u4ea4\u4e92 docker exec -it 9814e5509196 /bin/bash # \u67e5\u770b\u662f\u5426\u8fde\u63a5 ping web \u7f51\u6865\u5b9e\u73b0\u539f\u7406 \u00b6 3. Volume \u5bb9\u5668\u95f4\u5171\u4eab\u6570\u636e \u00b6 \u6570\u636e\u5171\u4eab\u7684\u9700\u8981 \u00b6 Volume \u6302\u8f7d\u64cd\u4f5c \u00b6 \u8bbe\u7f6e -v \u6302\u8f7d\u5bbf\u4e3b\u673a\u76ee\u5f55 docker run --name container_name -v \u5bbf\u4e3b\u673a\u76ee\u5f55\uff1a\u5bb9\u5668\u5185\u6302\u8f7d\u8def\u5f84 \u955c\u50cf\u540d docker run --name t1 -v /usr/webapps:/usr/local/tomcat/webapps tomcat \u8bbe\u7f6e --volumes-from \u5171\u4eab\u5bb9\u5668\u5185\u6302\u8f7d\u70b9 # \u521b\u5efa\u5171\u4eab\u5bb9\u5668 docker create --name webpage -v /webapps:/tomcat/webapps tomcat /bin/true # \u5171\u4eab\u5bb9\u5668\u6302\u8f7d\u70b9 docker run --volumes-from webpage ==name t1 -d tomcat","title":"Docker \u6700\u4f73\u5b9e\u8df5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#docker","text":"","title":"Docker \u6700\u4f73\u5b9e\u8df5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#content","text":"\u8bb2\u89e3Docker\u539f\u7406\u4e0e\u6267\u884c\u547d\u4ee4 \u8bb2\u89e3Docker-Compose\u5feb\u901f\u90e8\u7f72Docker\u5e94\u7528","title":"Content"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_1","text":"\u5386\u53f2\u6f14\u5316\uff1a \u7269\u7406\u673a\u65f6\u4ee3 ---> \u865a\u62df\u673a\u65f6\u4ee3 ---> \u5bb9\u5668\u5316\u65f6\u4ee3","title":"\u4e00\u3001\u5bb9\u5668\u5316\u6280\u672f"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#1","text":"\u90e8\u7f72\u975e\u5e38\u6162 \u6210\u672c\u5f88\u9ad8 \u8d44\u6e90\u6d6a\u8d39 \u96be\u4e8e\u6269\u5c55\u4e0e\u8fc1\u79fb \u53d7\u5236\u4e8e\u786c\u4ef6","title":"1. \u7269\u7406\u673a\u65f6\u4ee3"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2","text":"\u4f18\u70b9\uff1a - \u591a\u90e8\u7f72 - \u8d44\u6e90\u6c60\uff1a\u786c\u4ef6\u8d44\u6e90 - \u8d44\u6e90\u9694\u79bb - \u5f88\u5bb9\u6613\u6269\u5c55 \u95ee\u9898\uff1a - VM\u9700\u8981\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\uff1a\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u6d6a\u8d39\u4e86\u8d44\u6e90","title":"2. \u865a\u62df\u5316\u65f6\u4ee3"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#3","text":"\u6240\u89e3\u51b3\u7684\u95ee\u9898 - \u6253\u7834\u5f00\u53d1\u4e0e\u8fd0\u7ef4\u4e4b\u95f4\u7684\u8d44\u6e90\u914d\u7f6e\u94fe\u63a5 - \u6807\u51c6\u5316\u5730\u5e94\u7528\u6253\u5305 \u5e94\u7528\u573a\u666f - \u6807\u51c6\u5316\u7684\u8fc1\u79fb\u65b9\u5f0f - \u7edf\u4e00\u7684\u53c2\u6570\u914d\u7f6e - \u81ea\u52a8\u5316\u90e8\u7f72 - \u5e94\u7528\u96c6\u7fa4\u76d1\u63a7 - \u5f00\u53d1\u4e0e\u8fd0\u7ef4\u4e4b\u95f4\u7684\u6c9f\u901a\u6865\u6881 \u963f\u91cc\u4e91/\u817e\u8baf\u4e91\u7684\u5bb9\u5668\u5316\u5e94\u7528","title":"3. \u5bb9\u5668\u5316\u65f6\u4ee3"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#docker_1","text":"","title":"\u4e8c\u3001\u521d\u8bc6Docker"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#1_1","text":"\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u57fa\u4e8e Go \u8bed\u8a00\u5f00\u53d1 \u5bb9\u5668\u662f\u5b8c\u5168\u4f7f\u7528\u6c99\u7bb1\u673a\u5236,\u5bb9\u5668\u5f00\u9500\u6781\u4f4e Docker\u5c31\u662f\u5bb9\u5668\u5316\u6280\u672f\u7684\u4ee3\u540d\u8bcd Docker\u4e5f\u5177\u5907\u4e00\u5b9a\u865a\u62df\u5316\u804c\u80fd","title":"1. \u57fa\u672c\u4ecb\u7ecd"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2_1","text":"\u3002\u3002\u3002","title":"2. \u53d1\u5c55\u8fc7\u7a0b"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#3-centos","text":"","title":"3. \u57fa\u4e8e CentOS \u7684\u5b89\u88c5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_2","text":"\u5b89\u88c5\u5de5\u5177\u5305\u53ca\u5fc5\u8981\u7ec4\u5efa yum install -y yum-utils device-mapper-persistent-data lvm2 yum-utils : yum\u5de5\u5177\u5b89\u88c5\u5305\uff0c\u7b80\u5316\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5b89\u88c5\u6e90\u7684\u914d\u7f6e\u8fc7\u7a0b device-mapper-persistent-data && lvm2 : Docker \u6240\u4f7f\u7528\u7684\u6570\u636e\u5b58\u50a8\u9a71\u52a8\u3002 \u8bbe\u7f6e\u5b89\u88c5\u8f6f\u4ef6\u6e90\u4fe1\u606f yum-config-manager --add-repo http://mirrors.aliyun.com/docker-cn/linux/centos/docker-ce.repo yum-config-manager : yum-utils \u6240\u63d0\u4f9b\u7684\u4fee\u6539\u5b89\u88c5\u6e90\u5de5\u5177 \u5feb\u901f\u7f13\u5b58\u4e0b\u8f7d yum makecache fast \u5b89\u88c5Docker yum -y install docker-ce Docker \u670d\u52a1\u542f\u52a8 service docker start \u67e5\u770b\u7248\u672c docker version \u53c2\u8003\u6587\u6863 \u963f\u91cc\u4e91 Docker CE \u955c\u50cf","title":"\u5b89\u88c5\u6b65\u9aa4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_3","text":"\u4e00\u3001\u767b\u5f55\u963f\u91cc\u4e91\uff0c\u8fdb\u5165**\u5bb9\u5668\u955c\u50cf\u670d\u52a1 - \u7ba1\u7406\u63a7\u5236\u53f0**\u3002 \u4e8c\u3001\u955c\u50cf\u52a0\u901f\u5668 https://16yagsawkrt.mirror.aliyuncs.com - \u6bcf\u4e2a\u4eba\u7684\u955c\u50cf\u52a0\u901f\u5668\u4e0d\u540c\uff0c\u8bf7\u4e0d\u8981\u51fa\u793a - \u6b64\u5904\u5df2\u8fdb\u884c\u6df7\u6dc6\u5904\u7406\uff0c\u8bf7\u52ff\u4f7f\u7528\u8be5\u5b57\u7b26 \u4e09\u3001\u64cd\u4f5c\u6587\u6863 CentOS \u5b89\u88c5/\u5347\u7ea7Docker\u5ba2\u6237\u7aef \u914d\u7f6e\u955c\u50cf\u52a0\u901f\u5668 # \u521b\u5efa\u6587\u4ef6\u5939 sudo mkdir -p /etc/docker # \u5199\u5165\u52a0\u901f\u5668\u5730\u5740 sudo tee /etc/docker/daemon.json <<-'EOF' { \"registry-mirrors\": [\"https://16yagsawkrt.mirror.aliyuncs.com\"] } EOF # \u91cd\u8f7d sudo systemctl daemon-reload sudo systemctl restart docker","title":"\u914d\u7f6e\u963f\u91cc\u4e91\u52a0\u901f\u670d\u52a1"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_4","text":"# \u62c9\u53d6 docker pull hello-world # \u8fd0\u884c docker run hello-world","title":"\u7f51\u7edc\u6d4b\u8bd5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#docker_2","text":"","title":"\u4e09\u3001Docker \u57fa\u672c\u6982\u5ff5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#1_2","text":"Docker \u63d0\u4f9b\u5e94\u7528\u6253\u5305\uff0c\u90e8\u7f72\u4e0e\u8fd0\u884c\u5e94\u7528\u7684\u5bb9\u5668\u5316\u5e73\u53f0 \u5e94\u7528\u7a0b\u5e8f Docker Engine \u53ef\u7528\u8d44\u6e90\uff08\u7269\u7406\u673a/\u865a\u62df\u673a\uff09","title":"1. \u5bb9\u5668\u5316\u5e73\u53f0"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2-docker","text":"Server - docker daemon REST API Clent - docker CLI 2 && 3 \u91c7\u7528\u6807\u51c6http\u534f\u8bae CS \u4f18\u52bf \u5bb9\u5668\u4e0e\u955c\u50cf \u955c\u50cf\uff1a\u955c\u50cf\u662f\u53ea\u8bfb\u7684\u6587\u4ef6\u3002\u63d0\u4f9b\u4e86\u8fd0\u884c\u7a0b\u5e8f\u5b8c\u6574\u7684\u8f6f\u786c\u4ef6\u8d44\u6e90\uff0c\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u201c\u96c6\u88c5\u7bb1\u201d\u3002 \u5bb9\u5668\uff1a\u5bb9\u5668\u662f\u955c\u50cf\u7684\u5b9e\u4f8b\u3002\u7531Docker\u8d1f\u8d23\u521b\u5efa\uff0c\u5bb9\u5668\u4e4b\u95f4\u5f7c\u6b64\u9694\u79bb\u3002","title":"2. Docker \u7cfb\u7edf\u7ed3\u6784"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#3-docker","text":"docker client: \u53d1\u9001\u547d\u4ee4 docker host: \u63a5\u53d7\u547d\u4ee4\u5e76\u5904\u7406 docker registry: \u6ce8\u518c\u4e2d\u5fc3\u63d0\u4f9b\u5927\u91cf\u5730\u955c\u50cf docker pull : \u62c9\u53d6\u955c\u50cf\u5230\u672c\u5730 docker run :\u521b\u5efa\u5e76\u8fd0\u884c\u5bb9\u5668","title":"3. Docker \u6267\u884c\u6d41\u7a0b"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#dcoker","text":"# \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62bd\u53d6\u955c\u50cf docker pull image_name<:tags> # \u67e5\u770b\u672c\u5730\u955c\u50cf docker images # \u521b\u5efa\u5bb9\u5668\uff0c\u542f\u52a8\u5e94\u7528\uff08\u5982\u679c\u672c\u5730\u4ed3\u5e93\u6ca1\u6709\u955c\u50cf\uff0c\u90a3\u4e48\u4f1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u540e\u518d\u8fd0\u884c\u5e94\u7528) docker run image_name<:tags> # \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u955c\u50cf docker ps # \u5220\u9664\u5bb9\u5668 docker rm <-f> container_id # \u5220\u9664\u955c\u50cf docker rmi <-f> image_name<:tags> \u5728\u5b98\u65b9\u8fdc\u7a0b\u955c\u50cf\u4ed3\u5e93\uff1a hub.docker.com \u641c\u7d22\u955c\u50cf Supported tags and respective Dockerfile links Quick reference What is xxx? How to use this image? License \u83b7\u53d6\u955c\u50cf\uff0c\u8fd0\u884c\u5e94\u7528 # \u67e5\u770b\u672c\u5730\u955c\u50cf docker images # \u62c9\u53d6 docker pull tomcat # \u5b98\u7f51\u67e5\u770b\u9700\u8981\u7684\u7248\u672c docker pull tomcat:xxx docker run tomcat docker run tomcat:xxx docker run -p 8000:8080 tomcat # \u67e5\u770b\u7f51\u7edc netstat -tulpn # -d \u540e\u53f0\u8fd0\u884c docker run -p 8000:8080 -d tomcat # \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u955c\u50cf docker ps docker stop container_id docker rm container_id docker rm -f container_id docker rmi image_name","title":"\u56db\u3001Dcoker \u5e38\u7528\u547d\u4ee4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#docker_3","text":"\u4f7f\u7528\u7aef\u53e3\u6620\u5c04\uff1a 1. \u4f7f\u7528\u5bbf\u4e3b\u673a 8000 port \u6620\u5c04\u5bb9\u5668\u5e94\u7528 tomcat Expose 8080 2. \u5bf9\u5916\u59cb\u7ec8\u66b4\u9732 \u5bbf\u4e3b\u673aIP & 8000 port","title":"Docker \u5bbf\u4e3b\u673a\u4e0e\u5bb9\u5668\u901a\u8baf"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_5","text":"\u67e5\u770b\u5b98\u65b9\u955c\u50cf\u4fe1\u606f \u5185\u90e8\u7ed3\u6784 Tomcat:lastest - Linux(Red Hat 4.8.5-28) - Jdk(1.8.0-222) - Apache Tomcat/8.5.46 \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 docker exec [-it] container_id \u547d\u4ee4 - exec : \u5728\u5bf9\u5e94\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 - -it : \u91c7\u7528\u4ea4\u4e92\u5f0f\u65b9\u5f0f\u6267\u884c\u547d\u4ee4 - \u5b9e\u4f8b\uff1a docker exec -it /bin/bash # \u67e5\u770b\u672c\u5730\u6587\u4ef6 ls # \u67e5\u770bLinux \u7248\u672c cat /proc/version # \u67e5\u770bJava \u7248\u672c java -version ... \u6240\u6709\u672c\u5730\u666f\u8c61\u548c\u5bb9\u5668\u5b58\u50a8\u76ee\u5f55\uff1a /var/lib/docker","title":"\u4e94\u3001\u5bb9\u5668\u5185\u90e8\u7ed3\u6784"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_6","text":"# \u62c9\u53d6 docker pull hello-world # \u521b\u5efa docker create hello-world # \u67e5\u770b\u6240\u6709\u955c\u50cf\u72b6\u6001 docker ps -a docker start xxx_id # status: Up about ... docker pause xxx_id # status: Up about a minute(Paused) docker unpause xxx_id # status: Up about ... docker stop xxx_id # status: Exited 2 seconds ago docker rm -f xxx_id","title":"\u516d\u3001\u5bb9\u5668\u751f\u547d\u5468\u671f"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#dockerfile","text":"","title":"\u4e03\u3001Dockerfile \u6784\u4ef6\u955c\u50cf"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#1-dockerfile","text":"Dockerfile\u662f\u4e00\u4e2a\u5305\u542b\u7528\u4e8e\u7ec4\u5408\u955c\u50cf\u7684\u547d\u4ee4\u7684\u6587\u672c\u6587\u6863 Docker\u901a\u8fc7\u8bfb\u53d6Dockerfile\u4e2d\u7684\u6307\u4ee4\u6309\u6b65\u81ea\u52a8\u751f\u6210\u955c\u50cf \u547d\u4ee4\uff1a docker build -t \u673a\u6784/\u955c\u50cf\u540d<:tags> Dockerfile\u76ee\u5f55 \u6ce8\u610f\uff1a Dockerfile\u6587\u4ef6\u540d\u4e00\u5b9a\u662f Dockerfile . \u6848\u4f8b\uff1a\u81ea\u5b9a\u4e49\u6784\u5efatomcat webapp # \u8bbe\u7f6e\u57fa\u51c6\u955c\u50cf FROM tomcat:lastest # \u8bf4\u660e\u673a\u6784 MAINTAINER abookworm.site # \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55, \u4e0d\u5b58\u5728\u5219\u521b\u5efa WORKDIR /usr/local/tomcat/webapps # \u590d\u5236\u672c\u5730\u6587\u4ef6\u5230\u8fdc\u7a0b\u6587\u4ef6 ADD docker-web ./docker-web \u67e5\u770b\u57fa\u51c6\u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 # \u67e5\u770b\u5de5\u4f5c\u76ee\u5f55 docker ps # \u4ea4\u4e92\u5f0f\u8fd0\u884c docker exec -it xxx_id /bin/bash # \u67e5\u770b\u5185\u90e8\u7ed3\u6784 ls # \u5b9a\u4f4d\u81ea\u5b9a\u4e49\u76ee\u5f55 cd webapps \u6784\u5efa\u5b89\u88c5 # \u5207\u6362\u76ee\u5f55 cd Dockerfile_dir # \u4f7f\u7528Dockerfile\u6784\u5efa\u955c\u50cf docker build -t abookworm.site/mywebapp:1.0 . # \u8fd0\u884c docker run abookworm.site/mywebapp:1.0 - docker build - -t : \u673a\u6784\u540d\u79f0 + \u5e94\u7528\u540d\u79f0 + \u7248\u672c\u53f7 - . : \u6784\u5efa\u6240\u5b9a\u4f4d\u7684\u76ee\u5f55","title":"1. Dockerfile\u955c\u50cf\u63cf\u8ff0\u6587\u4ef6"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2-layer","text":"\u5c42\u7ea7 1. \u955c\u50cf\u5c42\uff1a\u53ea\u8bfb 2. \u5bb9\u5668\u5c42\uff1a\u53ef\u8bfb\u53ef\u5199 Dockerfile\u6267\u884c\u8fc7\u7a0b\u5206\u6790 1. \u6309\u5c42\u5806\u53e0\u6267\u884c 2. \u6784\u5efa\u4e34\u65f6\u5bb9\u5668\uff0c\u5373\u4fdd\u5b58\u5feb\u7167","title":"2. \u955c\u50cf\u5206\u5c42\uff08Layer)\u6982\u5ff5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#3-dockerfile","text":"FROM - \u57fa\u4e8e\u57fa\u51c6\u666f\u8c61 FROM centos \uff1a\u5236\u4f5c\u57fa\u51c6\u955c\u50cf\uff08\u57fa\u4e8ecentos:lastest) FROM scratch \uff1a\u4e0d\u4f9d\u8d56\u4efb\u4f55\u57fa\u51c6\u955c\u50cfbase image FROM tomcat:9.0.22-jadk8-openjdk \u6ce8\u610f\uff1a\u5c3d\u91cf\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684 Base Image LABEL & MAINTAINER - \u8bf4\u660e\u4fe1\u606f - MAINTAINER abookworm.site - LABEL version = \"1.0\" - LABEL description = \"\u58f9\u4e66\u540a\" WORKDIR - \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55 - WORKDIR /usr/local - WORKDIR /usr/local/newdir \uff1a\u81ea\u52a8\u521b\u5efa \u6ce8\u610f\uff1a\u5c3d\u91cf\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 ADD & COPY - \u590d\u5236\u6587\u4ef6 ADD hello / \uff1a\u590d\u5236\u5230\u6839\u8def\u5f84 ADD test.tar.gz / \uff1a\u6dfb\u52a0\u6839\u76ee\u5f55\uff0c\u5e76\u81ea\u52a8\u89e3\u538b ADD \u9664\u4e86\u590d\u5236\uff0c\u8fd8\u5177\u5907\u6dfb\u52a0\u8fdc\u7a0b\u6587\u4ef6\u529f\u80fd ENV - \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf - ENV JAVA_HOME /usr/local/openjdk8 - RUN ${JAVA_HOME}/bin/java - java test.jar \u6ce8\u610f\uff1a\u5c3d\u91cf\u4f7f\u7528\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u63d0\u9ad8\u7a0b\u5e8f\u7ef4\u62a4\u6027","title":"3. Dockerfile \u57fa\u7840\u547d\u4ee4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#4-dockerfile","text":"RUN : \u5728 Build \u6784\u5efa\u65f6\u6267\u884c\u547d\u4ee4 ENTRYPOINT : \u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u547d\u4ee4 CMD : \u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u9ed8\u8ba4\u7684\u547d\u4ee4\u6216\u53c2\u6570 \u4e09\u547d\u4ee4\u6267\u884c\u65f6\u673a\u4e0d\u540c\uff1a | \u6267\u884c\u65f6\u673a | \u6267\u884c\u547d\u4ee4 | | --------------------- | -------------------------------------- | | docker build \u521b\u5efa\u955c\u50cf | RUN \u6267\u884c\uff0c\u5728\u6784\u5efa\u955c\u50cf\u65f6\u6267\u884c\u547d\u4ee4 | | docker run \u521b\u5efa\u5bb9\u5668 | CMD & ENTRYPOINT\uff0c\u5728\u5bb9\u5668\u521b\u5efa\u65f6\u6267\u884c\u547d\u4ee4 |","title":"4. Dockerfile \u6267\u884c\u547d\u4ee4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#run-","text":"\u4e24\u79cd\u8fd0\u884c\u65b9\u5f0f\u683c\u5f0f\uff1a - Shell \u547d\u4ee4\u683c\u5f0f\uff1a RUN yum install -y vim - Exec \u547d\u4ee4\u683c\u5f0f\uff1a RUN [\"yum\", \"install\", \"-y\", \"vim\"] Shell\u8fd0\u884c\u65b9\u5f0f\uff1a - \u4f7f\u7528Shell\u6267\u884c\u65f6\uff0c\u5f53\u524dshell\u662f\u7236\u8fdb\u7a0b\uff0c\u751f\u6210\u4e00\u4e2a\u5b50shell\u8fdb\u7a0b - \u5728\u5b50shell\u4e2d\u6267\u884c\u811a\u672c\u3002\u811a\u672c\u6267\u884c\u5b8c\u6bd5\uff0c\u9000\u51fa\u5b50shell\uff0c\u56de\u5230\u5f53\u524dshell\u3002 Exec \u8fd0\u884c\u65b9\u5f0f\uff1a - \u4f7f\u7528Exec\u65b9\u5f0f\uff0c\u4f1a\u7528Exec\u8fdb\u7a0b\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\uff0c\u5e76\u4e14\u4fdd\u6301PID\u4e0d\u53d8 - \u6267\u884c\u5b8c\u6bd5\uff0c\u76f4\u63a5\u9000\u51fa\uff0c\u5e76\u4e0d\u4f1a\u9000\u56de\u4e4b\u524d\u7684\u8fdb\u7a0b\u73af\u5883","title":"RUN - \u6784\u5efa\u65f6\u8fd0\u884c"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#entrypoint","text":"ENTRYPOINT (\u5165\u53e3\u70b9)\u7528\u4e8e\u5728\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u547d\u4ee4 Dockerfile\u4e2d\u53ea\u6709\u6700\u540e\u4e00\u4e2aENTRYPOINT\u4f1a\u88ab\u6267\u884c ENTRYPOINT [\"ps\"] \uff1a\u63a8\u8350\u4f7f\u7528Exec\u683c\u5f0f","title":"ENTRYPOINT \u542f\u52a8\u547d\u4ee4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#cmd","text":"CMD\u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4 \u5982Dockerfile\u4e2d\u51fa\u73b0\u591a\u4e2aCMD,\u5219\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u88ab\u6267\u884c \u5982\u5bb9\u5668\u542f\u52a8\u65f6\u9644\u52a0\u6307\u4ee4,\u5219CMD\u88ab\u5ffd\u7565 CMD [\"ps\" , \"-ef\"] : \u63a8\u8350\u4f7f\u7528Exec\u683c\u5f0f \u6848\u4f8b1\uff1a \u521b\u5efa\u6587\u4ef6 FROM centos RUN [\"echo\", \"Image building...\"] CMD [\"echo\", \"container starting... \"] \u6784\u5efa\u955c\u50cf docker build -t abookworm.site/docker_run_cmd . print Out: Image building... \u542f\u52a8\u5bb9\u5668 + \u4ec5\u955c\u50cf\u540d docker run abookworm.site/docker_run_cmd print out:container starting... \u542f\u52a8\u5bb9\u5668 + \u6267\u884c\u547d\u4ee4 docker run abookworm.site/docker_run_cmd ls print Out: \u5f53\u524d\u6587\u4ef6\u5939\u5185\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5373 ls \u5185\u5bb9 \u6848\u4f8b2: FROM centos RUN [\"echo\", \"Image building...\"] ENTRYPOINT [\"echo\", \"container starting... \"] - \u6b64\u6587\u4ef6\u64cd\u4f5c\u540e\uff0c\u6548\u679c\u540c\u6848\u4f8b1. \u6848\u4f8b3: \u521b\u5efa\u6587\u4ef6 FROM centos RUN [\"echo\", \"Image building...\"] ENTRYPOINT [\"echo\", \"container starting... \"] ENTRYPOINT [\"ps\"] CMD [\"-ef\"] \u6784\u5efa\u955c\u50cf docker build -t abookworm.site/docker_cmd_entrypoint . print Out: Image building... \u542f\u52a8\u5bb9\u5668 + \u4ec5\u955c\u50cf\u540d docker run abookworm.site/docker_cmd_entrypoint print out: ps -ef \u547d\u4ee4\u6548\u679c entrypoint \u547d\u4ee4\u4e3a\u547d\u4ee4\u5165\u53e3\uff0c\u4e24\u884c\u547d\u4ee4\u4ec5\u4f1a\u6267\u884c\u6700\u540e\u4e00\u884c\u547d\u4ee4 \u542f\u52a8\u5bb9\u5668 + \u6267\u884c\u547d\u4ee4 docker run abookworm.site/docker_cmd_entrypoint -aux print Out: ps -aux \u547d\u4ee4\u6548\u679c \u6b64\u65f6\uff0ccmd \u547d\u4ee4\u6240\u643a\u5e26\u7684\u53c2\u6570\u88ab\u66ff\u6362\u3002","title":"CMD \u9ed8\u8ba4\u547d\u4ee4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#redis","text":"\u521b\u5efa\u6587\u4ef6 FROM centos RUN [\"yum\", \"install\", \"-y\", \"gcc\", \"gcc-c++\", \"net-tools\", \"make\"] WORKDIR /usr/local ADD redis-4.0.14.tar.gz WORKDIR /usr/local/redis-4.0.14/src RUN make && make install WORKDIR /usr/local/redis-4.0.14 ADD redis-7000.cnf EXPOSE 7000 CMD [\"redis-server\", \"redis-7000.conf\"] \u521b\u5efa\u955c\u50cf docker build -t abookworm.site/myredis:4.0.14 . \u8fd0\u884c docker run -p 7000:7000 abookworm.site/myredis:4.0.14 \u9a8c\u8bc1\u7aef\u53e3\u68c0\u6d4b netstat -tulpn 7000 \u7aef\u53e3\uff1adocker-proxy \u9a8c\u8bc1\u5185\u90e8\u6267\u884c docker exec -it contain_id /bin/bash","title":"\u516b\u3001\u6848\u4f8b\uff1a\u6784\u5efaRedis\u955c\u50cf"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_7","text":"","title":"\u4e5d\u3001 \u5bb9\u5668\u95f4\u901a\u8baf"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#1-link","text":"\u5bb9\u5668\u95f4\u7684\u5355\u5411\u8bbf\u95ee\uff1a - \u865a\u62dfIP - \u5bb9\u5668\u540d\u79f0 # \u8fd0\u884c databases docker run -d --name database -it centos /bin/bash # \u8fd0\u884c web \u5e76\u8fde\u63a5database docker run -d --name web --link database tomcat # \u67e5\u770b\u8fd0\u884c\u72b6\u6001 docker ps # \u67e5\u770b\u5355\u4e2a\u5bb9\u5668\u4fe1\u606f docker inspect 9814e5509196 docker inspect 426dcefc5dc2 # \u6b64\u65f6\u53ef\u4ee5\u76f4\u63a5\u4e92\u76f8ping ipaddress # \u8fdb\u5165 web \u5185\u90e8\u4ea4\u4e92 docker exec -it 426dcefc5dc2 /bin/bash # \u67e5\u770b\u662f\u5426\u8fde\u63a5, \u65e2web\u5355\u5411\u901a\u8bafdatabase ping database - docker inspect container_id \uff1a \u67e5\u770b\u8fd0\u884c\u5bb9\u5668\u7684\u76f8\u5173\u4fe1\u606f - NetworkSettings: IPADDRESS","title":"1. \u5bb9\u5668\u95f4Link\u5355\u5411\u901a\u8baf"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2-bridge","text":"# \u8fd0\u884c databases docker run -d --name database -it centos /bin/bash # \u8fd0\u884c web \u5e76\u8fde\u63a5database docker run -d --name web tomcat # \u67e5\u770b\u8fd0\u884c\u72b6\u6001 docker ps # \u67e5\u770b\u5355\u4e2a\u5bb9\u5668\u4fe1\u606f docker inspect 9814e5509196 docker inspect b33aebe5a67a # \u67e5\u770b\u5bb9\u5668\u7f51\u7edc\u72b6\u6001 docker network ls # \u521b\u5efa\u5b50\u5b9a\u4e49\u7f51\u6865 docker network create -d bridge my-bridge # \u67e5\u770b\u5b50\u5b9a\u4e49\u7f51\u6865 docker network ls # \u521b\u5efa\u4e92\u901a\u7f51\u6865 docker network connect my-bridge web docker network connect my-bridge database # \u8fdb\u5165 web \u5185\u90e8\u4ea4\u4e92 docker exec -it b33aebe5a67a /bin/bash # \u67e5\u770b\u662f\u5426\u8fde\u63a5, \u65e2web\u5355\u5411\u901a\u8bafdatabase ping database # \u8fdb\u5165 database \u5185\u90e8\u4ea4\u4e92 docker exec -it 9814e5509196 /bin/bash # \u67e5\u770b\u662f\u5426\u8fde\u63a5 ping web","title":"2. Bridge\u7f51\u6865\u53cc\u5411\u901a\u4fe1"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_8","text":"","title":"\u7f51\u6865\u5b9e\u73b0\u539f\u7406"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#3-volume","text":"","title":"3. Volume \u5bb9\u5668\u95f4\u5171\u4eab\u6570\u636e"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_9","text":"","title":"\u6570\u636e\u5171\u4eab\u7684\u9700\u8981"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#volume","text":"\u8bbe\u7f6e -v \u6302\u8f7d\u5bbf\u4e3b\u673a\u76ee\u5f55 docker run --name container_name -v \u5bbf\u4e3b\u673a\u76ee\u5f55\uff1a\u5bb9\u5668\u5185\u6302\u8f7d\u8def\u5f84 \u955c\u50cf\u540d docker run --name t1 -v /usr/webapps:/usr/local/tomcat/webapps tomcat \u8bbe\u7f6e --volumes-from \u5171\u4eab\u5bb9\u5668\u5185\u6302\u8f7d\u70b9 # \u521b\u5efa\u5171\u4eab\u5bb9\u5668 docker create --name webpage -v /webapps:/tomcat/webapps tomcat /bin/true # \u5171\u4eab\u5bb9\u5668\u6302\u8f7d\u70b9 docker run --volumes-from webpage ==name t1 -d tomcat","title":"Volume \u6302\u8f7d\u64cd\u4f5c"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/","text":"Kubernetes \u5b89\u88c5\u6307\u5f15 \u00b6 \u4e00\u3001\u73af\u5883\u51c6\u5907 \u00b6 1. \u8bbe\u7f6e\u4e3b\u673a\u540d\u4e0e\u65f6\u533a \u00b6 timedatectl set-timezone Asia/Shanghai #\u90fd\u8981\u6267\u884c hostnamectl set-hostname master #132\u6267\u884c hostnamectl set-hostname node1 #133\u6267\u884c hostnamectl set-hostname node2 #137\u6267\u884c 2. \u6dfb\u52a0hosts\u7f51\u7edc\u4e3b\u673a\u914d\u7f6e,\u4e09\u53f0\u865a\u62df\u673a\u90fd\u8981\u8bbe\u7f6e \u00b6 vim /etc/hosts 192.168.163.132 master 192.168.163.133 node1 192.168.163.137 node2 3. \u5173\u95ed\u9632\u706b\u5899\uff0c\u4e09\u53f0\u865a\u62df\u673a\u90fd\u8981\u8bbe\u7f6e\uff0c\u751f\u4ea7\u73af\u5883\u8df3\u8fc7\u8fd9\u4e00\u6b65 \u00b6 sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config setenforce 0 systemctl disable firewalld systemctl stop firewalld # \u4e92\u76f8\u68c0\u67e5\u8282\u70b9\u4e4b\u95f4\u7684\u7f51\u7edc\u8054\u901a ping node1 ping node2 ping master - SELinux \u4e3aLinux\u7cfb\u7edf\u63d0\u4f9b\u7684\u5b89\u5168\u589e\u5f3a\u6a21\u5757 \u4e8c\u3001\u5b89\u88c5Kubeadmin\u52a0\u8f7dK8S\u955c\u50cf \u00b6 1. \u5c06\u955c\u50cf\u5305\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\u6bcf\u4e2a\u8282\u70b9 \u00b6 mkdir /usr/local/k8s-install cd /usr/local/k8s-install # XFTP\u4e0a\u4f20\u5b89\u88c5\u6587\u4ef6 kubernetes-1.14 Kubernetes \u5b89\u88c5\u5305\u8bf4\u660e\uff1a \u4f7f\u7528\u96c6\u7fa4\u5316\u7ba1\u7406\u5de5\u5177\u5bf9k8s\u955c\u50cf\u8fdb\u884c\u81ea\u52a8\u5316\u90e8\u7f72 Kube114-rmp.tar.gz: \u96c6\u7fa4\u7ba1\u7406\u5de5\u5177 docker-ce-18.09.tar.gz: docker \u5b89\u88c5\u538b\u7f29\u5305 k8s-114-images.tar.gz: k8s \u955c\u50cf flannel-dashboard.tar.gz: \u76d1\u63a7\u96c6\u7fa4\u72b6\u6001 2. \u5728\u6bcf\u4e2aCentOS\u4e0a\u5b89\u88c5Docker \u00b6 # \u89e3\u538b\uff1adocker tar -zxvf docker-ce-18.09.tar.gz cd docker yum localinstall -y *.rpm systemctl start docker systemctl enable docker 3. \u786e\u4fdd\u4ececgroups\u5747\u5728\u540c\u4e00\u4e2a\u4ecegroupfs \u00b6 # \u67e5\u770bcgroups docker info | grep cgroup # Cgroup Driver: cgroupfs - cgroups \u662fcontrol groups\u7684\u7b80\u79f0\uff0c\u5b83\u4e3aLinux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u79cd\u4efb\u52a1\u805a\u96c6\u548c\u5212\u5206\u7684\u673a\u5236\uff0c\u901a\u8fc7\u4e00\u7ec4\u53c2\u6570\u96c6\u5408\u5c06\u4e00\u4e9b\u4efb\u52a1\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u7cfb\u7edf\u3002 - cgroups\u662f\u5b9e\u73b0IaaS\u865a\u62df\u5316(kvm\u3001lxc\u7b49)\uff0cPaaS\u5bb9\u5668\u6c99\u7bb1(Docker\u7b49)\u7684\u8d44\u6e90\u7ba1\u7406\u63a7\u5236\u90e8\u5206\u7684\u5e95\u5c42\u57fa\u7840\u3002 - \u5b50\u7cfb\u7edf\u662f\u6839\u636ecgroup\u5bf9\u4efb\u52a1\u7684\u5212\u5206\u529f\u80fd\u5c06\u4efb\u52a1\u6309\u7167\u4e00\u79cd\u6307\u5b9a\u7684\u5c5e\u6027\u5212\u5206\u6210\u7684\u4e00\u4e2a\u7ec4\uff0c\u4e3b\u8981\u7528\u6765\u5b9e\u73b0\u8d44\u6e90\u7684\u63a7\u5236\u3002 - \u5728cgroup\u4e2d\uff0c\u5212\u5206\u6210\u7684\u4efb\u52a1\u7ec4\u4ee5\u5c42\u6b21\u7ed3\u6784\u7684\u5f62\u5f0f\u7ec4\u7ec7\uff0c\u591a\u4e2a\u5b50\u7cfb\u7edf\u5f62\u6210\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\u7c7b\u4f3c\u591a\u6839\u6811\u7684\u7ed3\u6784\u3002cgroup\u5305\u542b\u4e86\u591a\u4e2a\u5b64\u7acb\u7684\u5b50\u7cfb\u7edf\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7cfb\u7edf\u4ee3\u8868\u5355\u4e00\u7684\u8d44\u6e90 \u5982\u679c\u4e0d\u662fgroupfs,\u6267\u884c\u4e0b\u5217\u8bed\u53e5 cat << EOF > /etc/docker/daemon.json { \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"] } EOF systemctl daemon-reload && systemctl restart docker 4. \u5b89\u88c5kubeadm \u00b6 kubeadmin\u662f\u96c6\u7fa4\u90e8\u7f72\u5de5\u5177 cd /usr/local/k8s-install/kubernetes-1.14 tar -zxvf kube114-rpm.tar.gz cd kube114-rpm yum localinstall -y *.rpm 5. \u5173\u95ed\u4ea4\u6362\u533a \u00b6 swapoff -a vi /etc/fstab # swap \u4e00\u884c\u6ce8\u91ca 6. \u914d\u7f6e\u7f51\u6865 \u00b6 cat << EOF > /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF sysctl --system 7. \u901a\u8fc7\u955c\u50cf\u5b89\u88c5k8s \u00b6 cd /usr/local/k8s-install/kubernetes-1.14 docker load -i k8s-114-images.tar.gz docker load -i flannel-dashboard.tar.gz k8s-114-images \u955c\u50cf\u7ec4\u4ef6\uff1a kube-proxy\uff1a \u5bb9\u5668\u95f4\u901a\u8baf\u7684\u4ee3\u7406\u5e94\u7528 kube-apiserver\uff1aAPI\u670d\u52a1\u7aef kube-controller-manager\uff1a \u96c6\u7fa4\u63a7\u5236\u5668 kube-scheduler\uff1a \u4efb\u52a1\u8c03\u5ea6 coredns\uff1a \u6bcf\u4e2a\u8282\u70b9\u7684DNS\u7ec4\u4ef6 etcd: \u6570\u636e\u7684\u5b58\u50a8\u6a21\u5757 pause\uff1a \u6bcf\u4e2aPOD\u4e2d\u7684\u72ec\u7279\u5bb9\u5668 \u4e09\u3001\u5229\u7528Kubeadm\u90e8\u7f72K8S\u96c6\u7fa4 \u00b6 1. master\u4e3b\u670d\u52a1\u5668\u914d\u7f6e \u00b6 kubeadm init --kubernetes-version=v1.14.1 --pod-network-cidr=10.244.0.0/16 # to start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config kubeadm \u521d\u59cb\u5316\uff1a - --kubernetes-version : \u6307\u660eK8s\u7248\u672c - --pod-network-cidr : \u6307\u660ePOD\u6240\u751f\u6210\u865a\u62dfIP\u8303\u56f4\uff08\u51b3\u5b9a\u865a\u62dfIP\u7684\u8fb9\u754c\uff09 /etc/kubernetes/admin.conf : - \u5f53\u524d\u96c6\u7fa4\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\uff0c \u5305\u542b\u4e86\u96c6\u7fa4\u4fe1\u606f - \u6388\u6743\u4fe1\u606f - master \u8282\u70b9\u7684\u91cd\u8981\u4fe1\u606f\uff08IP...\uff09 2. \u68c0\u67e5\u914d\u7f6e\uff1a\u786e\u4fdd\u6240\u6709\u7ec4\u5efa\u72b6\u6001\u5168\u90e8\u5904\u4e8e\uff1a Running Status \u00b6 # \u67e5\u770b\u6240\u6709\u8282\u70b9\u4fe1\u606f kubectl get nodes # \u67e5\u770b\u5b58\u5728\u95ee\u9898\u7684pod kubectl get pod --all-namespaces # \u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf # \u5b89\u88c5flannel\u7f51\u7edc\u7ec4\u4ef6 kubectl create -f kube-flannel.yml namespaces \u8282\u70b9\u72b6\u6001\uff1a CrashLoopBackOff: - \u4e00\u822c\u800c\u8a00\uff0c\u7b49\u5f85\u4e00\u4f1a\u513f\u5373\u53ef\u6210\u529f to Running... - \u5982\u957f\u65f6\u95f4\u53cd\u590d\u51fa\u73b0CrashLoopBackOff\uff0c\u4ee3\u8868\u786c\u4ef6\u4e0d\u591f\uff0c\u589e\u52a0CPU\u4e0e\u5185\u5b58\u8d44\u6e90\u5373\u53ef\u3002 flannel\u7f51\u7edc\u7ec4\u4ef6 - \u901a\u8fc7\u6b64\u534f\u8bae\uff0c\u89e3\u51b3\u5e95\u5c42\u8de8\u4e3b\u673a\uff0c\u8de8POD\u4e4b\u95f4\u7684\u4f20\u8f93\u95ee\u9898 3. \u52a0\u5165NODE\u8282\u70b9 \u00b6 kubeadm join 192.168.4.130:6443 --token 911xit.xkp2gfxbvf5wuqz7 \\ --discovery-token-ca-cert-hash sha256:23db3094dc9ae1335b25692717c40e24b1041975f6a43da9f43568f8d0dbac72 - \u672c\u8bed\u53e5\u7531master \u5728\u521d\u59cb\u5316 kebeadm init \u65f6\uff0c\u81ea\u52a8\u751f\u6210\u3002 - \u5982\u679c\u5fd8\u8bb0\uff0c\u5219\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u5728master \u4e0a\u6267\u884c kubeadm token list \u67e5\u770b Token : aoeout.9k0ybvrfy09q1jf6 \u5728node \u4e0a\u8fd0\u884c: kubeadm join 192.168.163.132:6443 --token aoeout.9k0ybvrfy09q1jf6 --discovery-token-unsafe-skip-ca-verification discovery-token-unsafe-skip-ca-verification : \u4e0d\u8fdb\u884cToken\u7684\u5b89\u5168\u6821\u9a8c\u3002 4. \u68c0\u6d4b\u8282\u70b9\u662f\u5426\u6dfb\u52a0\u6210\u529f\uff1a \u00b6 # \u5728 master \u4e3b\u673a\u4e2d\u67e5\u770b\u8282\u70b9\u72b6\u6001 kubectl get nodes \u81f3\u6b64\uff0c\u5df2\u7ecf\u5168\u90e8\u5b89\u88c5\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u5e94\u7528\u914d\u7f6e\u3002 \u56db\u3001K8s \u4eea\u8868\u76d8 \u00b6 1. \u5f00\u542f\u4eea\u8868\u76d8 \u00b6 kubectl apply -f kubernetes-dashboard.yaml kubectl apply -f admin-role.yaml kubectl apply -f kubernetes-dashboard-admin.rbac.yaml 2. \u8bbf\u95ee\u4eea\u8868\u76d8 \u00b6 kubectl -n kube-system get svc \u6b64\u65f6\uff0c\u53ef\u4ee5\u8bbf\u95ee\u4eea\u8868\u76d8\uff1a http://192.168.3.128:32000","title":"K8s \u5b89\u88c5\u6307\u5f15"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#kubernetes","text":"","title":"Kubernetes \u5b89\u88c5\u6307\u5f15"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#_1","text":"","title":"\u4e00\u3001\u73af\u5883\u51c6\u5907"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#1","text":"timedatectl set-timezone Asia/Shanghai #\u90fd\u8981\u6267\u884c hostnamectl set-hostname master #132\u6267\u884c hostnamectl set-hostname node1 #133\u6267\u884c hostnamectl set-hostname node2 #137\u6267\u884c","title":"1. \u8bbe\u7f6e\u4e3b\u673a\u540d\u4e0e\u65f6\u533a"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#2-hosts","text":"vim /etc/hosts 192.168.163.132 master 192.168.163.133 node1 192.168.163.137 node2","title":"2. \u6dfb\u52a0hosts\u7f51\u7edc\u4e3b\u673a\u914d\u7f6e,\u4e09\u53f0\u865a\u62df\u673a\u90fd\u8981\u8bbe\u7f6e"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#3","text":"sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config setenforce 0 systemctl disable firewalld systemctl stop firewalld # \u4e92\u76f8\u68c0\u67e5\u8282\u70b9\u4e4b\u95f4\u7684\u7f51\u7edc\u8054\u901a ping node1 ping node2 ping master - SELinux \u4e3aLinux\u7cfb\u7edf\u63d0\u4f9b\u7684\u5b89\u5168\u589e\u5f3a\u6a21\u5757","title":"3. \u5173\u95ed\u9632\u706b\u5899\uff0c\u4e09\u53f0\u865a\u62df\u673a\u90fd\u8981\u8bbe\u7f6e\uff0c\u751f\u4ea7\u73af\u5883\u8df3\u8fc7\u8fd9\u4e00\u6b65"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#kubeadmink8s","text":"","title":"\u4e8c\u3001\u5b89\u88c5Kubeadmin\u52a0\u8f7dK8S\u955c\u50cf"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#1_1","text":"mkdir /usr/local/k8s-install cd /usr/local/k8s-install # XFTP\u4e0a\u4f20\u5b89\u88c5\u6587\u4ef6 kubernetes-1.14 Kubernetes \u5b89\u88c5\u5305\u8bf4\u660e\uff1a \u4f7f\u7528\u96c6\u7fa4\u5316\u7ba1\u7406\u5de5\u5177\u5bf9k8s\u955c\u50cf\u8fdb\u884c\u81ea\u52a8\u5316\u90e8\u7f72 Kube114-rmp.tar.gz: \u96c6\u7fa4\u7ba1\u7406\u5de5\u5177 docker-ce-18.09.tar.gz: docker \u5b89\u88c5\u538b\u7f29\u5305 k8s-114-images.tar.gz: k8s \u955c\u50cf flannel-dashboard.tar.gz: \u76d1\u63a7\u96c6\u7fa4\u72b6\u6001","title":"1. \u5c06\u955c\u50cf\u5305\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\u6bcf\u4e2a\u8282\u70b9"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#2-centosdocker","text":"# \u89e3\u538b\uff1adocker tar -zxvf docker-ce-18.09.tar.gz cd docker yum localinstall -y *.rpm systemctl start docker systemctl enable docker","title":"2. \u5728\u6bcf\u4e2aCentOS\u4e0a\u5b89\u88c5Docker"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#3-cgroupsgroupfs","text":"# \u67e5\u770bcgroups docker info | grep cgroup # Cgroup Driver: cgroupfs - cgroups \u662fcontrol groups\u7684\u7b80\u79f0\uff0c\u5b83\u4e3aLinux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u79cd\u4efb\u52a1\u805a\u96c6\u548c\u5212\u5206\u7684\u673a\u5236\uff0c\u901a\u8fc7\u4e00\u7ec4\u53c2\u6570\u96c6\u5408\u5c06\u4e00\u4e9b\u4efb\u52a1\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u7cfb\u7edf\u3002 - cgroups\u662f\u5b9e\u73b0IaaS\u865a\u62df\u5316(kvm\u3001lxc\u7b49)\uff0cPaaS\u5bb9\u5668\u6c99\u7bb1(Docker\u7b49)\u7684\u8d44\u6e90\u7ba1\u7406\u63a7\u5236\u90e8\u5206\u7684\u5e95\u5c42\u57fa\u7840\u3002 - \u5b50\u7cfb\u7edf\u662f\u6839\u636ecgroup\u5bf9\u4efb\u52a1\u7684\u5212\u5206\u529f\u80fd\u5c06\u4efb\u52a1\u6309\u7167\u4e00\u79cd\u6307\u5b9a\u7684\u5c5e\u6027\u5212\u5206\u6210\u7684\u4e00\u4e2a\u7ec4\uff0c\u4e3b\u8981\u7528\u6765\u5b9e\u73b0\u8d44\u6e90\u7684\u63a7\u5236\u3002 - \u5728cgroup\u4e2d\uff0c\u5212\u5206\u6210\u7684\u4efb\u52a1\u7ec4\u4ee5\u5c42\u6b21\u7ed3\u6784\u7684\u5f62\u5f0f\u7ec4\u7ec7\uff0c\u591a\u4e2a\u5b50\u7cfb\u7edf\u5f62\u6210\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\u7c7b\u4f3c\u591a\u6839\u6811\u7684\u7ed3\u6784\u3002cgroup\u5305\u542b\u4e86\u591a\u4e2a\u5b64\u7acb\u7684\u5b50\u7cfb\u7edf\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7cfb\u7edf\u4ee3\u8868\u5355\u4e00\u7684\u8d44\u6e90 \u5982\u679c\u4e0d\u662fgroupfs,\u6267\u884c\u4e0b\u5217\u8bed\u53e5 cat << EOF > /etc/docker/daemon.json { \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"] } EOF systemctl daemon-reload && systemctl restart docker","title":"3. \u786e\u4fdd\u4ececgroups\u5747\u5728\u540c\u4e00\u4e2a\u4ecegroupfs"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#4-kubeadm","text":"kubeadmin\u662f\u96c6\u7fa4\u90e8\u7f72\u5de5\u5177 cd /usr/local/k8s-install/kubernetes-1.14 tar -zxvf kube114-rpm.tar.gz cd kube114-rpm yum localinstall -y *.rpm","title":"4. \u5b89\u88c5kubeadm"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#5","text":"swapoff -a vi /etc/fstab # swap \u4e00\u884c\u6ce8\u91ca","title":"5. \u5173\u95ed\u4ea4\u6362\u533a"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#6","text":"cat << EOF > /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF sysctl --system","title":"6. \u914d\u7f6e\u7f51\u6865"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#7-k8s","text":"cd /usr/local/k8s-install/kubernetes-1.14 docker load -i k8s-114-images.tar.gz docker load -i flannel-dashboard.tar.gz k8s-114-images \u955c\u50cf\u7ec4\u4ef6\uff1a kube-proxy\uff1a \u5bb9\u5668\u95f4\u901a\u8baf\u7684\u4ee3\u7406\u5e94\u7528 kube-apiserver\uff1aAPI\u670d\u52a1\u7aef kube-controller-manager\uff1a \u96c6\u7fa4\u63a7\u5236\u5668 kube-scheduler\uff1a \u4efb\u52a1\u8c03\u5ea6 coredns\uff1a \u6bcf\u4e2a\u8282\u70b9\u7684DNS\u7ec4\u4ef6 etcd: \u6570\u636e\u7684\u5b58\u50a8\u6a21\u5757 pause\uff1a \u6bcf\u4e2aPOD\u4e2d\u7684\u72ec\u7279\u5bb9\u5668","title":"7. \u901a\u8fc7\u955c\u50cf\u5b89\u88c5k8s"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#kubeadmk8s","text":"","title":"\u4e09\u3001\u5229\u7528Kubeadm\u90e8\u7f72K8S\u96c6\u7fa4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#1-master","text":"kubeadm init --kubernetes-version=v1.14.1 --pod-network-cidr=10.244.0.0/16 # to start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config kubeadm \u521d\u59cb\u5316\uff1a - --kubernetes-version : \u6307\u660eK8s\u7248\u672c - --pod-network-cidr : \u6307\u660ePOD\u6240\u751f\u6210\u865a\u62dfIP\u8303\u56f4\uff08\u51b3\u5b9a\u865a\u62dfIP\u7684\u8fb9\u754c\uff09 /etc/kubernetes/admin.conf : - \u5f53\u524d\u96c6\u7fa4\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\uff0c \u5305\u542b\u4e86\u96c6\u7fa4\u4fe1\u606f - \u6388\u6743\u4fe1\u606f - master \u8282\u70b9\u7684\u91cd\u8981\u4fe1\u606f\uff08IP...\uff09","title":"1. master\u4e3b\u670d\u52a1\u5668\u914d\u7f6e"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#2-running-status","text":"# \u67e5\u770b\u6240\u6709\u8282\u70b9\u4fe1\u606f kubectl get nodes # \u67e5\u770b\u5b58\u5728\u95ee\u9898\u7684pod kubectl get pod --all-namespaces # \u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf # \u5b89\u88c5flannel\u7f51\u7edc\u7ec4\u4ef6 kubectl create -f kube-flannel.yml namespaces \u8282\u70b9\u72b6\u6001\uff1a CrashLoopBackOff: - \u4e00\u822c\u800c\u8a00\uff0c\u7b49\u5f85\u4e00\u4f1a\u513f\u5373\u53ef\u6210\u529f to Running... - \u5982\u957f\u65f6\u95f4\u53cd\u590d\u51fa\u73b0CrashLoopBackOff\uff0c\u4ee3\u8868\u786c\u4ef6\u4e0d\u591f\uff0c\u589e\u52a0CPU\u4e0e\u5185\u5b58\u8d44\u6e90\u5373\u53ef\u3002 flannel\u7f51\u7edc\u7ec4\u4ef6 - \u901a\u8fc7\u6b64\u534f\u8bae\uff0c\u89e3\u51b3\u5e95\u5c42\u8de8\u4e3b\u673a\uff0c\u8de8POD\u4e4b\u95f4\u7684\u4f20\u8f93\u95ee\u9898","title":"2. \u68c0\u67e5\u914d\u7f6e\uff1a\u786e\u4fdd\u6240\u6709\u7ec4\u5efa\u72b6\u6001\u5168\u90e8\u5904\u4e8e\uff1aRunning Status"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#3-node","text":"kubeadm join 192.168.4.130:6443 --token 911xit.xkp2gfxbvf5wuqz7 \\ --discovery-token-ca-cert-hash sha256:23db3094dc9ae1335b25692717c40e24b1041975f6a43da9f43568f8d0dbac72 - \u672c\u8bed\u53e5\u7531master \u5728\u521d\u59cb\u5316 kebeadm init \u65f6\uff0c\u81ea\u52a8\u751f\u6210\u3002 - \u5982\u679c\u5fd8\u8bb0\uff0c\u5219\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u5728master \u4e0a\u6267\u884c kubeadm token list \u67e5\u770b Token : aoeout.9k0ybvrfy09q1jf6 \u5728node \u4e0a\u8fd0\u884c: kubeadm join 192.168.163.132:6443 --token aoeout.9k0ybvrfy09q1jf6 --discovery-token-unsafe-skip-ca-verification discovery-token-unsafe-skip-ca-verification : \u4e0d\u8fdb\u884cToken\u7684\u5b89\u5168\u6821\u9a8c\u3002","title":"3. \u52a0\u5165NODE\u8282\u70b9"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#4","text":"# \u5728 master \u4e3b\u673a\u4e2d\u67e5\u770b\u8282\u70b9\u72b6\u6001 kubectl get nodes \u81f3\u6b64\uff0c\u5df2\u7ecf\u5168\u90e8\u5b89\u88c5\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u5e94\u7528\u914d\u7f6e\u3002","title":"4. \u68c0\u6d4b\u8282\u70b9\u662f\u5426\u6dfb\u52a0\u6210\u529f\uff1a"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#k8s","text":"","title":"\u56db\u3001K8s \u4eea\u8868\u76d8"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#1_2","text":"kubectl apply -f kubernetes-dashboard.yaml kubectl apply -f admin-role.yaml kubectl apply -f kubernetes-dashboard-admin.rbac.yaml","title":"1. \u5f00\u542f\u4eea\u8868\u76d8"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/#2","text":"kubectl -n kube-system get svc \u6b64\u65f6\uff0c\u53ef\u4ee5\u8bbf\u95ee\u4eea\u8868\u76d8\uff1a http://192.168.3.128:32000","title":"2. \u8bbf\u95ee\u4eea\u8868\u76d8"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%B7%A5%E5%85%B7%20rinetd%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%8C%87%E5%BC%95/","text":"Rinetd \u5b89\u88c5\u914d\u7f6e\u6307\u5f15 \u00b6 Rinetd \u5b89\u88c5 \u00b6 cd/usr/local wget http://www.boutell.com/rinetd/http/rinetd.tar.gz tar -zxvf rinetd.tar.gz cd rinetd # \u4fee\u6539\u7aef\u53e3\u6587\u4ef6 sed -i 's/65536/65535/g' rinetd.c mkdir -p /usr/man/ # \u5b89\u88c5C\u7f16\u8bd1\u5de5\u5177\uff0c\u6b64\u6b65\u9aa4\u5bf9\u672a\u5b89\u88c5\u7684Linux\u4f7f\u7528 yum install -y gcc # \u7f16\u8bd1\u5e76\u5b89\u88c5 make && make install - wget : \u5931\u8d25\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 tar.gz \u8fdb\u884c\u89e3\u538b\u5b89\u88c5 \u914d\u7f6e\u8f6c\u53d1IP\u7aef\u53e3 \u00b6 \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 vim /etc/rinetd.conf rinetd.conf 0.0.0.0 8000 10.100.22.231 8000 \u8868\u793a\u5c06\u6240\u6709\u7684IP\uff1a8000\u7aef\u53e3\u6620\u5c04\u5230\u5185\u90e8\u7684IP\u7f51\u7edc8000\u7aef\u53e3 0.0.0.0 : \u8868\u793a\u6240\u6709\u53d1\u9001\u7684IP 10.100.22.231 : \u8868\u793a\u5185\u90e8IP\u5730\u5740 \u6267\u884c\u751f\u6548 # \u6267\u884c\u914d\u7f6e\u6587\u4ef6 rinetd -c /etc/rinetd.conf # \u67e5\u770b\u7f51\u7edc\u7aef\u53e3\u6620\u5c04 netstat -tulpn","title":"K8s \u7aef\u53e3\u8f6c\u53d1\u5de5\u5177 rinetd \u5b89\u88c5\u914d\u7f6e\u6307\u5f15"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%B7%A5%E5%85%B7%20rinetd%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%8C%87%E5%BC%95/#rinetd","text":"","title":"Rinetd \u5b89\u88c5\u914d\u7f6e\u6307\u5f15"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%B7%A5%E5%85%B7%20rinetd%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%8C%87%E5%BC%95/#rinetd_1","text":"cd/usr/local wget http://www.boutell.com/rinetd/http/rinetd.tar.gz tar -zxvf rinetd.tar.gz cd rinetd # \u4fee\u6539\u7aef\u53e3\u6587\u4ef6 sed -i 's/65536/65535/g' rinetd.c mkdir -p /usr/man/ # \u5b89\u88c5C\u7f16\u8bd1\u5de5\u5177\uff0c\u6b64\u6b65\u9aa4\u5bf9\u672a\u5b89\u88c5\u7684Linux\u4f7f\u7528 yum install -y gcc # \u7f16\u8bd1\u5e76\u5b89\u88c5 make && make install - wget : \u5931\u8d25\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 tar.gz \u8fdb\u884c\u89e3\u538b\u5b89\u88c5","title":"Rinetd \u5b89\u88c5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K8s%20%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%B7%A5%E5%85%B7%20rinetd%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%8C%87%E5%BC%95/#ip","text":"\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 vim /etc/rinetd.conf rinetd.conf 0.0.0.0 8000 10.100.22.231 8000 \u8868\u793a\u5c06\u6240\u6709\u7684IP\uff1a8000\u7aef\u53e3\u6620\u5c04\u5230\u5185\u90e8\u7684IP\u7f51\u7edc8000\u7aef\u53e3 0.0.0.0 : \u8868\u793a\u6240\u6709\u53d1\u9001\u7684IP 10.100.22.231 : \u8868\u793a\u5185\u90e8IP\u5730\u5740 \u6267\u884c\u751f\u6548 # \u6267\u884c\u914d\u7f6e\u6587\u4ef6 rinetd -c /etc/rinetd.conf # \u67e5\u770b\u7f51\u7edc\u7aef\u53e3\u6620\u5c04 netstat -tulpn","title":"\u914d\u7f6e\u8f6c\u53d1IP\u7aef\u53e3"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/","text":"Kubernetes(K8s) \u6700\u4f73\u5b9e\u8df5 \u00b6 \u4e00\u3001\u5bb9\u5668\u7f16\u6392\u53caK8s\u4ecb\u7ecd \u00b6 \u5bb9\u5668\u7f16\u6392\uff1a - \u5728\u54ea\u4e9b\u5bbf\u4e3b\u673a\u4e0a\u5b89\u88c5\u4ec0\u4e48\u5bb9\u5668\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u5bb9\u5668\u4ee5\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u901a\u8baf\u548c\u88ab\u7ba1\u7406 \u5355\u673a\u7f16\u6392\u5de5\u5177\uff1a - docker compose \u96c6\u7fa4\u7f16\u6392\u5de5\u5177\uff1a - docker swarm - kubernetes Kubernetes \u529f\u80fd\u804c\u8d23 \u00b6 \u81ea\u52a8\u5316\u5bb9\u5668\u7684\u90e8\u7f72\u548c\u590d\u5236 \u968f\u65f6\u6269\u5c55\u6216\u6536\u7f29\u5bb9\u5668\u89c4\u6a21 \u5bb9\u5668\u5206\u7ec4Group\uff0c\u5e76\u4e14\u63d0\u4f9b\u5bb9\u5668\u95f4\u7684\u8d1f\u8f7d\u5747\u8861 \u5b9e\u65f6\u76d1\u63a7, \u5373\u65f6\u6545\u969c\u53d1\u73b0, \u81ea\u52a8\u66ff\u6362 K8s \u57fa\u672c\u6982\u5ff5 \u00b6 Kubernetes Master(K8s \u4e3b\u8282\u70b9) \u96c6\u7fa4\u7ba1\u7406\u8005\uff0c\u4e3b\u670d\u52a1\u5668 \u5411\u5176\u4ed6\u8282\u70b9\u53d1\u9001\u6307\u4ee4\uff1a\u521b\u5efa\u5bb9\u5668\uff0c\u81ea\u52a8\u90e8\u7f72\uff0c\u81ea\u52a8\u53d1\u5e03... \u63a5\u53d7\u5916\u90e8\u8bf7\u6c42\uff0c\u5e76\u5206\u53d1\u5230\u5404\u4e2a\u5b50\u8282\u70b9 Node K8s \u5b50\u8282\u70b9\uff0c\u53ef\u662f\u72ec\u7acb\u7684\u7269\u7406\u673a\uff0c\u4e5f\u53ef\u662f\u865a\u62df\u673a \u8d1f\u8d23\u6267\u884c\u4e3b\u8282\u70b9\u53d1\u9001\u8fc7\u6765\u7684\u6307\u4ee4 POD K8s \u63a7\u5236\u7684\u6700\u5c0f\u53ef\u90e8\u7f72\u5355\u5143,\u4e00\u4e2aPOD\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u62e5\u6709\u72ec\u7acb\u8d44\u6e90\u3002 POD \u662f\u201d\u5bb9\u5668\u201d\u7684\u5bb9\u5668,\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u201dContainer\u201d POD \u5185\u90e8\u5bb9\u5668\u7f51\u7edc\u4e92\u901a,\u6bcf\u4e2aPOD\u90fd\u6709\u72ec\u7acb\u865a\u62dfIP\uff0c\u5e76\u7531K8s\u7edf\u4e00\u7ba1\u7406 \u5176\u5185\u90e8\u5b9e\u73b0\u901a\u8fc7 Service \u8fdb\u884c\u901a\u8baf\u5b9e\u73b0 \u4e0d\u540c\u4e1a\u52a1POD\u7684\u5206\u9694\u7c92\u5ea6\u4e0d\u540c POD \u90e8\u7f72\u5b8c\u6574\u7684\u5e94\u7528\u6216\u6a21\u5757 POD \u90e8\u7f72\u67d0\u4e00\u4e2a\u804c\u80fd Pause\u5bb9\u5668\uff08POD\u5185\u90e8) \u63d0\u4f9b\u5171\u4eab\u533f\u540d\u7a7a\u95f4\uff1a \u800c\u540e\u5e94\u7528\u8bbf\u95ee\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528 localhost:port \u5f62\u5f0f\u5b8c\u6210\u5f7c\u6b64\u8bbf\u95ee \u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u4ec5\u6709\u4e0d\u540c\u7684\u7aef\u53e3\u52a0\u4ee5\u533a\u5206 \u63d0\u4f9b\u5171\u4eab\u6302\u8f7d\u6570\u636e\u5377 volume \u5bb9\u5668\u5185\u90e8\u5171\u4eab\u6570\u636e\u5377 Lable \u8bf4\u660e\u6027\u7684\u6807\u7b7e \u6bcf\u4e00\u4e2aPOD\u7684\u522b\u540d Replication Controller \u590d\u5236\u63a7\u5236\u5668 Pod\u5b9e\u65bd\u54cd\u5e94\uff0c\u5e76\u81ea\u52a8\u63a7\u5236\u8282\u70b9\u6570\u91cf \u5e94\u7528\u5e95\u5c42 Kubernete\uff1a K8s \u7684\u6838\u5fc3\u6307\u4ee4\u63a7\u5236 kuber-proxy \u591a\u4e3b\u673a\u4e4b\u95f4\u7684\u901a\u8baf docker Kubernetes \u5b89\u88c5 \u00b6 \u56fd\u5185\u5b89\u88c5\u7684\u56db\u79cd\u9014\u5f84\uff1a - \u4f7f\u7528kubeadmin\u901a\u8fc7\u79bb\u7ebf\u955c\u50cf\u5b89\u88c5 ---> \u63a8\u8350 - \u4f7f\u7528\u963f\u91cc\u516c\u6709\u4e91\u5e73\u53f0k8s,\u949e\u80fd\u529b ---> \u8d2d\u4e70 - \u901a\u8fc7yum\u5b98\u65b9\u4ed3\u5e93\u5b89\u88c5,\u4e0a\u53e4\u7248\u672c ---> \u7248\u672c\u65e7 - \u4e8c\u8fdb\u5236\u5305\u7684\u5f62\u5f0f\u8fdb\u884c\u5b89\u88c5,kubeasz (github) ---> \u7b2c\u4e09\u65b9\uff0c\u975e\u5b98\u65b9 \u73af\u5883\u51c6\u5907\uff1a - Centos 7 Master * 1 - Master: 192.168.163.132 - Centos 7 Node * 2 - Node1: 192.168.163.133 - Node2: 192.168.163.137 \u91cd\u542f\u670d\u52a1 \u00b6 kubeadm/kubelet/kubectl\u533a\u522b kubeadm \u662fkubernetes\u96c6\u7fa4\u5feb\u901f\u6784\u5efa\u5de5\u5177 kubelet \u8fd0\u884c\u5728\u6240\u6709\u8282\u70b9\u4e0a,\u8d1f\u8d23\u542f\u52a8POD\u548c\u5bb9\u5668,\u4ee5\u7cfb\u7edf\u670d\u52a1\u5f62\u5f0f\u51fa\u73b0 kubectl: kubectl\u662fkubenetes\u547d\u4ee4\u884c\u5de5\u5177,\u63d0\u4f9b\u6307\u4ee4 \u542f\u52a8\u8282\u70b9\u547d\u4ee4 - \u542f\u52a8\u8282\u70b9\u7684K8S\u670d\u52a1\uff1a systemctl start kubelet - \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8\uff1a systemctl enable kubelet \u542f\u7528Web UI Dashboard \u00b6 \u914d\u7f6e\u6587\u4ef6\uff1a - kubernetes-dashboard.yaml \uff1a\u4eea\u8868\u76d8\u7684\u914d\u7f6e\uff0c\u57fa\u7840\u914d\u7f6e - admin-role.yaml \uff1a\u7ba1\u7406\u5458\u89d2\u8272\u804c\u80fd - kubernetes-dashboard-admin.rbao.yaml \uff1a\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236 \u5f00\u542f\u4eea\u8868\u76d8 kubectl apply -f kubernetes-dashboard.yaml kubectl apply -f admin-role.yaml kubectl apply -f kubernetes-dashboard-admin.rbac.yaml \u8bbf\u95ee\u4eea\u8868\u76d8\u63a7\u5236\u53f0 kubectl -n kube-system get svc - \u8bbf\u95ee\u5730\u5740\uff1a http://192.168.163.132:32000 \u6848\u4f8b\uff1aDashboard\u90e8\u7f72Tomcat\u96c6\u7fa4 \u00b6 \u5b9a\u4e49\u5404\u4e2a\u8282\u70b9\u7684\u963f\u91cc\u4e91\u955c\u50cf\u670d\u52a1 \u4eea\u8868\u76d8\u5de5\u4f5c\u8d1f\u8f7d\uff1a Deployment \u811a\u672c\u90e8\u7f72 Tomcat \u96c6\u7fa4 \u00b6 Deployment(\u90e8\u7f72) - \u90e8\u7f72\u662f\u6307Kubernetes\u5411Node\u8282\u70b9\u53d1\u9001\u6307\u4ee4\uff0c\u521b\u5efa\u5bb9\u5668\u7684\u8fc7\u7a0b - Kubernetes\u652f\u6301yml\u683c\u5f0f\u7684\u90e8\u7f72\u811a\u672c #\u521b\u5efa\u90e8\u7f72 kubectl create -f \u90e8\u7f72yml\u6587\u4ef6 Deployment \u90e8\u7f72\u811a\u672c apiVersion:extensions/vlbetal # \u7248\u672c\uff0c\u4e00\u822c\u56fa\u5b9a kind:Deployment # \u7528\u9014\uff1a\u90e8\u7f72 metadata: name:tomcat-deploy # \u540d\u79f0 spec: replicas:2 # \u90e8\u7f72\u6570\u91cf template: metadata: labels: app:tomcat-cluster spec: containers: - name:tomcat-cluster # \u4e00\u822c\u4e0eapp\u540c\u540d image:tomcat # \u955c\u50cf\u6765\u6e90 ports: - containerPort:8080 # \u66b4\u9732\u7aef\u53e3 \u90e8\u7f72\u76f8\u5173\u547d\u4ee4\uff1a # \u521b\u5efa\u90e8\u7f72 kubectl create -f \u90e8\u7f72yml\u6587\u4ef6 # \u66f4\u65b0\u90e8\u7f72\u914d\u7f6e kubectl apply -f \u90e8\u7f72yml\u6587\u4ef6 # \u67e5\u770b\u5df2\u90e8\u7f72pod kubectl get pod [-o wide] # \u67e5\u770bPod\u8be6\u7ec6\u4fe1\u606f kubectl describe pod pod\u540d\u79f0 # \u67e5\u770bpod\u8f93\u51fa\u65e5\u5fd7 kubectl logs [-f] pod\u540d\u79f0 tomcat-deploy.yml apiVersion: extensions/v1beta1 king:Deployment metadata: name: tomcat-deploy spec: replicas:2 template: metadata: labels: app: tomcat-cluster spec: containers: - name: tomcat-cluster image: tomcat:latest ports: - containerPort: 8080 # \u521b\u5efa\u90e8\u7f72 kubectl create -f ./tomcat-deploy.yml # \u67e5\u770b\u90e8\u7f72\u60c5\u51b5 kubectl get deployment # \u5217\u51fa\u6240\u6709POD\uff0c kebectl get pod -o wide # \u67e5\u770bpod\u8be6\u7ec6\u4fe1\u606f kubectl describe pod pod_name # \u67e5\u770b\u65e5\u5fd7\u5185\u5bb9 kubectl logs po_name \u5916\u90e8\u8bbf\u95eeTomcat \u96c6\u7fa4 \u00b6 Service \u670d\u52a1\u7528\u4e8e\u5bf9\u5916\u66b4\u9732\u5e94\u7528\uff1a \u4f7f\u7528\u96c6\u7fa4\u5bf9\u5bbf\u4e3b\u673a\u66b4\u9732\u7684\u7aef\u53e3\u7edf\u4e00\u8bbf\u95ee \u5bbf\u4e3b\u673a\u7684IP\u8bbf\u95ee\uff0c\u6b64\u65f6\u96c6\u7fa4\u8d1f\u8f7d\u5747\u8861\u529f\u80fd\u5931\u6548 \u901a\u8fc7\u5bbf\u4e3b\u673aIP\u8bbf\u95ee\uff1a 1. \u521b\u5efaYML\u811a\u672c tomcat-service.yml apiVersion: v1 kind: Service metadata: name: tomcat-service # \u663e\u793a labels: app: tomcat-service # POD \u9009\u62e9 spec: type: NodePort selector: app: tomcat-cluster # \u7ed1\u5b9a\u90e8\u7f72\u7684 tomcat-cluster \u6807\u7b7e ports: - port: 8000 # \u5bf9\u5916\u8bbf\u95eeport targetPort: 8080 # \u5bb9\u5668\u7aef\u53e3\u6620\u5c04 nodePort: 32500 # \u5bbf\u4e3b\u673anode\u7aef\u53e3\u6620\u5c04 2. \u521b\u5efa\u5bf9\u5e94\u670d\u52a1\uff0c\u5e76\u63d0\u4f9bNode\u5bbf\u4e3b\u673a\u8bbf\u95ee kubectl create -f ./tomcat-service.yml kubectl get service kubectl describe service tomcat-service \u57fa\u4e8eNFS\u6587\u4ef6\u6587\u4ef6\u96c6\u7fa4\u5171\u4eab \u00b6 NFS \uff1aNetwork File System - SUN \u516c\u53f8\u7814\u53d1\u7684\u6587\u4ef6\u4f20\u8f93\u534f\u8bae - \u4e3b\u8981\u91c7\u7528\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528RPC\u673a\u5236\u5b9e\u73b0\u6587\u4ef6\u4f20\u8f93 \u5b89\u88c5NFS yum install -y nfs-utils rpcbind \u96c6\u7fa4\u6587\u4ef6\u5171\u4eab \u5171\u4eab\u5bbf\u4e3b\u673a\u8bbe\u7f6e \u8bbe\u7f6e\u5bf9\u5916\u5171\u4eab\u6587\u4ef6\u5939 vim /etc/exports exports # \u8bbe\u7f6e\u5171\u4eab\u6587\u4ef6\u5939\u4f4d\u7f6e\uff0cIP\uff0c\u6743\u9650\uff0c\u4ee5\u53ca\u540c\u6b65\u5199 /usr/local/data/xxx IP/24(rw, sync) \u542f\u52a8\u76f8\u5e94\u670d\u52a1\u5e76\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 # \u542f\u52a8NFS\u670d\u52a1 systemctl start nfs.service # \u542f\u52a8RPC\u670d\u52a1 systemctl start rpcbind.service # \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable nfs.service systemctl enable rpcbind.service # \u67e5\u770b\u5171\u4eab\u6587\u4ef6\u5939\u8bbe\u7f6e\u5185\u5bb9\uff1a\u4f4d\u7f6e + IP/port exportfs POD \u8282\u70b9\u5171\u4eab\u6587\u4ef6\u5939\u8bbe\u7f6e \u5b89\u88c5nfs\u5de5\u5177\u96c6 yum install -y nfs-utils \u67e5\u770b\u53ef\u8bbf\u95ee\u7684\u5171\u4eab\u6587\u4ef6\u5939 showmount -e 192.168.163.132 \u6302\u5728\u5230 /mnt mount 192.168.163.132:/usr/local/data/xxx /mnt \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable nfs.service \u5c06 POD \u8282\u70b9\u6587\u4ef6\u5939\u6620\u5c04\u5230 NODE \u8282\u70b9\u6587\u4ef6\u5939 # \u67e5\u770b\u96c6\u7fa4\u90e8\u7f72 kubectl get deployment # \u5220\u9664\u96c6\u7fa4\u90e8\u7f72 kubectl delete deployment tomcat-deploy # \u67e5\u770b\u8282\u70b9\u4fe1\u606f kubectl get pod # \u67e5\u770b\u96c6\u7fa4\u670d\u52a1 kubectl get service # \u5220\u9664\u96c6\u7fa4\u670d\u52a1 kubectl delete service tomcat-deploy.yml apiVersion: extension/v1beta1 kind: Deployment metadata: name: tomcat-deploy spce: replicas:2 template: metadata: labels: app: tomcat-cluster spec: volumes: - name: web-app hostPath: path: /mnt containers: - name: tomcat-cluster image:tomcat:latest ports: - containerPort: 8080 volumeMounts: - name: web-app mountPath: /usr/local/tomcat/webapps # \u6302\u8f7d\u5730\u5740 \u90e8\u7f72\u4e3b\u8282\u70b9\uff1a kubectl create -f tomcat-deploy.yml kubectl get deloyment kubectl get pod -o wide \u9a8c\u8bc1\u662f\u5426\u90e8\u7f72\u6210\u529f\uff1a 1. \u8fdb\u5165Node\u8282\u70b9\uff0c\u5e76\u67e5\u770bNode\u8282\u70b9\u4e2d\u6302\u5728\u7684\u6587\u6863 docker ps docker exec -it image_id /bin/bash ls cd webapps/ ls cat file.txt \u76f4\u63a5\u5728 Master \u4e2d\u8fdb\u5165\u8282\u70b9\u5185\u5bb9\u8fdb\u884c\u9a8c\u8bc1 # \u83b7\u53d6pod_name kubectl get pod -o wide # \u8fdb\u5165 kubectl exec -it pod_name /bin/bash \u5229\u7528Rinetd\u5b9e\u73b0Service \u8d1f\u8f7d\u5747\u8861 \u00b6 # \u67e5\u770b\u76ee\u524d\u7684\u670d\u52a1 kubectl get service # # kubectl delete service tomcat-service tomcat-service apiVersion:v1 kind: Service metadata: name: tomcat-service labels: app: tomcat-service spec: # type: NodePort selector: app: tomcat-cluster ports: - port: 8000 targetPort: 8080 # nodePort:32500 kubectl create -f tomcat-service.yml kubectl get service kubectl describe service tomcat-service curl IP:8000 kubectl get service \u8bbe\u7f6e \u7aef\u53e3 \u8f6c\u53d1 \u7aef\u53e3\u8f6c\u53d1\u5de5\u5177 Rinetd \u94fe\u63a5\u8df3\u8f6c\uff1a K8s \u90e8\u7f72\u8c03\u6574\u547d\u4ee4 \u00b6 # \u66f4\u65b0\u96c6\u7fa4\u914d\u7f6e kubect apply -f yum\u6587\u4ef6\u8def\u5f84 # \u5220\u9664\u90e8\u7f72\u53ca\u670d\u52a1 kubectl delete deployment/service \u8d44\u6e90\u9650\u5b9a containers: - name: tomcat-cluster image: tomcat:latest resources: requests: # \u6700\u4f4e\u9700\u6c42 cpu:1 # CPU\u8d44\u6e90\u53ef\u4ee5\u4e3a0.5\uff0c\u5355\u4f4d\u4e3a\u6838 memory:500Mi limits: # \u6700\u591a\u4f7f\u7528\u8d44\u6e90 cpu:2 memory:1024Mi \u66f4\u65b0 tomcat-deploy.yml apiVersion: extension/v1beta1 kind: Deployment metadata: name: tomcat-deploy spce: replicas:3 template: metadata: labels: app: tomcat-cluster spec: volumes: - name: web-app hostPath: path: /mnt containers: - name: tomcat-cluster image:tomcat:latest resources: requests: cpu: 0.5 memory: 200Mi limites: cpu: 1 memory: 512Mi ports: - containerPort: 8080 volumeMounts: - name: web-app mountPath: /usr/local/tomcat/webapps # \u6302\u8f7d\u5730\u5740 \u66f4\u65b0\u914d\u7f6e kubectl get deployment kubectl apply -f tomcat-service.yml kubectl get pod -o wide - K8s\u5728\u5206\u914d\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u91c7\u7528**\u53ef\u7528\u8d44\u6e90\u4f18\u5148**\u7684\u539f\u5219\u3002\u5373\u90a3\u4e2a\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u4f4e\uff0c\u5c31\u90e8\u7f72\u5728\u90a3\u4e2aPOD\u4e0a - \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5236\u5b9a\u5728\u90a3\u4e2aPOD\u4e0a\u5206\u914d\u5bb9\u5668 \u9879\u76ee\u5b9e\u6218\uff1aK8s\u6784\u5efa\u8d1d\u4eb2\u5a74\u7ae5\u5546\u57ce \u00b6 \u9879\u76ee\u62d3\u6251\u7ed3\u6784\uff1a 1. \u6302\u8f7d\u5171\u4eab\u6587\u4ef6 \u00b6 2. \u90e8\u7f72\u5e76\u521d\u59cb\u5316\u6570\u636e\u5e93 \u00b6 beiqin-db-deploy.yml apiVersion: apps/v1beta1 kind: Deployment metadata: name: beiqin-db-deploy spec: replicas:1 template: metadata: labels: app: beiqin-db-deploy spec: volumes: - name: beiqin-db-deploy hostPath: path: /usr/local/beiqin-sql containers: - name: beiqin-db-deploy image: mysql:5.7 ports: - containerPort: 3306 env: - name: MYSQL_ROOT_PASSWORD value: \"root\" volumeMounts: - name: beiqin-db-volume mountPath: /docker-entrypoint-initdb.d kubectl create -f beiqin-db-deploy.yml kubectl get pod kubectl exec -it xxxx_name /bin/bash # \u8fdb\u5165\u6570\u636e\u5e93 mysql -uroot -p show databases use beinqin; show tables; .... ############## vim beiqin-db-service.yml apiVersion: v1 kind: Service metadata: name: beiqin-db-service label: app: beiqin-db-service spec: selector: app: beiqin-db-deploy ports: - port: 3310 targetPort: 3306 kubectl create -f beqin-db-service.yml # kubectl get service kubectl get svc kubectl describe service beiqin-db-service \u90e8\u7f72web\u5e94\u7528 \u00b6 kubectl get service vim beiqin-app-deploy.yml apiVersion: apps/v1beta1 kind: Deployment metadata: name: beiqin-app-deploy spec: replicas:2 template: metadata: labels: app: beiqin-app-deploy spec: volumes: - name: beiqin-app-deploy hostPath: path: /usr/local/beiqin-dist containers: - name: beiqin-app-deploy image: openjdk:8u222-jre command: [\"/bin/sh\"] args: [\"-c\", \"cd /usr/local/beiqin-dist; java -jar beiqin-app.jar\"] volumesMounts: - name: beiqin-app-volume mountPath: /usr/local/beiqin-dist kubectl create -f beiqin-app-deploy.yml kubectl get pod kubectl logs xxxx_name kubectl get pod -o wide curl IP:88/goods?gid=1788 vim /usr/local/beiqin/dist/application.yml server: port: 80 spring: datasource: driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://beiqin-db-service:3310/beiqin?useUnicode=true&characterEncodeing=utf-8&useSSL=false username:root password:root mvc: favicon: enabled: false mybatis: mapper-locations: classpath:/mapper/*.xml configuration: map-underscore-to-camel-case:true kubectl delete deployment beiqin-app-deploy.yml kubectl create -f beiqin-app-deploy.yml kubectl get pod -o wide \u914d\u7f6e app service \u00b6 vim beiqin-app-service.yml beiqin-app-serive.yml kube create -f beiqin-app-service.yml kubectl describe service beiqin-app-service - \u67e5\u770b\u5bf9\u5916IP \u914d\u7f6e \u5916\u90e8\u8bbf\u95ee \u00b6 vim /etc/rinetd.cnf rinetd.cnf 0.0.0.0 80 IP 80","title":"Kubernetes(K8s) \u6700\u4f73\u5b9e\u8df5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#kubernetesk8s","text":"","title":"Kubernetes(K8s) \u6700\u4f73\u5b9e\u8df5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#k8s","text":"\u5bb9\u5668\u7f16\u6392\uff1a - \u5728\u54ea\u4e9b\u5bbf\u4e3b\u673a\u4e0a\u5b89\u88c5\u4ec0\u4e48\u5bb9\u5668\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u5bb9\u5668\u4ee5\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u901a\u8baf\u548c\u88ab\u7ba1\u7406 \u5355\u673a\u7f16\u6392\u5de5\u5177\uff1a - docker compose \u96c6\u7fa4\u7f16\u6392\u5de5\u5177\uff1a - docker swarm - kubernetes","title":"\u4e00\u3001\u5bb9\u5668\u7f16\u6392\u53caK8s\u4ecb\u7ecd"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#kubernetes","text":"\u81ea\u52a8\u5316\u5bb9\u5668\u7684\u90e8\u7f72\u548c\u590d\u5236 \u968f\u65f6\u6269\u5c55\u6216\u6536\u7f29\u5bb9\u5668\u89c4\u6a21 \u5bb9\u5668\u5206\u7ec4Group\uff0c\u5e76\u4e14\u63d0\u4f9b\u5bb9\u5668\u95f4\u7684\u8d1f\u8f7d\u5747\u8861 \u5b9e\u65f6\u76d1\u63a7, \u5373\u65f6\u6545\u969c\u53d1\u73b0, \u81ea\u52a8\u66ff\u6362","title":"Kubernetes \u529f\u80fd\u804c\u8d23"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#k8s_1","text":"Kubernetes Master(K8s \u4e3b\u8282\u70b9) \u96c6\u7fa4\u7ba1\u7406\u8005\uff0c\u4e3b\u670d\u52a1\u5668 \u5411\u5176\u4ed6\u8282\u70b9\u53d1\u9001\u6307\u4ee4\uff1a\u521b\u5efa\u5bb9\u5668\uff0c\u81ea\u52a8\u90e8\u7f72\uff0c\u81ea\u52a8\u53d1\u5e03... \u63a5\u53d7\u5916\u90e8\u8bf7\u6c42\uff0c\u5e76\u5206\u53d1\u5230\u5404\u4e2a\u5b50\u8282\u70b9 Node K8s \u5b50\u8282\u70b9\uff0c\u53ef\u662f\u72ec\u7acb\u7684\u7269\u7406\u673a\uff0c\u4e5f\u53ef\u662f\u865a\u62df\u673a \u8d1f\u8d23\u6267\u884c\u4e3b\u8282\u70b9\u53d1\u9001\u8fc7\u6765\u7684\u6307\u4ee4 POD K8s \u63a7\u5236\u7684\u6700\u5c0f\u53ef\u90e8\u7f72\u5355\u5143,\u4e00\u4e2aPOD\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u62e5\u6709\u72ec\u7acb\u8d44\u6e90\u3002 POD \u662f\u201d\u5bb9\u5668\u201d\u7684\u5bb9\u5668,\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u201dContainer\u201d POD \u5185\u90e8\u5bb9\u5668\u7f51\u7edc\u4e92\u901a,\u6bcf\u4e2aPOD\u90fd\u6709\u72ec\u7acb\u865a\u62dfIP\uff0c\u5e76\u7531K8s\u7edf\u4e00\u7ba1\u7406 \u5176\u5185\u90e8\u5b9e\u73b0\u901a\u8fc7 Service \u8fdb\u884c\u901a\u8baf\u5b9e\u73b0 \u4e0d\u540c\u4e1a\u52a1POD\u7684\u5206\u9694\u7c92\u5ea6\u4e0d\u540c POD \u90e8\u7f72\u5b8c\u6574\u7684\u5e94\u7528\u6216\u6a21\u5757 POD \u90e8\u7f72\u67d0\u4e00\u4e2a\u804c\u80fd Pause\u5bb9\u5668\uff08POD\u5185\u90e8) \u63d0\u4f9b\u5171\u4eab\u533f\u540d\u7a7a\u95f4\uff1a \u800c\u540e\u5e94\u7528\u8bbf\u95ee\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528 localhost:port \u5f62\u5f0f\u5b8c\u6210\u5f7c\u6b64\u8bbf\u95ee \u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u4ec5\u6709\u4e0d\u540c\u7684\u7aef\u53e3\u52a0\u4ee5\u533a\u5206 \u63d0\u4f9b\u5171\u4eab\u6302\u8f7d\u6570\u636e\u5377 volume \u5bb9\u5668\u5185\u90e8\u5171\u4eab\u6570\u636e\u5377 Lable \u8bf4\u660e\u6027\u7684\u6807\u7b7e \u6bcf\u4e00\u4e2aPOD\u7684\u522b\u540d Replication Controller \u590d\u5236\u63a7\u5236\u5668 Pod\u5b9e\u65bd\u54cd\u5e94\uff0c\u5e76\u81ea\u52a8\u63a7\u5236\u8282\u70b9\u6570\u91cf \u5e94\u7528\u5e95\u5c42 Kubernete\uff1a K8s \u7684\u6838\u5fc3\u6307\u4ee4\u63a7\u5236 kuber-proxy \u591a\u4e3b\u673a\u4e4b\u95f4\u7684\u901a\u8baf docker","title":"K8s \u57fa\u672c\u6982\u5ff5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#kubernetes_1","text":"\u56fd\u5185\u5b89\u88c5\u7684\u56db\u79cd\u9014\u5f84\uff1a - \u4f7f\u7528kubeadmin\u901a\u8fc7\u79bb\u7ebf\u955c\u50cf\u5b89\u88c5 ---> \u63a8\u8350 - \u4f7f\u7528\u963f\u91cc\u516c\u6709\u4e91\u5e73\u53f0k8s,\u949e\u80fd\u529b ---> \u8d2d\u4e70 - \u901a\u8fc7yum\u5b98\u65b9\u4ed3\u5e93\u5b89\u88c5,\u4e0a\u53e4\u7248\u672c ---> \u7248\u672c\u65e7 - \u4e8c\u8fdb\u5236\u5305\u7684\u5f62\u5f0f\u8fdb\u884c\u5b89\u88c5,kubeasz (github) ---> \u7b2c\u4e09\u65b9\uff0c\u975e\u5b98\u65b9 \u73af\u5883\u51c6\u5907\uff1a - Centos 7 Master * 1 - Master: 192.168.163.132 - Centos 7 Node * 2 - Node1: 192.168.163.133 - Node2: 192.168.163.137","title":"Kubernetes \u5b89\u88c5"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_1","text":"kubeadm/kubelet/kubectl\u533a\u522b kubeadm \u662fkubernetes\u96c6\u7fa4\u5feb\u901f\u6784\u5efa\u5de5\u5177 kubelet \u8fd0\u884c\u5728\u6240\u6709\u8282\u70b9\u4e0a,\u8d1f\u8d23\u542f\u52a8POD\u548c\u5bb9\u5668,\u4ee5\u7cfb\u7edf\u670d\u52a1\u5f62\u5f0f\u51fa\u73b0 kubectl: kubectl\u662fkubenetes\u547d\u4ee4\u884c\u5de5\u5177,\u63d0\u4f9b\u6307\u4ee4 \u542f\u52a8\u8282\u70b9\u547d\u4ee4 - \u542f\u52a8\u8282\u70b9\u7684K8S\u670d\u52a1\uff1a systemctl start kubelet - \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8\uff1a systemctl enable kubelet","title":"\u91cd\u542f\u670d\u52a1"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#web-ui-dashboard","text":"\u914d\u7f6e\u6587\u4ef6\uff1a - kubernetes-dashboard.yaml \uff1a\u4eea\u8868\u76d8\u7684\u914d\u7f6e\uff0c\u57fa\u7840\u914d\u7f6e - admin-role.yaml \uff1a\u7ba1\u7406\u5458\u89d2\u8272\u804c\u80fd - kubernetes-dashboard-admin.rbao.yaml \uff1a\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236 \u5f00\u542f\u4eea\u8868\u76d8 kubectl apply -f kubernetes-dashboard.yaml kubectl apply -f admin-role.yaml kubectl apply -f kubernetes-dashboard-admin.rbac.yaml \u8bbf\u95ee\u4eea\u8868\u76d8\u63a7\u5236\u53f0 kubectl -n kube-system get svc - \u8bbf\u95ee\u5730\u5740\uff1a http://192.168.163.132:32000","title":"\u542f\u7528Web UI Dashboard"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#dashboardtomcat","text":"\u5b9a\u4e49\u5404\u4e2a\u8282\u70b9\u7684\u963f\u91cc\u4e91\u955c\u50cf\u670d\u52a1 \u4eea\u8868\u76d8\u5de5\u4f5c\u8d1f\u8f7d\uff1a","title":"\u6848\u4f8b\uff1aDashboard\u90e8\u7f72Tomcat\u96c6\u7fa4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#deployment-tomcat","text":"Deployment(\u90e8\u7f72) - \u90e8\u7f72\u662f\u6307Kubernetes\u5411Node\u8282\u70b9\u53d1\u9001\u6307\u4ee4\uff0c\u521b\u5efa\u5bb9\u5668\u7684\u8fc7\u7a0b - Kubernetes\u652f\u6301yml\u683c\u5f0f\u7684\u90e8\u7f72\u811a\u672c #\u521b\u5efa\u90e8\u7f72 kubectl create -f \u90e8\u7f72yml\u6587\u4ef6 Deployment \u90e8\u7f72\u811a\u672c apiVersion:extensions/vlbetal # \u7248\u672c\uff0c\u4e00\u822c\u56fa\u5b9a kind:Deployment # \u7528\u9014\uff1a\u90e8\u7f72 metadata: name:tomcat-deploy # \u540d\u79f0 spec: replicas:2 # \u90e8\u7f72\u6570\u91cf template: metadata: labels: app:tomcat-cluster spec: containers: - name:tomcat-cluster # \u4e00\u822c\u4e0eapp\u540c\u540d image:tomcat # \u955c\u50cf\u6765\u6e90 ports: - containerPort:8080 # \u66b4\u9732\u7aef\u53e3 \u90e8\u7f72\u76f8\u5173\u547d\u4ee4\uff1a # \u521b\u5efa\u90e8\u7f72 kubectl create -f \u90e8\u7f72yml\u6587\u4ef6 # \u66f4\u65b0\u90e8\u7f72\u914d\u7f6e kubectl apply -f \u90e8\u7f72yml\u6587\u4ef6 # \u67e5\u770b\u5df2\u90e8\u7f72pod kubectl get pod [-o wide] # \u67e5\u770bPod\u8be6\u7ec6\u4fe1\u606f kubectl describe pod pod\u540d\u79f0 # \u67e5\u770bpod\u8f93\u51fa\u65e5\u5fd7 kubectl logs [-f] pod\u540d\u79f0 tomcat-deploy.yml apiVersion: extensions/v1beta1 king:Deployment metadata: name: tomcat-deploy spec: replicas:2 template: metadata: labels: app: tomcat-cluster spec: containers: - name: tomcat-cluster image: tomcat:latest ports: - containerPort: 8080 # \u521b\u5efa\u90e8\u7f72 kubectl create -f ./tomcat-deploy.yml # \u67e5\u770b\u90e8\u7f72\u60c5\u51b5 kubectl get deployment # \u5217\u51fa\u6240\u6709POD\uff0c kebectl get pod -o wide # \u67e5\u770bpod\u8be6\u7ec6\u4fe1\u606f kubectl describe pod pod_name # \u67e5\u770b\u65e5\u5fd7\u5185\u5bb9 kubectl logs po_name","title":"Deployment \u811a\u672c\u90e8\u7f72 Tomcat \u96c6\u7fa4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#tomcat","text":"Service \u670d\u52a1\u7528\u4e8e\u5bf9\u5916\u66b4\u9732\u5e94\u7528\uff1a \u4f7f\u7528\u96c6\u7fa4\u5bf9\u5bbf\u4e3b\u673a\u66b4\u9732\u7684\u7aef\u53e3\u7edf\u4e00\u8bbf\u95ee \u5bbf\u4e3b\u673a\u7684IP\u8bbf\u95ee\uff0c\u6b64\u65f6\u96c6\u7fa4\u8d1f\u8f7d\u5747\u8861\u529f\u80fd\u5931\u6548 \u901a\u8fc7\u5bbf\u4e3b\u673aIP\u8bbf\u95ee\uff1a 1. \u521b\u5efaYML\u811a\u672c tomcat-service.yml apiVersion: v1 kind: Service metadata: name: tomcat-service # \u663e\u793a labels: app: tomcat-service # POD \u9009\u62e9 spec: type: NodePort selector: app: tomcat-cluster # \u7ed1\u5b9a\u90e8\u7f72\u7684 tomcat-cluster \u6807\u7b7e ports: - port: 8000 # \u5bf9\u5916\u8bbf\u95eeport targetPort: 8080 # \u5bb9\u5668\u7aef\u53e3\u6620\u5c04 nodePort: 32500 # \u5bbf\u4e3b\u673anode\u7aef\u53e3\u6620\u5c04 2. \u521b\u5efa\u5bf9\u5e94\u670d\u52a1\uff0c\u5e76\u63d0\u4f9bNode\u5bbf\u4e3b\u673a\u8bbf\u95ee kubectl create -f ./tomcat-service.yml kubectl get service kubectl describe service tomcat-service","title":"\u5916\u90e8\u8bbf\u95eeTomcat \u96c6\u7fa4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#nfs","text":"NFS \uff1aNetwork File System - SUN \u516c\u53f8\u7814\u53d1\u7684\u6587\u4ef6\u4f20\u8f93\u534f\u8bae - \u4e3b\u8981\u91c7\u7528\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528RPC\u673a\u5236\u5b9e\u73b0\u6587\u4ef6\u4f20\u8f93 \u5b89\u88c5NFS yum install -y nfs-utils rpcbind \u96c6\u7fa4\u6587\u4ef6\u5171\u4eab \u5171\u4eab\u5bbf\u4e3b\u673a\u8bbe\u7f6e \u8bbe\u7f6e\u5bf9\u5916\u5171\u4eab\u6587\u4ef6\u5939 vim /etc/exports exports # \u8bbe\u7f6e\u5171\u4eab\u6587\u4ef6\u5939\u4f4d\u7f6e\uff0cIP\uff0c\u6743\u9650\uff0c\u4ee5\u53ca\u540c\u6b65\u5199 /usr/local/data/xxx IP/24(rw, sync) \u542f\u52a8\u76f8\u5e94\u670d\u52a1\u5e76\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 # \u542f\u52a8NFS\u670d\u52a1 systemctl start nfs.service # \u542f\u52a8RPC\u670d\u52a1 systemctl start rpcbind.service # \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable nfs.service systemctl enable rpcbind.service # \u67e5\u770b\u5171\u4eab\u6587\u4ef6\u5939\u8bbe\u7f6e\u5185\u5bb9\uff1a\u4f4d\u7f6e + IP/port exportfs POD \u8282\u70b9\u5171\u4eab\u6587\u4ef6\u5939\u8bbe\u7f6e \u5b89\u88c5nfs\u5de5\u5177\u96c6 yum install -y nfs-utils \u67e5\u770b\u53ef\u8bbf\u95ee\u7684\u5171\u4eab\u6587\u4ef6\u5939 showmount -e 192.168.163.132 \u6302\u5728\u5230 /mnt mount 192.168.163.132:/usr/local/data/xxx /mnt \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable nfs.service \u5c06 POD \u8282\u70b9\u6587\u4ef6\u5939\u6620\u5c04\u5230 NODE \u8282\u70b9\u6587\u4ef6\u5939 # \u67e5\u770b\u96c6\u7fa4\u90e8\u7f72 kubectl get deployment # \u5220\u9664\u96c6\u7fa4\u90e8\u7f72 kubectl delete deployment tomcat-deploy # \u67e5\u770b\u8282\u70b9\u4fe1\u606f kubectl get pod # \u67e5\u770b\u96c6\u7fa4\u670d\u52a1 kubectl get service # \u5220\u9664\u96c6\u7fa4\u670d\u52a1 kubectl delete service tomcat-deploy.yml apiVersion: extension/v1beta1 kind: Deployment metadata: name: tomcat-deploy spce: replicas:2 template: metadata: labels: app: tomcat-cluster spec: volumes: - name: web-app hostPath: path: /mnt containers: - name: tomcat-cluster image:tomcat:latest ports: - containerPort: 8080 volumeMounts: - name: web-app mountPath: /usr/local/tomcat/webapps # \u6302\u8f7d\u5730\u5740 \u90e8\u7f72\u4e3b\u8282\u70b9\uff1a kubectl create -f tomcat-deploy.yml kubectl get deloyment kubectl get pod -o wide \u9a8c\u8bc1\u662f\u5426\u90e8\u7f72\u6210\u529f\uff1a 1. \u8fdb\u5165Node\u8282\u70b9\uff0c\u5e76\u67e5\u770bNode\u8282\u70b9\u4e2d\u6302\u5728\u7684\u6587\u6863 docker ps docker exec -it image_id /bin/bash ls cd webapps/ ls cat file.txt \u76f4\u63a5\u5728 Master \u4e2d\u8fdb\u5165\u8282\u70b9\u5185\u5bb9\u8fdb\u884c\u9a8c\u8bc1 # \u83b7\u53d6pod_name kubectl get pod -o wide # \u8fdb\u5165 kubectl exec -it pod_name /bin/bash","title":"\u57fa\u4e8eNFS\u6587\u4ef6\u6587\u4ef6\u96c6\u7fa4\u5171\u4eab"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#rinetdservice","text":"# \u67e5\u770b\u76ee\u524d\u7684\u670d\u52a1 kubectl get service # # kubectl delete service tomcat-service tomcat-service apiVersion:v1 kind: Service metadata: name: tomcat-service labels: app: tomcat-service spec: # type: NodePort selector: app: tomcat-cluster ports: - port: 8000 targetPort: 8080 # nodePort:32500 kubectl create -f tomcat-service.yml kubectl get service kubectl describe service tomcat-service curl IP:8000 kubectl get service \u8bbe\u7f6e \u7aef\u53e3 \u8f6c\u53d1 \u7aef\u53e3\u8f6c\u53d1\u5de5\u5177 Rinetd \u94fe\u63a5\u8df3\u8f6c\uff1a","title":"\u5229\u7528Rinetd\u5b9e\u73b0Service \u8d1f\u8f7d\u5747\u8861"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#k8s_2","text":"# \u66f4\u65b0\u96c6\u7fa4\u914d\u7f6e kubect apply -f yum\u6587\u4ef6\u8def\u5f84 # \u5220\u9664\u90e8\u7f72\u53ca\u670d\u52a1 kubectl delete deployment/service \u8d44\u6e90\u9650\u5b9a containers: - name: tomcat-cluster image: tomcat:latest resources: requests: # \u6700\u4f4e\u9700\u6c42 cpu:1 # CPU\u8d44\u6e90\u53ef\u4ee5\u4e3a0.5\uff0c\u5355\u4f4d\u4e3a\u6838 memory:500Mi limits: # \u6700\u591a\u4f7f\u7528\u8d44\u6e90 cpu:2 memory:1024Mi \u66f4\u65b0 tomcat-deploy.yml apiVersion: extension/v1beta1 kind: Deployment metadata: name: tomcat-deploy spce: replicas:3 template: metadata: labels: app: tomcat-cluster spec: volumes: - name: web-app hostPath: path: /mnt containers: - name: tomcat-cluster image:tomcat:latest resources: requests: cpu: 0.5 memory: 200Mi limites: cpu: 1 memory: 512Mi ports: - containerPort: 8080 volumeMounts: - name: web-app mountPath: /usr/local/tomcat/webapps # \u6302\u8f7d\u5730\u5740 \u66f4\u65b0\u914d\u7f6e kubectl get deployment kubectl apply -f tomcat-service.yml kubectl get pod -o wide - K8s\u5728\u5206\u914d\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u91c7\u7528**\u53ef\u7528\u8d44\u6e90\u4f18\u5148**\u7684\u539f\u5219\u3002\u5373\u90a3\u4e2a\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u4f4e\uff0c\u5c31\u90e8\u7f72\u5728\u90a3\u4e2aPOD\u4e0a - \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5236\u5b9a\u5728\u90a3\u4e2aPOD\u4e0a\u5206\u914d\u5bb9\u5668","title":"K8s \u90e8\u7f72\u8c03\u6574\u547d\u4ee4"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#k8s_3","text":"\u9879\u76ee\u62d3\u6251\u7ed3\u6784\uff1a","title":"\u9879\u76ee\u5b9e\u6218\uff1aK8s\u6784\u5efa\u8d1d\u4eb2\u5a74\u7ae5\u5546\u57ce"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#1","text":"","title":"1. \u6302\u8f7d\u5171\u4eab\u6587\u4ef6"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2","text":"beiqin-db-deploy.yml apiVersion: apps/v1beta1 kind: Deployment metadata: name: beiqin-db-deploy spec: replicas:1 template: metadata: labels: app: beiqin-db-deploy spec: volumes: - name: beiqin-db-deploy hostPath: path: /usr/local/beiqin-sql containers: - name: beiqin-db-deploy image: mysql:5.7 ports: - containerPort: 3306 env: - name: MYSQL_ROOT_PASSWORD value: \"root\" volumeMounts: - name: beiqin-db-volume mountPath: /docker-entrypoint-initdb.d kubectl create -f beiqin-db-deploy.yml kubectl get pod kubectl exec -it xxxx_name /bin/bash # \u8fdb\u5165\u6570\u636e\u5e93 mysql -uroot -p show databases use beinqin; show tables; .... ############## vim beiqin-db-service.yml apiVersion: v1 kind: Service metadata: name: beiqin-db-service label: app: beiqin-db-service spec: selector: app: beiqin-db-deploy ports: - port: 3310 targetPort: 3306 kubectl create -f beqin-db-service.yml # kubectl get service kubectl get svc kubectl describe service beiqin-db-service","title":"2. \u90e8\u7f72\u5e76\u521d\u59cb\u5316\u6570\u636e\u5e93"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#web","text":"kubectl get service vim beiqin-app-deploy.yml apiVersion: apps/v1beta1 kind: Deployment metadata: name: beiqin-app-deploy spec: replicas:2 template: metadata: labels: app: beiqin-app-deploy spec: volumes: - name: beiqin-app-deploy hostPath: path: /usr/local/beiqin-dist containers: - name: beiqin-app-deploy image: openjdk:8u222-jre command: [\"/bin/sh\"] args: [\"-c\", \"cd /usr/local/beiqin-dist; java -jar beiqin-app.jar\"] volumesMounts: - name: beiqin-app-volume mountPath: /usr/local/beiqin-dist kubectl create -f beiqin-app-deploy.yml kubectl get pod kubectl logs xxxx_name kubectl get pod -o wide curl IP:88/goods?gid=1788 vim /usr/local/beiqin/dist/application.yml server: port: 80 spring: datasource: driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://beiqin-db-service:3310/beiqin?useUnicode=true&characterEncodeing=utf-8&useSSL=false username:root password:root mvc: favicon: enabled: false mybatis: mapper-locations: classpath:/mapper/*.xml configuration: map-underscore-to-camel-case:true kubectl delete deployment beiqin-app-deploy.yml kubectl create -f beiqin-app-deploy.yml kubectl get pod -o wide","title":"\u90e8\u7f72web\u5e94\u7528"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#app-service","text":"vim beiqin-app-service.yml beiqin-app-serive.yml kube create -f beiqin-app-service.yml kubectl describe service beiqin-app-service - \u67e5\u770b\u5bf9\u5916IP","title":"\u914d\u7f6e app service"},{"location":"250%20Working%20Coding/Docker%20%26%20K8s%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%28K8s%29%20%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#_2","text":"vim /etc/rinetd.cnf rinetd.cnf 0.0.0.0 80 IP 80","title":"\u914d\u7f6e \u5916\u90e8\u8bbf\u95ee"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/","text":"Git: \u516c\u53f8\u5fc5\u5907\uff0c\u4e00\u5b9a\u8981\u4f1a \u00b6 \u7b80\u4ecb \u00b6 Git\u662f\u4e00\u4e2a\u514d\u8d39\uff0c\u5f00\u6e90\u7684**\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf** \u7248\u672c\u63a7\u5236 \u00b6 \u6982\u5ff5\uff1a\u4e00\u79cd\u8bb0\u5f55\u4e00\u4e2a\u6216\u82e5\u5e72\u6587\u4ef6\u5185\u5bb9\u53d8\u5316\uff0c\u4ee5\u4fbf\u5c06\u6765\u67e5\u9605\u7279\u5b9a\u7248\u672c\u4fee\u8ba2\u60c5\u51b5\u7684\u7cfb\u7edf \u56de\u6eaf\u4e4b\u524d\u7684\u6587\u4ef6\u72b6\u6001\uff0c\u751a\u81f3\u9000\u56de\u5230\u8fc7\u53bb\u67d0\u4e2a\u65f6\u95f4\u70b9\u72b6\u6001 \u6bd4\u8f83\u6587\u4ef6\u53d8\u5316\u7ec6\u8282\uff0c\u67e5\u627e\u95ee\u9898\u51fa\u73b0\u7684\u539f\u56e0 \u6587\u4ef6\u5185\u5bb9\u6062\u590d \u5206\u7c7b\uff1a 1\uff0c \u96c6\u4e2d\u5316\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u4e00\u4e2a\u5355\u4e00\u7684\u96c6\u4e2d\u7ba1\u7406\u7684\u670d\u52a1\u5668\u4fdd\u5b58\u6240\u6709\u6587\u4ef6\u7684\u4fee\u8ba2\u7248\u672c\uff0c\u800c\u534f\u540c\u5de5\u4f5c\u4eba\u5458\u90fd\u901a\u8fc7\u5ba2\u6237\u7aef\u5230\u8fd9\u53f0\u670d\u52a1\u5668\u53d6\u51fa\u6700\u65b0\u7684\u6587\u4ef6\u6216\u63d0\u4ea4\u66f4\u65b0\u3002 \u4f18\u52bf\uff1a \u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e86\u89e3\u9879\u76ee\u7684\u8fdb\u5ea6 \u7ba1\u7406\u5458\u53ef\u4ee5\u8f7b\u677e\u638c\u63e1\u6bcf\u4e2a\u5f00\u53d1\u8005\u7684\u6743\u9650\uff0c\u5e76\u7ba1\u7406\u4e00\u4e2a\u96c6\u4e2d\u5316\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u7f3a\u70b9\uff1a \u4e2d\u592e\u670d\u52a1\u5668\u7684\u5355\u70b9\u6545\u969c 2\uff0c \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u53bb\u4e2d\u5fc3\u5316\uff0c\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u4fdd\u5b58\u5b8c\u6574\u7684\u4ee3\u7801\u4ed3\u5e93\u5185\u5bb9\u3002 \u53ef\u6307\u5b9a\u82e5\u5e72\u4e0d\u540c\u7684\u8fdc\u7aef\u4ee3\u7801\u4ed3\u5e93\u540e\uff0c\u53ef\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u4e8e\u4e0d\u540c\u5de5\u4f5c\u5c0f\u7ec4\u7684\u4eba\u76f8\u4e92\u534f\u4f5c \u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5728\u7ba1\u7406\u9879\u76ee\u65f6\uff0c\u5b58\u653e\u7684\u4e0d\u662f\u9879\u76ee\u7248\u672c\u4e0e\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u800c\u662f\u7d22\u5f15\u3002 \u96c6\u4e2d\u5316\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5b58\u50a8\u9879\u76ee\u5185\u5bb9 \u800c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u91c7\u7528\u6781\u81f4\u7684\u538b\u7f29\u7b97\u6cd5\u548c\u89e3\u538b\u7b97\u6cd5\uff0c\u5b58\u50a8\u7d22\u5f15 \u7d22\u5f15\u6240\u5360\u78c1\u76d8\u7a7a\u95f4\u5f88\u5c11\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u653e\u4e0b\u6574\u4e2a\u9879\u76ee\u7684\u5386\u53f2\u8bb0\u5f55 GIT \u672c\u5730\u7ed3\u6784 \u00b6 \u672c\u5730\u5e93 \u6682\u5b58\u533a \u5de5\u4f5c\u533a \u4ee3\u7801\u6258\u7ba1\u4e2d\u5fc3 \u00b6 \u4efb\u52a1\uff1a \u56e2\u961f\u5185\u90e8\u534f\u4f5c \u00b6 \u7ba1\u7406\u5458\u521b\u5efa\u672c\u5730\u5e93\uff0c \u5e76\u63a8\u9001\u8fdc\u7a0b\u5e93 \u5f00\u53d1\u4eba\u5458\u514b\u9686\u8fdc\u7a0b\u5e93\uff0c\u5f00\u53d1\u540e\uff0c\u63a8\u9001\u8fdc\u7a0b\u5e93\uff08\u6b64\u65f6\u9700\u8981\u52a0\u5165\u56e2\u961f\uff09 \u7ba1\u7406\u5458\u62c9\u53d6\u8fdc\u7a0b\u5e93\u5230\u672c\u5730 \u8de8\u56e2\u961f\u534f\u4f5c \u00b6 \u6258\u7ba1\u4e2d\u5fc3\u79cd\u7c7b \u00b6 \u5c40\u57df\u7f51\uff1a\u53ef\u4ee5\u642d\u5efaGitLab\u670d\u52a1\u5668\u4f5c\u4e3a\u4ee3\u7801\u6258\u7ba1\u4e2d\u5fc3\u3002 \u5916\u7f51\u73af\u5883\uff1aGitHub/Gitee Git \u547d\u4ee4 \u00b6 1\uff0c \u672c\u5730\u4ed3\u5e93\u521d\u59cb\u5316 git init 2\uff0c \u672c\u5730\u4ed3\u5e93\u63d0\u4ea4\u4ee3\u7801 git add git add . git add --all git commit -m \"comments\" 3\uff0c \u672c\u5730\u4ed3\u5e93\u67e5\u770b\uff0c\u66f4\u6539\u72b6\u6001 git status git log: \u4f7f\u7528Key-values\u8fdb\u884c\u7248\u672c\u5386\u53f2\u8bb0\u5f55\u7ba1\u7406 key: log_id values: \u7248\u672c\u5185\u5bb9 git log --pretty=online git log --oneline git reflog \u67e5\u770b\u5386\u53f2\u7248\u672c \u5e76\u663e\u793a\u5f53\u524d\u6307\u9488\u9000\u56de\u5386\u53f2\u7248\u672c\u65f6\uff0c\u9700\u8981\u56de\u9000\u7684\u6b65\u6570 git reset --hard version_id hard : \u672c\u5730\u5e93\u6307\u9488\u79fb\u52a8\uff0c\u5e76\u540c\u6b65\u66f4\u65b0\u6682\u5b58\u533a\uff0c\u5de5\u4f5c\u533a mixed : \u672c\u5730\u5e93\u6307\u9488\u79fb\u52a8\uff0c\u5e76\u540c\u6b65\u66f4\u65b0\u6682\u5b58\u533a\uff0c\u4f46\u662f\u5de5\u4f5c\u533a\u4e0d\u52a8 soft : \u672c\u5730\u5e93\u6307\u9488\u79fb\u52a8\uff0c\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u90fd\u4e0d\u52a8 git diff [file] \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6240\u6709\u5185\u5bb9\u5dee\u5f02\uff1a\u53ef\u6dfb\u52a0\u6587\u4ef6\u9650\u5b9a Git \u6309\u7167\u884c\u4e3a\u5355\u4f4d\u8fdb\u884c\u6570\u636e\u7ba1\u7406\uff1a\u5373\u4f1a\u5220\u9664\u4e00\u884c\uff0c\u589e\u52a0\u4e00\u884c git diff HEAD(version_id) [file] \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u672c\u5730\u5e93\u7684\u6240\u6709\u5185\u5bb9\u5dee\u5f02\uff1a\u53ef\u6dfb\u52a0\u6587\u4ef6\u9650\u5b9a Git \u5206\u652f \u00b6 \u547d\u4ee4\uff1a \u67e5\u770b\u5206\u652f - gir branch -v \u521b\u5efa\u65b0\u5206\u652f - git branch hot_fix \u5207\u6362\u5206\u652f\uff1a - git checkout hot_fix \u5408\u5e76\u5206\u652f - \u5207\u6362\u4e3a\u4e3b\u5206\u652f - git merge - \u5206\u652f\u540d\u79f0\u663e\u793a (master|MERGING) - \u51b2\u7a81\u89e3\u51b3\u540e\uff0c\u9700\u8981\u518d\u6b21\u63d0\u4ea4\u4fee\u6539\u540e\u7684\u5185\u5bb9 Git \u573a\u666f\u5e94\u7528 \u00b6 \u56e2\u961f\u5185\u90e8\u534f\u4f5c \u00b6 1. Github\u4f7f\u7528 \u00b6 \u90ae\u7bb1\u6ce8\u518c\u65f6\uff0c163\u90ae\u7bb1\u6709\u53ef\u80fd\u63a5\u53d7\u4e0d\u5230\u6ce8\u518c\u4fe1\u606f\u3002 2. \u5173\u8054\u672c\u5730\u5e93 \u00b6 # \u67e5\u770b\u522b\u540d git remote -v # \u8bbe\u7f6e\u522b\u540d\uff1aorigin\u3002 # \u522b\u540d\u53ef\u4ee5\u968f\u610f\u6839\u636e\u9700\u6c42\u8bbe\u7f6e git remote add origin https://github.com/abookwrom-site/xxxx.git # \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 git remote -v # \u63a8\u9001\u672c\u5730\u4ed3\u5e93 git push origin master - git remote -v \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 - fetch : \u53ef\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u6570\u636e - push : \u53ef\u4ece\u672c\u5730\u4ed3\u5e93\u63a8\u9001\u6570\u636e - git push origin master \u63a8\u9001\u672c\u5730\u4ed3\u5e93 - origin : \u522b\u540d - master : \u9700\u8981\u63a8\u9001\u7684\u5206\u652f 3. \u514b\u9686\u8fdc\u7a0b\u5e93 \u00b6 \u82e5\u4f7f\u7528\u5df2\u6709\u4ed3\u5e93\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u9700\u8981\u514b\u9686\u8fdc\u7a0b\u5e93 # \u514b\u9686\u8fdc\u7a0b\u5e93 git clone https://github.com/abookwrom-site/xxxx.git - \u514b\u9686\u4e4b\u540e\uff0c\u5df2\u7ecf\u81ea\u52a8\u8bbe\u7f6e\u597d\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u522b\u540d origin - \u53ea\u6709\u514b\u9686 \u81ea\u5df1\u7684GitHub\u4ed3\u5e93 \u6216\u8005 \u62e5\u6709\u56e2\u961f\u534f\u4f5c\u6743\u9650\u7684\u8fdc\u7a0b\u5e93 \u624d\u53ef\u4ee5\u76f4\u63a5\u63a8\u9001 4. \u8fdc\u7a0b\u63d0\u4ea4\u64cd\u4f5c \u00b6 1\uff0c Windows \u51ed\u636e\uff1a \u5355\u53f0\u7535\u8111\u62e5\u6709Win \u51ed\u636e\uff0c\u4f1a\u8df3\u8fc7\u4f7f\u7528\u4e0d\u540c\u8d26\u6237\u7684\u56e2\u961f\u63d0\u4ea4\u7533\u8bf7\u3002 2\uff0c \u52a0\u5165\u56e2\u961f\uff1a \u5fc5\u987b\u52a0\u5165\u56e2\u961f\u540e\u624d\u53ef\u4ee5\u63d0\u4ea4\u8fdc\u7a0b\u5e93 \u9080\u8bf7\u4eba\uff1a Settings ---> Manager access ---> Invite a collaborator ---> \u751f\u6210\u9080\u8bf7\u94fe\u63a5 to \u88ab\u9080\u8bf7\u4eba \u88ab\u9080\u8bf7\u4eba\uff1a\u8bbf\u95ee\u9080\u8bf7\u94fe\u63a5\uff0c\u63a5\u6536\u9080\u8bf7\u5373\u53ef\u3002 3\uff0c \u63a8\u9001\u672c\u5730\u5e93 \u4e00\u822c\u800c\u8a00\uff0c\u8bf7**\u5148\u62c9\u53d6\u8fdc\u7a0b\u5e93\uff0c\u65e0\u51b2\u7a81\u540e\u518d\u63a8\u9001\u8fdc\u7a0b\u5e93** \u5185\u90e8\u534f\u4f5c - \u62c9\u53d6\u64cd\u4f5c \u00b6 \u5206 fetch + merge \u4e24\u6b65\u64cd\u4f5c # \u6293\u53d6\u8fdc\u7a0b\u5e93\u5185\u5bb9 git fetch origin master # \u67e5\u770b\u8fdc\u7a0b\u5e93\u5185\u5bb9 git checkout origin/master # \u5207\u6362\u672c\u5730\u5206\u652f git checkout master # \u5408\u5e76\u672c\u5730\u5185\u5bb9 git merge origin/master - \u6293\u53d6\u64cd\u4f5c\u540e\uff0c\u4ec5\u4ec5\u53ea\u662f\u5c06\u8fdc\u7a0b\u5e93\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u800c\u5de5\u4f5c\u533a\u7684\u5185\u5bb9\u5e76\u4e0d\u4f1a\u66f4\u65b0\u3002 \u76f4\u63a5\u5229\u7528pull\u64cd\u4f5c git pull origin master \u6b64\u5904\uff0c\u6240\u6709\u5185\u5bb9\u90fd\u4f1a\u66f4\u65b0\u5230\u8fdc\u7a0b\u64cd\u4f5c\u5185\u5bb9 \u4e24\u79cd\u64cd\u4f5c\u6bd4\u8f83\uff1a fetch + merge : \u614e\u91cd\u8d77\u89c1 pull :\u7b80\u5355\u65b9\u4fbf \u5185\u90e8\u534f\u4f5c - \u51b2\u7a81\u89e3\u51b3 \u00b6 \u5728\u8fdc\u7a0b\u5e93\u53d1\u751f\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u5148\u62c9\u53d6 pull \u4fee\u6539\u51b2\u7a81\uff0c\u4e4b\u540e\u518d\u63a8\u9001\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002 - \u5728\u89e3\u51b3\u51b2\u7a81\u540e\u7684\u672c\u5730\u63d0\u4ea4\uff0c\u4e0d\u80fd\u52a0\u6587\u4ef6\u540d\u79f0\u3002 \u8de8\u56e2\u961f\u534f\u4f5c \u00b6 \u8de8\u56e2\u961f\u534f\u4f5c\uff0c\u5c5e\u4e8e\u975e\u4e3b\u5f00\u53d1\u56e2\u961f 1. fork \u4e3b\u5f00\u53d1\u56e2\u961f\u4ed3\u5e93 \u00b6 2. \u5185\u90e8\u56e2\u961f\u534f\u4f5c\uff0c\u5b8c\u6210\u5f00\u53d1\u4efb\u52a1 \u00b6 3. pull requests \u00b6 \u7533\u8bf7\u4eba\uff1afork\u4fee\u6539\u540e ---> new pull requests ---> \u4fee\u6539\u7684\u8be6\u7ec6\u5185\u5bb9 \u62e5\u6709\u4eba\uff1a\u67e5\u770b pull requests \u7559\u8a00\u7ed9\u7533\u8bf7\u4eba\uff0c\u76f8\u4e92\u6c9f\u901a \u67e5\u770b\u66f4\u6539\uff1a Files changed \u5408\u5e76\uff0c\u6216\u8005\u62d2\u7edd \u8de8\u56e2\u961f\u534f\u4f5c\u65f6\uff0c\u82e5\u662f\u4e3b\u5f00\u53d1\u56e2\u961f\u6210\u5458\uff0c\u4ec5\u9700\u8981\u5728\u5185\u90e8\u534f\u4f5c\u64cd\u4f5c\u4e4b\u540e\uff0c\u5ba1\u6838\u5176\u4ed6\u5f00\u53d1\u56e2\u961f\u7684 pull requests \u5373\u53ef\u3002 Github SSH\u514d\u5bc6\u767b\u5f55 \u00b6 1. \u751f\u6210\u5bc6\u94a5 \u00b6 # \u8fdb\u5165\u5bb6\u76ee\u5f55 cd ~ # \u751f\u6210\u5bc6\u94a5 ssh-keygen -t rsa -C chenmoxxx@outlook.com - \u90ae\u7bb1\u4e3aGithub\u6ce8\u518c\u90ae\u7bb1 2. \u5173\u8054Gihub\u8d26\u6237\u5bc6\u94a5 \u00b6 \u590d\u5236\u751f\u6210\u7684\u5bc6\u94a5\u5185\u5bb9\uff1a ~/.ssh/id_rad.pub \u767b\u5f55\u8d26\u6237\uff0c\u5e76\u589e\u52a0 New SSHkey : Settings ---> SSH and GPG keys ---> New SSHkey \u65b0\u589e\u5bc6\u94a5\uff1a\u5bc6\u94a5\u540d\u79f0\u89c1\u540d\u77e5\u610f\u5373\u53ef\u3002 Github \u514d\u5bc6\u63a8\u9001 \u00b6 # \u6dfb\u52a0\u522b\u540d git remote add origin_name https://github.com/abookworm-site/xxxx.git # \u67e5\u770b\u522b\u540d git remote -v # \u63d0\u4ea4\u5230\u4e3b git push origin_name master # \u63d0\u4ea4\u5230\u8fdc\u7a0b\u65b0\u5206\u652f git push origin_name master:branch_name IDEA \u96c6\u6210 GIT \u00b6 IDEA \u96c6\u6210 Git\uff1a Settings ---> Version Control ---> Git Path to Git executable : c:\\Program Files\\Git\\cmd\\git.exe \u521d\u59cb\u5316\u672c\u5730\u5e93 VCS ---> Import into Version Control ---> Create Git Repository... \u63d0\u4ea4\u66f4\u6539\u5230\u672c\u5730\u5e93 \u53f3\u51fb\u6587\u4ef6 ---> Git ---> Add \u53f3\u51fb\u6587\u4ef6 ---> Git ---> Commit \u5176\u4ed6\u64cd\u4f5c \u63a8\u9001\u5230\u8fdc\u7a0b\u5e93 Git ---> Repository ---> Push ---> Define remote Name : \u8bbe\u7f6e\u522b\u540d URL : \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 \u6ce8\u610f\uff1a\u5f00\u53d1\u4e2d\uff0c\u4e00\u822c\u6211\u4eec\u5148\u62c9\u53d6\u8fdc\u7a0b\u5e93\uff0c\u518d\u63d0\u4ea4\u6211\u4eec\u7684\u4fee\u6539\u4ee3\u7801\u3002\u4ee5\u907f\u514d\u63d0\u4ea4\u5931\u8d25\u3002 \u8fdc\u7a0b\u5e93\u514b\u9686 File ---> New ---> Project from Version Control... Repository URL URL :\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 Directory : \u672c\u5730\u4ed3\u5e93\u8def\u5f84 \u5173\u8054\u4e0d\u76f8\u5173\u7684\u8fdc\u7a0b\u5e93\u548c\u672c\u5730\u5e93 \u00b6 \u62c9\u53d6\u8fdc\u7a0b\u5e93\uff0c\u5e76\u8bbe\u7f6e\u4e0d\u76f8\u5173\u5386\u53f2\u5408\u5e76 git remote -v git remote add origin http://github.com/abook......git git pull origin master --allow-unrelated-histories \u6b64\u65f6\uff0c\u4ec5\u4ec5\u62c9\u53d6\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u5185\u5bb9\u5230\u672c\u5730 \u5982\u679c\u672c\u5730\u4ed3\u5e93\u548c\u8fdc\u7a0b\u4ed3\u5e93\u6709\u51b2\u7a81\u5185\u5bb9\uff0c\u9700\u8981\u89e3\u51b3\u51b2\u7a81 \u63a8\u9001\u62c9\u53d6\u540e\u7684\u672c\u5730\u5e93\u5230\u8fdc\u7a0b\u5e93master git push -u origin master -f \u5982\u4f55\u5c3d\u91cf\u907f\u514d\u51b2\u7a81 \u00b6 \u56e2\u961f\u5f00\u53d1\u4e2d\uff0c\u907f\u514d\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u4fee\u6539\u4ee3\u7801 \u5728\u4fee\u6539\u6587\u4ef6\u65f6\uff0c\u5148Pull\u64cd\u4f5c\uff0c \u518dPush\u64cd\u4f5c","title":"Git & Github \u4ee3\u7801\u7ba1\u7406"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#git","text":"","title":"Git: \u516c\u53f8\u5fc5\u5907\uff0c\u4e00\u5b9a\u8981\u4f1a"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_1","text":"Git\u662f\u4e00\u4e2a\u514d\u8d39\uff0c\u5f00\u6e90\u7684**\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf**","title":"\u7b80\u4ecb"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_2","text":"\u6982\u5ff5\uff1a\u4e00\u79cd\u8bb0\u5f55\u4e00\u4e2a\u6216\u82e5\u5e72\u6587\u4ef6\u5185\u5bb9\u53d8\u5316\uff0c\u4ee5\u4fbf\u5c06\u6765\u67e5\u9605\u7279\u5b9a\u7248\u672c\u4fee\u8ba2\u60c5\u51b5\u7684\u7cfb\u7edf \u56de\u6eaf\u4e4b\u524d\u7684\u6587\u4ef6\u72b6\u6001\uff0c\u751a\u81f3\u9000\u56de\u5230\u8fc7\u53bb\u67d0\u4e2a\u65f6\u95f4\u70b9\u72b6\u6001 \u6bd4\u8f83\u6587\u4ef6\u53d8\u5316\u7ec6\u8282\uff0c\u67e5\u627e\u95ee\u9898\u51fa\u73b0\u7684\u539f\u56e0 \u6587\u4ef6\u5185\u5bb9\u6062\u590d \u5206\u7c7b\uff1a 1\uff0c \u96c6\u4e2d\u5316\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u4e00\u4e2a\u5355\u4e00\u7684\u96c6\u4e2d\u7ba1\u7406\u7684\u670d\u52a1\u5668\u4fdd\u5b58\u6240\u6709\u6587\u4ef6\u7684\u4fee\u8ba2\u7248\u672c\uff0c\u800c\u534f\u540c\u5de5\u4f5c\u4eba\u5458\u90fd\u901a\u8fc7\u5ba2\u6237\u7aef\u5230\u8fd9\u53f0\u670d\u52a1\u5668\u53d6\u51fa\u6700\u65b0\u7684\u6587\u4ef6\u6216\u63d0\u4ea4\u66f4\u65b0\u3002 \u4f18\u52bf\uff1a \u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e86\u89e3\u9879\u76ee\u7684\u8fdb\u5ea6 \u7ba1\u7406\u5458\u53ef\u4ee5\u8f7b\u677e\u638c\u63e1\u6bcf\u4e2a\u5f00\u53d1\u8005\u7684\u6743\u9650\uff0c\u5e76\u7ba1\u7406\u4e00\u4e2a\u96c6\u4e2d\u5316\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u7f3a\u70b9\uff1a \u4e2d\u592e\u670d\u52a1\u5668\u7684\u5355\u70b9\u6545\u969c 2\uff0c \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u53bb\u4e2d\u5fc3\u5316\uff0c\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u4fdd\u5b58\u5b8c\u6574\u7684\u4ee3\u7801\u4ed3\u5e93\u5185\u5bb9\u3002 \u53ef\u6307\u5b9a\u82e5\u5e72\u4e0d\u540c\u7684\u8fdc\u7aef\u4ee3\u7801\u4ed3\u5e93\u540e\uff0c\u53ef\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u4e8e\u4e0d\u540c\u5de5\u4f5c\u5c0f\u7ec4\u7684\u4eba\u76f8\u4e92\u534f\u4f5c \u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5728\u7ba1\u7406\u9879\u76ee\u65f6\uff0c\u5b58\u653e\u7684\u4e0d\u662f\u9879\u76ee\u7248\u672c\u4e0e\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u800c\u662f\u7d22\u5f15\u3002 \u96c6\u4e2d\u5316\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5b58\u50a8\u9879\u76ee\u5185\u5bb9 \u800c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u91c7\u7528\u6781\u81f4\u7684\u538b\u7f29\u7b97\u6cd5\u548c\u89e3\u538b\u7b97\u6cd5\uff0c\u5b58\u50a8\u7d22\u5f15 \u7d22\u5f15\u6240\u5360\u78c1\u76d8\u7a7a\u95f4\u5f88\u5c11\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u653e\u4e0b\u6574\u4e2a\u9879\u76ee\u7684\u5386\u53f2\u8bb0\u5f55","title":"\u7248\u672c\u63a7\u5236"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#git_1","text":"\u672c\u5730\u5e93 \u6682\u5b58\u533a \u5de5\u4f5c\u533a","title":"GIT \u672c\u5730\u7ed3\u6784"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_3","text":"\u4efb\u52a1\uff1a","title":"\u4ee3\u7801\u6258\u7ba1\u4e2d\u5fc3"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_4","text":"\u7ba1\u7406\u5458\u521b\u5efa\u672c\u5730\u5e93\uff0c \u5e76\u63a8\u9001\u8fdc\u7a0b\u5e93 \u5f00\u53d1\u4eba\u5458\u514b\u9686\u8fdc\u7a0b\u5e93\uff0c\u5f00\u53d1\u540e\uff0c\u63a8\u9001\u8fdc\u7a0b\u5e93\uff08\u6b64\u65f6\u9700\u8981\u52a0\u5165\u56e2\u961f\uff09 \u7ba1\u7406\u5458\u62c9\u53d6\u8fdc\u7a0b\u5e93\u5230\u672c\u5730","title":"\u56e2\u961f\u5185\u90e8\u534f\u4f5c"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_5","text":"","title":"\u8de8\u56e2\u961f\u534f\u4f5c"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_6","text":"\u5c40\u57df\u7f51\uff1a\u53ef\u4ee5\u642d\u5efaGitLab\u670d\u52a1\u5668\u4f5c\u4e3a\u4ee3\u7801\u6258\u7ba1\u4e2d\u5fc3\u3002 \u5916\u7f51\u73af\u5883\uff1aGitHub/Gitee","title":"\u6258\u7ba1\u4e2d\u5fc3\u79cd\u7c7b"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#git_2","text":"1\uff0c \u672c\u5730\u4ed3\u5e93\u521d\u59cb\u5316 git init 2\uff0c \u672c\u5730\u4ed3\u5e93\u63d0\u4ea4\u4ee3\u7801 git add git add . git add --all git commit -m \"comments\" 3\uff0c \u672c\u5730\u4ed3\u5e93\u67e5\u770b\uff0c\u66f4\u6539\u72b6\u6001 git status git log: \u4f7f\u7528Key-values\u8fdb\u884c\u7248\u672c\u5386\u53f2\u8bb0\u5f55\u7ba1\u7406 key: log_id values: \u7248\u672c\u5185\u5bb9 git log --pretty=online git log --oneline git reflog \u67e5\u770b\u5386\u53f2\u7248\u672c \u5e76\u663e\u793a\u5f53\u524d\u6307\u9488\u9000\u56de\u5386\u53f2\u7248\u672c\u65f6\uff0c\u9700\u8981\u56de\u9000\u7684\u6b65\u6570 git reset --hard version_id hard : \u672c\u5730\u5e93\u6307\u9488\u79fb\u52a8\uff0c\u5e76\u540c\u6b65\u66f4\u65b0\u6682\u5b58\u533a\uff0c\u5de5\u4f5c\u533a mixed : \u672c\u5730\u5e93\u6307\u9488\u79fb\u52a8\uff0c\u5e76\u540c\u6b65\u66f4\u65b0\u6682\u5b58\u533a\uff0c\u4f46\u662f\u5de5\u4f5c\u533a\u4e0d\u52a8 soft : \u672c\u5730\u5e93\u6307\u9488\u79fb\u52a8\uff0c\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u90fd\u4e0d\u52a8 git diff [file] \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6240\u6709\u5185\u5bb9\u5dee\u5f02\uff1a\u53ef\u6dfb\u52a0\u6587\u4ef6\u9650\u5b9a Git \u6309\u7167\u884c\u4e3a\u5355\u4f4d\u8fdb\u884c\u6570\u636e\u7ba1\u7406\uff1a\u5373\u4f1a\u5220\u9664\u4e00\u884c\uff0c\u589e\u52a0\u4e00\u884c git diff HEAD(version_id) [file] \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u672c\u5730\u5e93\u7684\u6240\u6709\u5185\u5bb9\u5dee\u5f02\uff1a\u53ef\u6dfb\u52a0\u6587\u4ef6\u9650\u5b9a","title":"Git \u547d\u4ee4"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#git_3","text":"\u547d\u4ee4\uff1a \u67e5\u770b\u5206\u652f - gir branch -v \u521b\u5efa\u65b0\u5206\u652f - git branch hot_fix \u5207\u6362\u5206\u652f\uff1a - git checkout hot_fix \u5408\u5e76\u5206\u652f - \u5207\u6362\u4e3a\u4e3b\u5206\u652f - git merge - \u5206\u652f\u540d\u79f0\u663e\u793a (master|MERGING) - \u51b2\u7a81\u89e3\u51b3\u540e\uff0c\u9700\u8981\u518d\u6b21\u63d0\u4ea4\u4fee\u6539\u540e\u7684\u5185\u5bb9","title":"Git \u5206\u652f"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#git_4","text":"","title":"Git \u573a\u666f\u5e94\u7528"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_7","text":"","title":"\u56e2\u961f\u5185\u90e8\u534f\u4f5c"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#1-github","text":"\u90ae\u7bb1\u6ce8\u518c\u65f6\uff0c163\u90ae\u7bb1\u6709\u53ef\u80fd\u63a5\u53d7\u4e0d\u5230\u6ce8\u518c\u4fe1\u606f\u3002","title":"1. Github\u4f7f\u7528"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#2","text":"# \u67e5\u770b\u522b\u540d git remote -v # \u8bbe\u7f6e\u522b\u540d\uff1aorigin\u3002 # \u522b\u540d\u53ef\u4ee5\u968f\u610f\u6839\u636e\u9700\u6c42\u8bbe\u7f6e git remote add origin https://github.com/abookwrom-site/xxxx.git # \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 git remote -v # \u63a8\u9001\u672c\u5730\u4ed3\u5e93 git push origin master - git remote -v \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 - fetch : \u53ef\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u6570\u636e - push : \u53ef\u4ece\u672c\u5730\u4ed3\u5e93\u63a8\u9001\u6570\u636e - git push origin master \u63a8\u9001\u672c\u5730\u4ed3\u5e93 - origin : \u522b\u540d - master : \u9700\u8981\u63a8\u9001\u7684\u5206\u652f","title":"2. \u5173\u8054\u672c\u5730\u5e93"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#3","text":"\u82e5\u4f7f\u7528\u5df2\u6709\u4ed3\u5e93\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u9700\u8981\u514b\u9686\u8fdc\u7a0b\u5e93 # \u514b\u9686\u8fdc\u7a0b\u5e93 git clone https://github.com/abookwrom-site/xxxx.git - \u514b\u9686\u4e4b\u540e\uff0c\u5df2\u7ecf\u81ea\u52a8\u8bbe\u7f6e\u597d\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u522b\u540d origin - \u53ea\u6709\u514b\u9686 \u81ea\u5df1\u7684GitHub\u4ed3\u5e93 \u6216\u8005 \u62e5\u6709\u56e2\u961f\u534f\u4f5c\u6743\u9650\u7684\u8fdc\u7a0b\u5e93 \u624d\u53ef\u4ee5\u76f4\u63a5\u63a8\u9001","title":"3. \u514b\u9686\u8fdc\u7a0b\u5e93"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#4","text":"1\uff0c Windows \u51ed\u636e\uff1a \u5355\u53f0\u7535\u8111\u62e5\u6709Win \u51ed\u636e\uff0c\u4f1a\u8df3\u8fc7\u4f7f\u7528\u4e0d\u540c\u8d26\u6237\u7684\u56e2\u961f\u63d0\u4ea4\u7533\u8bf7\u3002 2\uff0c \u52a0\u5165\u56e2\u961f\uff1a \u5fc5\u987b\u52a0\u5165\u56e2\u961f\u540e\u624d\u53ef\u4ee5\u63d0\u4ea4\u8fdc\u7a0b\u5e93 \u9080\u8bf7\u4eba\uff1a Settings ---> Manager access ---> Invite a collaborator ---> \u751f\u6210\u9080\u8bf7\u94fe\u63a5 to \u88ab\u9080\u8bf7\u4eba \u88ab\u9080\u8bf7\u4eba\uff1a\u8bbf\u95ee\u9080\u8bf7\u94fe\u63a5\uff0c\u63a5\u6536\u9080\u8bf7\u5373\u53ef\u3002 3\uff0c \u63a8\u9001\u672c\u5730\u5e93 \u4e00\u822c\u800c\u8a00\uff0c\u8bf7**\u5148\u62c9\u53d6\u8fdc\u7a0b\u5e93\uff0c\u65e0\u51b2\u7a81\u540e\u518d\u63a8\u9001\u8fdc\u7a0b\u5e93**","title":"4. \u8fdc\u7a0b\u63d0\u4ea4\u64cd\u4f5c"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#-","text":"\u5206 fetch + merge \u4e24\u6b65\u64cd\u4f5c # \u6293\u53d6\u8fdc\u7a0b\u5e93\u5185\u5bb9 git fetch origin master # \u67e5\u770b\u8fdc\u7a0b\u5e93\u5185\u5bb9 git checkout origin/master # \u5207\u6362\u672c\u5730\u5206\u652f git checkout master # \u5408\u5e76\u672c\u5730\u5185\u5bb9 git merge origin/master - \u6293\u53d6\u64cd\u4f5c\u540e\uff0c\u4ec5\u4ec5\u53ea\u662f\u5c06\u8fdc\u7a0b\u5e93\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u800c\u5de5\u4f5c\u533a\u7684\u5185\u5bb9\u5e76\u4e0d\u4f1a\u66f4\u65b0\u3002 \u76f4\u63a5\u5229\u7528pull\u64cd\u4f5c git pull origin master \u6b64\u5904\uff0c\u6240\u6709\u5185\u5bb9\u90fd\u4f1a\u66f4\u65b0\u5230\u8fdc\u7a0b\u64cd\u4f5c\u5185\u5bb9 \u4e24\u79cd\u64cd\u4f5c\u6bd4\u8f83\uff1a fetch + merge : \u614e\u91cd\u8d77\u89c1 pull :\u7b80\u5355\u65b9\u4fbf","title":"\u5185\u90e8\u534f\u4f5c - \u62c9\u53d6\u64cd\u4f5c"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#-_1","text":"\u5728\u8fdc\u7a0b\u5e93\u53d1\u751f\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u5148\u62c9\u53d6 pull \u4fee\u6539\u51b2\u7a81\uff0c\u4e4b\u540e\u518d\u63a8\u9001\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002 - \u5728\u89e3\u51b3\u51b2\u7a81\u540e\u7684\u672c\u5730\u63d0\u4ea4\uff0c\u4e0d\u80fd\u52a0\u6587\u4ef6\u540d\u79f0\u3002","title":"\u5185\u90e8\u534f\u4f5c - \u51b2\u7a81\u89e3\u51b3"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_8","text":"\u8de8\u56e2\u961f\u534f\u4f5c\uff0c\u5c5e\u4e8e\u975e\u4e3b\u5f00\u53d1\u56e2\u961f","title":"\u8de8\u56e2\u961f\u534f\u4f5c"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#1-fork","text":"","title":"1. fork \u4e3b\u5f00\u53d1\u56e2\u961f\u4ed3\u5e93"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#2_1","text":"","title":"2. \u5185\u90e8\u56e2\u961f\u534f\u4f5c\uff0c\u5b8c\u6210\u5f00\u53d1\u4efb\u52a1"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#3-pull-requests","text":"\u7533\u8bf7\u4eba\uff1afork\u4fee\u6539\u540e ---> new pull requests ---> \u4fee\u6539\u7684\u8be6\u7ec6\u5185\u5bb9 \u62e5\u6709\u4eba\uff1a\u67e5\u770b pull requests \u7559\u8a00\u7ed9\u7533\u8bf7\u4eba\uff0c\u76f8\u4e92\u6c9f\u901a \u67e5\u770b\u66f4\u6539\uff1a Files changed \u5408\u5e76\uff0c\u6216\u8005\u62d2\u7edd \u8de8\u56e2\u961f\u534f\u4f5c\u65f6\uff0c\u82e5\u662f\u4e3b\u5f00\u53d1\u56e2\u961f\u6210\u5458\uff0c\u4ec5\u9700\u8981\u5728\u5185\u90e8\u534f\u4f5c\u64cd\u4f5c\u4e4b\u540e\uff0c\u5ba1\u6838\u5176\u4ed6\u5f00\u53d1\u56e2\u961f\u7684 pull requests \u5373\u53ef\u3002","title":"3. pull requests"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#github-ssh","text":"","title":"Github SSH\u514d\u5bc6\u767b\u5f55"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#1","text":"# \u8fdb\u5165\u5bb6\u76ee\u5f55 cd ~ # \u751f\u6210\u5bc6\u94a5 ssh-keygen -t rsa -C chenmoxxx@outlook.com - \u90ae\u7bb1\u4e3aGithub\u6ce8\u518c\u90ae\u7bb1","title":"1. \u751f\u6210\u5bc6\u94a5"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#2-gihub","text":"\u590d\u5236\u751f\u6210\u7684\u5bc6\u94a5\u5185\u5bb9\uff1a ~/.ssh/id_rad.pub \u767b\u5f55\u8d26\u6237\uff0c\u5e76\u589e\u52a0 New SSHkey : Settings ---> SSH and GPG keys ---> New SSHkey \u65b0\u589e\u5bc6\u94a5\uff1a\u5bc6\u94a5\u540d\u79f0\u89c1\u540d\u77e5\u610f\u5373\u53ef\u3002","title":"2. \u5173\u8054Gihub\u8d26\u6237\u5bc6\u94a5"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#github","text":"# \u6dfb\u52a0\u522b\u540d git remote add origin_name https://github.com/abookworm-site/xxxx.git # \u67e5\u770b\u522b\u540d git remote -v # \u63d0\u4ea4\u5230\u4e3b git push origin_name master # \u63d0\u4ea4\u5230\u8fdc\u7a0b\u65b0\u5206\u652f git push origin_name master:branch_name","title":"Github \u514d\u5bc6\u63a8\u9001"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#idea-git","text":"IDEA \u96c6\u6210 Git\uff1a Settings ---> Version Control ---> Git Path to Git executable : c:\\Program Files\\Git\\cmd\\git.exe \u521d\u59cb\u5316\u672c\u5730\u5e93 VCS ---> Import into Version Control ---> Create Git Repository... \u63d0\u4ea4\u66f4\u6539\u5230\u672c\u5730\u5e93 \u53f3\u51fb\u6587\u4ef6 ---> Git ---> Add \u53f3\u51fb\u6587\u4ef6 ---> Git ---> Commit \u5176\u4ed6\u64cd\u4f5c \u63a8\u9001\u5230\u8fdc\u7a0b\u5e93 Git ---> Repository ---> Push ---> Define remote Name : \u8bbe\u7f6e\u522b\u540d URL : \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 \u6ce8\u610f\uff1a\u5f00\u53d1\u4e2d\uff0c\u4e00\u822c\u6211\u4eec\u5148\u62c9\u53d6\u8fdc\u7a0b\u5e93\uff0c\u518d\u63d0\u4ea4\u6211\u4eec\u7684\u4fee\u6539\u4ee3\u7801\u3002\u4ee5\u907f\u514d\u63d0\u4ea4\u5931\u8d25\u3002 \u8fdc\u7a0b\u5e93\u514b\u9686 File ---> New ---> Project from Version Control... Repository URL URL :\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 Directory : \u672c\u5730\u4ed3\u5e93\u8def\u5f84","title":"IDEA \u96c6\u6210 GIT"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_9","text":"\u62c9\u53d6\u8fdc\u7a0b\u5e93\uff0c\u5e76\u8bbe\u7f6e\u4e0d\u76f8\u5173\u5386\u53f2\u5408\u5e76 git remote -v git remote add origin http://github.com/abook......git git pull origin master --allow-unrelated-histories \u6b64\u65f6\uff0c\u4ec5\u4ec5\u62c9\u53d6\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u5185\u5bb9\u5230\u672c\u5730 \u5982\u679c\u672c\u5730\u4ed3\u5e93\u548c\u8fdc\u7a0b\u4ed3\u5e93\u6709\u51b2\u7a81\u5185\u5bb9\uff0c\u9700\u8981\u89e3\u51b3\u51b2\u7a81 \u63a8\u9001\u62c9\u53d6\u540e\u7684\u672c\u5730\u5e93\u5230\u8fdc\u7a0b\u5e93master git push -u origin master -f","title":"\u5173\u8054\u4e0d\u76f8\u5173\u7684\u8fdc\u7a0b\u5e93\u548c\u672c\u5730\u5e93"},{"location":"250%20Working%20Coding/Git%20%26%20Github%20%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/Git%20%26%20Github/#_10","text":"\u56e2\u961f\u5f00\u53d1\u4e2d\uff0c\u907f\u514d\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u4fee\u6539\u4ee3\u7801 \u5728\u4fee\u6539\u6587\u4ef6\u65f6\uff0c\u5148Pull\u64cd\u4f5c\uff0c \u518dPush\u64cd\u4f5c","title":"\u5982\u4f55\u5c3d\u91cf\u907f\u514d\u51b2\u7a81"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/","text":"Java \u7a0b\u5e8f\u5458\u638c\u63e1\u7684\u7cfb\u7edf\u5e95\u5c42\u77e5\u8bc6 \u00b6 \u603b\u4f53\u67b6\u6784 \u00b6 \u786c\u4ef6\u57fa\u7840\u77e5\u8bc6 Java\u76f8\u5173\u786c\u4ef6\u77e5\u8bc6 \u6c47\u7f16\u8bed\u8a00\u7684\u6267\u884c\u8fc7\u7a0b\uff08\u65f6\u949f\u53d1\u751f\u5668\u5bc4\u5b58\u5668\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09 \u8ba1\u7b97\u673a\u542f\u52a8\u8fc7\u7a0b \u64cd\u4f5c\u7cfb\u7edf\u57fa\u672c\u77e5\u8bc6 \u8fdb\u7a0b\u7ebf\u7a0b\u7ea4\u7a0b\u7684\u57fa\u672c\u6982\u5ff5\uff08\u9762\u8bd5\u9ad8\u9891\uff09 \u7ea4\u7a0b\u7684\u5b9e\u73b0 \u5185\u5b58\u7ba1\u7406 \u8fdb\u7a0b\u7ba1\u7406\u4e0e\u7ebf\u7a0b\u7ba1\u7406\uff08\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u5728Linux\u4e2d\u7684\u5b9e\u73b0\uff09 \u4e2d\u65ad\u4e0e\u7cfb\u7edf\u8c03\u7528\uff08\u8f6f\u4e2d\u65ad\uff09 \u5185\u6838\u540c\u6b65\u57fa\u7840\u77e5\u8bc6 \u5173\u4e8e\u786c\u76d8IO DMA \u56fe\u4e66\u63a8\u8350\u53ca\u5176\u539f\u5219 \u00b6 \u8bfb\u4e66\u7684\u539f\u5219\uff1a\u4e0d\u6c42\u751a\u89e3\uff0c\u89c2\u5176\u5927\u7565 \u4f60\u5982\u679c\u8fdb\u5230\u5e90\u5c71\u91cc\u5934\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u8e72\u4e0b\u5934\u6765\uff0c\u5f2f\u4e0b\u8170\uff0c\u5c31\u5bf9\u7740\u67d0\u68f5\u6811\u67d0\u68f5\u5c0f\u8349\u731b\u7814\u7a76\u800c\u4e0d\u662f\u8bf4\u5148\u628a\u5e90\u5c71\u7684\u6574\u4f53\u8109\u7edc\u8ddf\u90a3\u7814\u7a76\u6e05\u695a\u4e86\uff0c\u90a3\u4e48\u4f60\u7684\u5b66\u4e60\u65b9\u6cd5\u80af\u5b9a\u6548\u7387\u5de8\u4f4e\u800c\u4e14\u7279\u522b\u75db\u82e6\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u6162\u6162\u5730\u8fd8\u6253\u51fb\u4f60\u7684\u79ef\u6781\u6027\uff0c\u8bf4\u6211\u7684\u5b66\u4e60\u600e\u4e48\u90a3\u4e48\u4e0d happy \u554a\uff0c\u600e\u4e48\u90a3\u4e48\u7279\u6ca1\u52b2\u90a3\uff0c\u56e0\u4e3a\u4f60\u7684\u5b66\u4e60\u65b9\u6cd5\u9519\u4e86\uff0c\u5927\u4f53\u8bfb\u660e\u767d\uff0c\u5148\u62ff\u6765\u7528\uff0c\u7528\u7740\u7528\u7740\uff0c\u5f88\u591a\u9053\u7406\u4f60\u5c31\u660e\u767d\u4e86 \u56fe\u4e66\u63a8\u8350 \u300a\u7f16\u7801\uff1a\u9690\u533f\u5728\u8ba1\u7b97\u673a\u8f6f\u786c\u4ef6\u80cc\u540e\u7684\u8bed\u8a00\u300b \u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b \u8bed\u8a00\uff1aC JAVA K&R\u300aC \u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u300b \u300aC Primer Plus\u300b \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff1a -- \u6bd5\u751f\u7684\u5b66\u4e60 leetCode \u300aJava \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\u300a\u7b97\u6cd5\u300b \u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u827a\u672f\u300b// \u96be \u64cd\u4f5c\u7cfb\u7edf\uff1a Linux \u5185\u6838\u6e90\u7801\u89e3\u6790 Linux \u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0 30 \u5929\u81ea\u5236\u64cd\u4f5c\u7cfb\u7edf \u7f51\u7edc\uff1a\u673a\u5de5\u300aTCP/IP \u8be6\u89e3\u300b\u5377\u4e00 \u7ffb\u8bd1\u4e00\u822c \u7f16\u8bd1\u539f\u7406\uff1a \u673a\u5de5 \u9f99\u4e66 \u300a\u7f16\u8bd1\u539f\u7406\u300b \u300a\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0\u6a21\u5f0f\u300b\u9a6c\u8bed \u6570\u636e\u5e93\uff1a SQLite \u6e90\u7801 Derby - JDK \u81ea\u5e26\u6570\u636e\u5e93 \u8981\u4e8b\u7b2c\u4e00\uff1a \u5e95\u5c42\u539f\u7406\u9002\u5ea6\u6253\u5f00 \u5f53\u4f60\u51dd\u671b\u6df1\u6e0a\uff0c\u6df1\u6e0a\u4e5f\u5728\u51dd\u671b\u4f60\u3002\u5f53\u4f60\u6253\u5f00\u6f58\u591a\u62c9\u4e4b\u76d2\uff0c\u90a3\u4e48\u5b83\u4e5f\u5c06\u541e\u566c\u4f60\u7684\u7cbe\u529b\u548c\u65f6\u95f4\u3002 CPU \u7684\u5236\u4f5c\u8fc7\u7a0b \u00b6 Intel cpu \u7684\u5236\u4f5c\u8fc7\u7a0b https://haokan.baidu.com/v?vid=11928468945249380709&pd=bjh&fr=bjhauthor&type= video CPU \u662f\u5982\u4f55\u5236\u4f5c\u7684\uff08\u6587\u5b57\u63cf\u8ff0\uff09 https ://www.sohu.com/a/255397866_468626 CPU \u7684\u539f\u7406 \u00b6 \u8ba1\u7b97\u673a\u9700\u8981\u89e3\u51b3\u7684\u6700\u6839\u672c\u95ee\u9898\uff1a\u5982\u4f55\u4ee3\u8868\u6570\u5b57 \u6676\u4f53\u7ba1\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a https://haokan.baidu.com/v?vid=16026741635006191272&pd=bjh&fr=bjhauthor&type= video \u6676\u4f53\u7ba1\u7684\u5de5\u4f5c\u539f\u7406\uff1a https://www.bilibili.com/video/av47388949?p=2 \u6c47\u7f16\u8bed\u8a00\uff08\u673a\u5668\u8bed\u8a00\uff09\u7684\u6267\u884c\u8fc7\u7a0b \u00b6 \u6c47\u7f16\u8bed\u8a00\u7684\u672c\u8d28\uff1a\u673a\u5668\u8bed\u8a00\u7684\u52a9\u8bb0\u7b26 \u5176\u5b9e\u5b83\u5c31\u662f\u673a\u5668\u8bed\u8a00 \u8ba1\u7b97\u673a\u901a\u7535 \u2192 CPU \u8bfb\u53d6\u5185\u5b58\u4e2d\u56fa\u5b9a\u4f4d\u7f6e\u7684\u7a0b\u5e8f\uff08\u7535\u4fe1\u53f7\u8f93\u5165\uff09---> \u65f6\u949f\u53d1\u751f\u5668\u4e0d\u65ad\u9707\u8361\u901a\u65ad\u7535 ---> \u63a8\u52a8 CPU \u5185\u90e8\u4e00\u6b65\u4e00\u6b65\u6267\u884c\uff08\u6267\u884c\u591a\u5c11\u6b65\u53d6\u51b3\u4e8e\u6307\u4ee4\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\uff09---> \u8ba1\u7b97\u5b8c\u6210 ---> \u5199\u56de\uff08\u7535\u4fe1\u53f7\uff09---> \u5199\u7ed9\u663e\u5361\u8f93\u51fa\uff08sout\uff0c\u6216\u8005\u56fe\u5f62\uff09 \u65f6\u949f\u53d1\u751f\u5668\u6bcf\u901a\u65ad\u4e00\u6b21\u7535\u79f0\u4e3a\u4e00\u4e2a\u59cb\u7ec8\u5468\u671f \u65f6\u949f\u53d1\u751f\u5668\u6bcf\u79d2\u53ef\u4ee5\u632f\u8361\u7684\u6b21\u6570\u4e3a \u4e3b\u9891\uff0c\u5355\u4f4d\u4e3a\uff1aGHz(\u51e0\u5341\u4ebf\u6b21) \u91cf\u5b50\u8ba1\u7b97\u673a \u00b6 \u91cf\u5b50\u6bd4\u7279\uff0c\u540c\u65f6\u8868\u793a 1 0 \u540c\u65f6\u8868\u793a01\uff0c\u53731\u4f4d\u91cf\u5b50\u4f4d CPU \u7684\u57fa\u672c\u7ec4\u6210 \u00b6 PC -> Program Counter \u7a0b\u5e8f\u8ba1\u6570\u5668 \u8bb0\u5f55\u5f53\u524d\u6307\u4ee4\u5730\u5740 \u4f9d\u636e\u5f53\u524d\u6307\u4ee4\u5730\u5740\u6240\u5360\u7a7a\u95f4\u81ea\u52a8\u504f\u79fb Registers -> \u6682\u65f6\u5b58\u50a8 CPU \u8ba1\u7b97\u9700\u8981\u7528\u5230\u7684\u6570\u636e \u8ddd\u79bbCPU\u6700\u8fd1\u7684\u6570\u636e\u5b58\u50a8 ALU -> Arithmetic & Logic Unit \u8fd0\u7b97\u5355\u5143 \u8ddd\u79bb CU -> Control Unit \u63a7\u5236\u5355\u5143 \u4e2d\u65ad\u76f8\u5173\u7684\u63a7\u5236\u4fe1\u606f MMU -> Memory Management Unit \u5185\u5b58\u7ba1\u7406\u5355\u5143 \u5185\u5b58\u7ba1\u7406\uff1a\u8f6f\u4ef6 +\u3000\u786c\u4ef6\uff08\u8fd9\u91cc\u5c31\u662f\uff09 cache \u7f13\u5b58 \u00b6 \u6570\u636e\u8bfb\u53d6\uff1a - \u6309\u5757\u8bfb\u53d6\uff08cache line\uff09 - \u4f9d\u636e\u7a0b\u5e8f\u5c40\u90e8\u6027\u539f\u7406\uff0c\u53ef\u4ee5\u63d0\u5347\u6548\u7387 - \u5145\u5206\u53d1\u6325\u603b\u7ebf\uff0cCPU\u9488\u811a\u7b49\u4e00\u6b21\u6027\u8bfb\u53d6\u66f4\u591a\u6570\u636e\u7684\u80fd\u529b intel - MESI Cache \u4e00\u81f4\u6027\u534f\u8bae \u4e00\u81f4\u6027\u534f\u8bae\uff1a https://www.cnblogs.com/z00377750/p/9180644.html CPU \u6bcf\u4e2a cache line \u6807\u8bb0\u56db\u79cd\u72b6\u6001\uff08\u989d\u5916\u4e24\u4f4d\uff09 \u8fd9\u79cd\u534f\u8bae\u5b9e\u73b0\u4e86\u9501\u603b\u7ebf\uff0c\u5373\u662f\u7f13\u5b58\u9501\u7684\u4e00\u79cd\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u6709\u4e9b\u65e0\u6cd5\u88ab\u7f13\u5b58\u7684\u6570\u636e\uff0c\u6216\u8005\u8de8\u8d8a\u591a\u4e2a\u7f13\u5b58\u884c\u7684\u6570\u636e\u4f9d\u7136\u5fc5\u987b\u4f7f\u7528\u603b\u7ebf\u9501\u3002 \u53e6\u5916\uff1aMSI MESI MOSI Synapse Firefly Dragon \u7b49\u5747\u662f\u4e0d\u540c\u516c\u53f8\u7684\u4e00\u81f4\u6027\u534f\u8bae \u7f13\u5b58\u884c\uff1a \u7f13\u5b58\u884c\u8d8a\u5927\uff0c\u5c40\u90e8\u6027\u7a7a\u95f4\u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u8bfb\u53d6\u65f6\u95f4\u6162 \u7f13\u5b58\u884c\u8d8a\u5c0f\uff0c\u5c40\u90e8\u6027\u7a7a\u95f4\u6548\u7387\u8d8a\u4f4e\uff0c\u4f46\u8bfb\u53d6\u65f6\u95f4\u5feb \u53d6\u4e00\u4e2a\u6298\u4e2d\u503c\uff0c\u76ee\u524d\u591a\u7528\uff1a64 \u5b57\u8282 package com.mashibing.juc.c_028_FalseSharing ; public class T03_CacheLinePadding { public static volatile long [] arr = new long [ 2 ] ; public static void main ( String [] args ) throws Exception { Thread t1 = new Thread (() -> { for ( long i = 0 ; i < 10_0000_0000L ; i ++ ) { arr [ 0 ] = i ; } }); Thread t2 = new Thread (() -> { for ( long i = 0 ; i < 10_0000_0000L ; i ++ ) { arr [ 1 ] = i ; } }); final long start = System . nanoTime (); t1 . start (); t2 . start (); t1 . join (); t2 . join (); System . out . println (( System . nanoTime () - start ) / 100_0000 ); } } package com.mashibing.juc.c_028_FalseSharing ; public class T04_CacheLinePadding { public static volatile long [] arr = new long [ 16 ] ; public static void main ( String [] args ) throws Exception { Thread t1 = new Thread (() -> { for ( long i = 0 ; i < 10000_0000L ; i ++ ) { arr [ 0 ] = i ; } }); Thread t2 = new Thread (() -> { for ( long i = 0 ; i < 10000_0000L ; i ++ ) { arr [ 8 ] = i ; } }); final long start = System . nanoTime (); t1 . start (); t2 . start (); t1 . join (); t2 . join (); System . out . println (( System . nanoTime () - start ) / 100_0000 ); } } \u4e00\u79cd\u7f16\u7a0b\u65b9\u5f0f\uff1a \u7f13\u5b58\u884c\u5bf9\u9f50 \uff1a - \u5bf9\u4e8e\u6709\u4e9b\u7279\u522b\u654f\u611f\u7684\u6570\u5b57\uff0c\u4f1a\u5b58\u5728\u7ebf\u7a0b\u9ad8\u7ade\u4e89\u7684\u8bbf\u95ee\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u53d1\u751f\u4f2a\u5171\u4eab\uff0c\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u822a\u5bf9\u9f50\u7684\u7f16\u7a0b\u65b9\u5f0f JVM disruptor JDK7 coding: public long p1 , p2 , p3 , p4 , p5 , p6 , p7 ; private volatile long cursor = INITIAL_CURSOR_VALUE ; public long p8 , p9 , p10 , p11 , p012 , p13 , p14 ; \u8bf4\u660e\uff1a - JDK7 \u4e2d\uff0c\u5f88\u591a\u91c7\u7528 long padding \u63d0\u9ad8\u6548\u7387 - JDK8\uff0c\u52a0\u5165\u4e86 @Contended \u6ce8\u89e3\u9700\u8981\u52a0\u4e0a\uff1aJVM -XX:-RestrictContended - \u52a0\u5165\u6ce8\u89e3\u540e\uff0cJVM\u53ef\u4ee5\u4f9d\u636e\u5e95\u5c42CPU\u5236\u9020\u5546\u6765\u8bbe\u7f6e\u4e0d\u540c\u7684\u5b57\u8282\uff0c\u4fdd\u8bc1\u4e0d\u540c\u7684\u7f13\u5b58\u884c \u4e0d\u540c\u90e8\u4ef6\u8bfb\u53d6\uff08\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u539f\u7406\uff09\uff1a - \u5185\u5b58\u8bfb\u53d6\uff1a\u7f13\u5b58\u884c\uff0c\u4e00\u884c\u4e00\u884c\u5730\u8bfb\u53d6 - \u5185\u5b58\u5b58\u50a8\uff1a\u4e00\u9875\u4e00\u9875\u5730\u5b58 - \u786c\u76d8\u8bfb\u53d6\uff1a\u4e00\u5757\u4e00\u5757 \u4e71\u5e8f\u6267\u884c \u00b6 CPU \u5728\u8fdb\u884c\u8bfb\u7b49\u5f85\u7684\u540c\u65f6\u6267\u884c\u6307\u4ee4\uff0c\u662f CPU \u4e71\u5e8f\u7684\u6839\u6e90\uff0c\u4e71\u5e8f\u6267\u884c\u4ee5\u4fbf\u63d0\u5347\u6548\u7387\u3002 - \u6307\u4ee41:\u53bb\u5185\u5b58\u8bfb\u6570\u636e,\u7b49\u5f85\u8fd4\u56de - \u6307\u4ee42:\u4f18\u5148\u6267\u884c \u4e71\u5e8f\u6267\u884c\u7684\u7a0b\u5e8f\u9a8c\u8bc1\uff1a \u53c2\u8003\u535a\u5ba2\uff1a https://preshing.com/20120515/memory-reordering-caught-in-the-act/ jvm/jmm/Disorder.java \u4e71\u5e8f\u6267\u884c\u53ef\u80fd\u4ea7\u751f\u7684\u95ee\u9898 \u00b6 DCL\u5355\u4f8b\u4e3a\u4ec0\u4e48\u8981\u52a0volatile\uff1f \u5bf9\u8c61\u521d\u59cb\u5316\u4f1a\u6709 \u7981\u6b62\u4e71\u5e8f(\u6709\u5e8f\u6027\u4fdd\u969c) \u00b6 CPU \u5c42\u9762\uff1aIntel -> \u539f\u8bed (mfence lfence sfence) \u6216\u8005\u9501\u603b\u7ebf intel lock \u6c47\u7f16\u6307\u4ee4\u5b9e\u73b0\uff1a - \u786c\u4ef6\uff1a\u539f\u5b50\u6307\u4ee4\uff0c\u5982 x86 \u4e0a\u7684 \"lock addl 0x0(esp)\" \u6307\u4ee4\u662f\u4e00\u4e2a Full Barrier, \u6267\u884c\u65f6\u4f1a\u9501\u4f4f\u5185\u5b58\u5b50\u7cfb\u7edf\u6765\u786e\u4fdd\u6267\u884c\u987a\u5e8f\uff0c\u751a\u81f3\u8de8\u591a\u4e2acpu - \u8f6f\u4ef6\uff1aSoftware Locks \u901a\u5e38\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u6216\u539f\u5b50\u6307\u4ee4\u6765\u5b9e\u73b0\u53d8\u91cf\u53ef\u89c1\u6027\u548c\u4fdd\u6301\u7a0b\u5e8f\u987a\u5e8f\u3002 x86 CPU \u5185\u5b58\u5c4f\u969c\uff1a 1. intel \u539f\u8bed\uff08\u6c47\u7f16\u6307\u4ee4\uff09\u5b8c\u6210\u5c4f\u969c - lfence:load fence \u8bfb\u5c4f\u969c\uff1a\u5728lfence\u6307\u4ee4\u524d\u7684\u6240\u6709\u8bfb\u64cd\u4f5c\uff0c\u5fc5\u987b\u5728lfence\u6307\u4ee4\u540e\u7684\u8bfb\u64cd\u4f5c\u524d\u5b8c\u6210\u3002 - sfence:save fence \u5199\u5c4f\u969c\uff1a\u5728sfence\u6307\u4ee4\u524d\u7684\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u5fc5\u987b\u5728sfence\u6307\u4ee4\u540e\u7684\u5199\u64cd\u4f5c\u524d\u5b8c\u6210\u3002 - mfence: mixed fence \u8bfb\u5199\u5c4f\u969c\uff1a\u5728mfence\u6307\u4ee4\u524d\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c\uff0c\u5fc5\u987b\u5728mfence\u6307\u4ee4\u540e\u7684\u8bfb\u5199\u64cd\u4f5c\u524d\u5b8c\u6210\u3002 2. \u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u603b\u7ebf\u9501\u5b9e\u73b0\u3002 JVM \u5c42\u7ea7\uff1a8 \u4e2a hanppens-before \u539f\u5219 4 \u4e2a\u5185\u5b58\u5c4f\u969c \uff08LL LS SL SS\uff09 JSR\u5185\u5b58\u5c4f\u969c 1. LoadLoad\u5c4f\u969c\uff1a - \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Load1\uff1bLoadLoad\uff1bLoad2; - \u90a3\u4e48\uff0c\u5728Load2\u53ca\u540e\u7eed\u8bfb\u53d6\u64cd\u4f5c\u8981\u8bfb\u53d6\u7684\u6570\u636e\u88ab\u8bbf\u95ee\u524d\uff0c\u4fdd\u8bc1Load1\u8981\u8bfb\u53d6\u7684\u6570\u636e\u88ab\u8bfb\u53d6\u5b8c\u6bd5\u3002 StoreStore\u5c4f\u969c\uff1a \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Store1\uff1bStoreStore\uff1bStore2; \u90a3\u4e48\uff0c\u5728Store2\u53ca\u540e\u7eed\u5199\u5165\u64cd\u4f5c\u6267\u884c\u524d\uff0c\u4fdd\u8bc1Store1\u7684\u5199\u5165\u64cd\u4f5c\u5bf9\u5176\u5b83\u5904\u7406\u5668\u53ef\u89c1\u3002 LoadStore\u5c4f\u969c\uff1a \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Load1\uff1bLoadStore\uff1bStore2\uff0c \u5728Store2\u53ca\u540e\u7eed\u5199\u5165\u64cd\u4f5c\u88ab\u5237\u51fa\u524d\uff0c\u4fdd\u8bc1Load1\u8981\u8bfb\u53d6\u7684\u6570\u636e\u88ab\u8bfb\u53d6\u5b8c\u6bd5\u3002 StoreLoad\u5c4f\u969c\uff1a \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Store1\uff1bStoreLoad\uff1bLoad2; \u5728Load2\u53ca\u540e\u7eed\u6240\u6709\u8bfb\u53d6\u64cd\u4f5c\u6267\u884c\u524d\uff0c\u4fdd\u8bc1Store1\u7684\u5199\u5165\u5bf9\u6240\u6709\u5904\u7406\u5668\u53ef\u89c1\u3002 JVM \u5c42\u9762\u5bf9\u4e8e volatile \u7684\u5b9e\u73b0\u7ec6\u8282\uff1a // case 1 StoreStoreBarrier // ################# volatile \u5199\u64cd\u4f5c // ################# StoreLoadBarrier // case 2 LoadLoadBarrier // ################ volatile \u8bfb\u64cd\u4f5c // ################ LoadStoreBarrier - \u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u6709\u5728 # \u4e0a\u4e0b\u64cd\u4f5c\u90fd\u5b9e\u73b0\u4e86\u5b8c\u5168\u5c4f\u969c\u3002 - \u8fd9\u91cc\u662f JVM \u5c42\u9762\u8981\u6c42\u7684\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f\u89c4\u5219\uff0c\u5b9e\u9645\u5b9e\u73b0\u4ecd\u7136\u662f\u5e95\u5c42\u7684 lock addl 0x0 - \u82e5 volatile new Class \u90a3\u4e48\uff0c\u6574\u4e2a\u7c7b\u5168\u90e8\u5b9e\u73b0\u5c4f\u969c\uff08\u8fd9\u91cc\u662f\u9a6c\u8001\u5e08\u7684\u9a8c\u8bc1\u7ed3\u679c\uff0c\u65e0\u6570\u636e\u53c2\u8003\uff09 Hanppens-before \u539f\u5219\uff08JVM \u89c4\u5b9a\u91cd\u6392\u5e8f\u5fc5\u987b\u9075\u5b88\u7684\u89c4\u5219\uff09 -- JLS17 4.5 - \u7a0b\u5e8f\u6b21\u5e8f\u89c4\u5219\uff1a\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5185\uff0c\u6309\u7167\u4ee3\u7801\u51fa\u73b0\u7684\u987a\u5e8f\uff0c\u524d\u9762\u7684\u4ee3\u7801\u5148\u884c\u4e8e\u540e\u9762\u7684\u4ee3\u7801\uff0c\u51c6\u786e\u7684\u8bf4\u662f\u63a7\u5236\u6d41\u987a\u5e8f\uff0c\u56e0\u4e3a\u8981\u8003\u8651\u5230\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u3002 - \u7ba1\u7a0b\u9501\u5b9a\u89c4\u5219\uff1a\u4e00\u4e2aunlock\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\uff09\u5bf9\u540c\u4e00\u4e2a\u9501\u7684lock\u64cd\u4f5c\u3002 - volatile\u53d8\u91cf\u89c4\u5219\uff1a\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\uff09\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002 - \u7ebf\u7a0b\u542f\u52a8\u89c4\u5219\uff1aThread\u7684start\uff08\uff09\u65b9\u6cd5\u5148\u884c\u53d1\u751f\u4e8e\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u3002 - \u7ebf\u7a0b\u7ec8\u6b62\u89c4\u5219\uff1a\u7ebf\u7a0b\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5148\u884c\u4e8e\u6b64\u7ebf\u7a0b\u7684\u7ec8\u6b62\u68c0\u6d4b\u3002\u53ef\u4ee5\u901a\u8fc7Thread.join\uff08\uff09\u65b9\u6cd5\u7ed3\u675f\u3001Thread.isAlive\uff08\uff09\u7684\u8fd4\u56de\u503c\u7b49\u624b\u6bb5\u68c0\u6d4b\u7ebf\u7a0b\u7684\u7ec8\u6b62\u3002 - \u7ebf\u7a0b\u4e2d\u65ad\u89c4\u5219\uff1a\u5bf9\u7ebf\u7a0binterrupt\uff08\uff09\u65b9\u6cd5\u7684\u8c03\u7528\u5148\u884c\u53d1\u751f\u4e8e\u88ab\u4e2d\u65ad\u7ebf\u7a0b\u7684\u4ee3\u7801\u68c0\u6d4b\u5230\u4e2d\u65ad\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u53ef\u4ee5\u901a\u8fc7Thread.interrupt\uff08\uff09\u65b9\u6cd5\u68c0\u6d4b\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad. - \u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5b8c\u6210\u5148\u884c\u4e8e\u53d1\u751f\u5b83\u7684finalize\uff08\uff09\u65b9\u6cd5\u7684\u5f00\u59cb\u3002 - \u4f20\u9012\u6027\uff1a\u5982\u679c\u64cd\u4f5cA\u5148\u884c\u4e8e\u64cd\u4f5cB\uff0c\u64cd\u4f5cB\u5148\u884c\u4e8e\u64cd\u4f5cC\uff0c\u90a3\u4e48\u64cd\u4f5cA\u5148\u884c\u4e8e\u64cd\u4f5cc as-if-serial : - \u4e0d\u7ba1\u786c\u4ef6\u4ec0\u4e48\u987a\u5e8f(\u5373\u6709\u53ef\u80fd\u53d1\u751f\u91cd\u6392\u5e8f\uff0c\u4f46\u662f\u6ca1\u5565\u5f71\u54cd)\uff0c\u5355\u7ebf\u7a0b\u6267\u884c\u7684\u7ed3\u679c\u4e0d\u53d8\uff0c\u770b\u4e0a\u53bb\u50cf\u662f serial \u6848\u4f8b\uff1a \u95ee\u9898\uff1a\u5c06\u8bf7\u6c42\u6309\u7167\u987a\u5e8f\u6267\u884c \u89e3\u7b54\uff1aThread \u4f7f\u7528 SingleThreadPool. \u5408\u5e76\u5199\uff08\u4e0d\u91cd\u8981\uff09 \u00b6 Write Combining Buffer\uff08\u5408\u5e76\u5199\u6280\u672f\uff0c\u63d0\u5347\u5199\u6548\u7387\uff09 - \u4e00\u822c\u662f 4 \u4e2a\u5b57\u8282 - \u7531\u4e8e ALU \u901f\u5ea6\u592a\u5feb\uff0c\u6240\u4ee5\u5728\u5199\u5165 L1 \u7684\u540c\u65f6\uff0c\u5199\u5165\u4e00\u4e2a WC Buffer\uff0c\u6ee1\u4e86\u4e4b\u540e\uff0c\u518d\u76f4\u63a5\u66f4\u65b0\u5230 L2 NUMA \u00b6 Non Uniform Memory Access UMA\uff1a \u540c\u4e00\u8bbf\u95ee\u5185\u5b58\uff0c\u591a\u4e2aCPU\u8bbf\u95ee\u65f6\u4e0d\u5177\u5907\u660e\u663e\u7684\u4f18\u5148\u7ea7\u8bbf\u95ee\u6743\u9650\u3002 - \u4e0d\u5bb9\u6613\u6269\u5c55 - CPU\u6570\u91cf\u589e\u591a\u540e\u5f15\u8d77\u5185\u5b58\u8bbf\u95ee\u51b2\u7a81\u52a0\u5267\uff0c\u5f88\u591a\u8d44\u6e90\u82b1\u5728\u4e89\u62a2\u5185\u5b58\u5730\u5740\u4e0a\u9762\u4e86\u3002 - \u4e00\u822c\u800c\u8a00\uff0c4\u9897\u5de6\u53f3\u6bd4\u8f83\u5408\u9002\u3002 NUMA\uff1a\u5206\u914d\u5185\u5b58\u4f1a\u4f18\u5148\u5206\u914d\u8be5\u7ebf\u7a0b\u6240\u5728 CPU \u7684\u6700\u8fd1\u5185\u5b58\u3002\u5f53\u7136\uff0c\u8bbf\u95ee\u4e3e\u4f8b\u522b\u4eba\u8fd1\u7684\u5185\u5b58\u4e5f\u5c31\u662f\u4f4e\u6709\u9650\u7ea7\u3002 - \u76ee\u524d\u66f4\u591a\u624d\u6709\u6b64\u67b6\u6784\uff0c\u5f53\u7136\u770b\u751f\u4ea7\u5382\u5bb6 ZGC - NUMA aware - \u7531\u4e8e CPU \u5e95\u5c42\u7ed3\u6784 NUMA\uff0c\u90a3\u4e48\u4ea7\u751f\u4e86\u76f8\u5173\u7684\u8f6f\u4ef6\u6280\u672f \u542f\u52a8\u8fc7\u7a0b\uff08\u4e0d\u91cd\u8981\uff09 \u00b6 \u901a\u7535 -> bios uefi \u5de5\u4f5c -> \u52a0\u7535\u81ea\u68c0 -> \u5230\u786c\u76d8\u56fa\u5b9a\u4f4d\u7f6e()\u52a0\u8f7d bootloader -> \u8bfb\u53d6\u53ef\u914d\u7f6e\u4fe1\u606f -> CMOS - BIOS UEFI:Unified Extensible Firmware Interface - bootloader \u5199\u6b7b\u5230\u78c1\u76d8\u7684\u7b2c\u4e00\u4e2a\u6247\u533a\uff0c\u5e76loader\u5230\u56fa\u5b9a\u4f4d\u7f6e - CMOS(Complementary Metal Oxide Semiconductor): \u9700\u8981\u6301\u7eed\u901a\u7535\uff0c\u65ad\u7535\u540e\u4fe1\u606f\u6d88\u5931 - \u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\uff1a\u6389\u8f6c Ox700 \u64cd\u4f5c\u7cfb\u7edf \u00b6 \u5b9a\u4e49\uff1a\u6240\u6709\u8f6f\u4ef6\u7684\u8001\u5927 - \u7ba1\u7406\u786c\u4ef6\uff1a\u5185\u5b58\uff0c\u786c\u76d8\uff0cCPU - \u7ba1\u7406\u5e94\u7528\uff1a\u8fdb\u7a0b \u7ed3\u6784\uff1a - Hardware - Shell::kernel - \u5e94\u7528 - \u300aLinux \u5185\u6838\u8bbe\u8ba1\u4ee5\u53ca\u5b9e\u8df5\u300b kernel - CUP \u8c03\u5ea6 - \u5185\u5b58\u7ba1\u7406 - \u4e2d\u65ad\u5904\u7406\uff0c\u8bbe\u5907\u9a71\u52a8 - \u5e94\u7528\u7ba1\u7406\uff0c\u8fdb\u7a0b\u8c03\u5ea6 - \u6587\u4ef6\u7cfb\u7edf \u9e3f\u8499\u5fae\u5185\u6838\uff1a - \u9488\u5bf95G + IoT - \u5168\u573a\u666f - \u624b\u673a PC \u5e73\u677f \u8f66\u8f86 \u667a\u80fd\u7a7f\u6234 \u5bb6\u5c45\u8bbe\u5907 - \u5f39\u6027\u90e8\u7f72 - \u5f00\u6e90 - \u65b9\u821f\u7f16\u8bd1\u5668 - \u6df7\u5408\u5185\u6838 Linux + LiteOS + ... \u5185\u6838\u5206\u7c7b \u00b6 \u5fae\u5185\u6838 - \u5f39\u6027\u90e8\u7f72 5G IoT \u5b8f\u5185\u6838 - PC phone \u5916\u6838 - \u79d1\u7814 \u5b9e\u9a8c\u4e2d \u4e3a\u5e94\u7528\u5b9a\u5236\u64cd\u4f5c\u7cfb\u7edf (\u7c7b\u4f3c\u591a\u79df\u6237 request-based GC JVM) \u5b8f\u5185\u6838\uff1a\u6240\u6709\u76f8\u5173\u90fd\u96c6\u6210\u4e00\u4f53 \u5fae\u5185\u6838\uff1a\u4ec5\u4ec5\u5177\u5907\u5e94\u7528\u7ba1\u7406\u548c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u5176\u4ed6\u529f\u80fd\u5168\u90e8\u901a\u8fc7\u8c03\u5ea6\u5b9e\u73b0\u5b8c\u6210 \u6548\u7387\u5fae\u4f4e\uff0c\u5f39\u6027\u90e8\u7f72 \u5916\u6838\uff1a \u4f9d\u636e\u5e94\u7528\u7aef\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5b9a\u5236 VMM: - \u865a\u62df\u673a\u76d1\u63a7\u5668\uff0c\u786c\u4ef6\u8d44\u6e90\u8fc7\u5269 \u7528\u6237\u6001\u4e0e\u5185\u6838\u6001 \u00b6 DOS\uff1a\u4e0d\u5206\u7ea7\u522b\uff0c\u76f4\u63a5\u64cd\u4f5c\u786c\u4ef6\u3002 \u76ee\u524dLinux cpu \u5206\u4e0d\u540c\u7684\u6307\u4ee4\u7ea7\u522b - intel CPU \u5206\u56db\u4e2a\u7ea7\u522b\uff1aring 0, ring 1, ring 2, ring 3 - linux \u5185\u6838\u8dd1\u5728 ring 0 \u7ea7\uff0c \u7528\u6237\u7a0b\u5e8f\u8dd1\u5728 ring 3\uff0c\u5bf9\u4e8e\u7cfb\u7edf\u7684\u5173\u952e\u8bbf\u95ee\uff0c\u9700\u8981\u7ecf\u8fc7 kernel \u7684\u540c\u610f\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u5065\u58ee\u6027 \u5185\u6838\u6267\u884c\u7684\u64cd\u4f5c ---> 200 \u591a\u4e2a\u7cfb\u7edf\u8c03\u7528 sendfile read write pthread fork JVM -> \u7ad9\u5728 OS \u8001\u5927\u7684\u89d2\u5ea6\uff0c\u5c31\u662f\u4e2a\u666e\u901a\u7a0b\u5e8f \u7a0b\u5e8f \u8fdb\u7a0b \u7ebf\u7a0b \u7ea4\u7a0b \u00b6 \u9762\u8bd5\u9ad8\u9891\uff1a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u7b54\u6848\uff1a \u666e\u901a\uff1a\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u7684\u72b6\u6001\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4e0d\u540c\u7684\u6267\u884c\u8def\u5f84\u3002 \u4e13\u4e1a\uff1a\u8fdb\u7a0b\u662f OS \u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u7ebf\u7a0b\u662f\u6267\u884c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002\u5206\u914d\u8d44\u6e90\u6700\u91cd\u8981\u7684\u662f\uff1a\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u6267\u884c\uff08\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff09 \u8fdb\u7a0b \u00b6 \u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u7ebf\u7a0b \u00b6 \u7ebf\u7a0b\u5728 Linux \u4e2d\u7684\u5b9e\u73b0\uff1a \u300aLinux \u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u300b \u7b2c\u4e09\u7248 28 \u9875 - \u6bcf\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4e8e\u7ebf\u7a0b\u7684\u5b9e\u73b0\u4e0d\u540c - Linux \u4e2d\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u8fdb\u7a0b\uff0c\u53ea\u662f\u548c\u5176\u4ed6\u8fdb\u7a0b\u5171\u4eab\u8d44\u6e90\uff08\u5185\u5b58\u7a7a\u95f4\uff0c\u5168\u5c40\u6570\u636e\u7b49\u3002\u3002\u3002\uff09 - \u5176\u4ed6\u7cfb\u7edf\u90fd\u6709\u5404\u81ea\u7684\u6240\u8c13LWP \u7684\u5b9e\u73b0\uff1aLight Weight Process - \u9ad8\u5c42\u9762\u7406\u89e3\uff1a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4e0d\u540c\u7684\u6267\u884c\u8def\u7ebf\u3002 \u5b9e\u73b0\uff1a 1. hotspot JVM\uff08\u7528\u6237\u7ea7\uff09\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u90fd\u662f\u4e00\u4e00\u5bf9\u5e94\u7684, \u6240\u4ee5\u7ebf\u7a0b\u662f\u91cd\u91cf\u7ea7\u7684 2. \u5728JVM\u4e2d\u7ee7\u7eed\u5f00\u8f9f\u7ebf\u7a0b\uff0c\u540c\u5728\u7528\u6237\u7ea7\u91cc\u9762\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u3002\u5b9e\u9645\u4e0a\u4ec5\u4e00\u4e2a\u7ebf\u7a0b\u3002 fiber \u7ea4\u7a0b \u00b6 \u7ea4\u7a0b\uff1a\u7528\u6237\u6001\u7684\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u4e2d\u7684\u7ebf\u7a0b\uff0c\u5207\u6362\u548c\u8c03\u5ea6\u4e0d\u9700\u8981\u7ecf\u8fc7\u64cd\u4f5c\u7cfb\u7edf \u4f18\u52bf\uff1a - 1\uff1a\u5360\u6709\u8d44\u6e90\u5f88\u5c11\uff1aOS\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b1M Fiber\u4e3a4K - 2\uff1a\u5207\u6362\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u542f\u52a8\u5f88\u591a\u4e2a10W+ \u76ee\u524d 2020 3 22 \u652f\u6301\u5185\u7f6e\u7ea4\u7a0b\u7684\u8bed\u8a00\uff1a - Kotlin Scala Go Python(lib)... - Java? \uff08open jdk : loom\uff09 Java \u4e2d\u5bf9\u4e8e\u7ea4\u7a0b\u7684\u652f\u6301\uff1a\u6ca1\u6709\u5185\u7f6e\uff0c\u76fc\u671b\u5185\u7f6e \u00b6 \u5229\u7528 Quaser \u5e93\uff08\u4e0d\u6210\u719f\uff09 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>mashibing.com</groupId> <artifactId>HelloFiber</artifactId> <version>1.0-SNAPSHOT</version> <dependencies> <!-- https://mvnrepository.com/artifact/co.paralleluniverse/quasar-core --> <dependency> <groupId>co.paralleluniverse</groupId> <artifactId>quasar-core</artifactId> <version>0.8.0</version> </dependency> </dependencies> </project> \u7ebf\u7a0b\u7248 import co.paralleluniverse.fibers.Fiber ; import co.paralleluniverse.fibers.SuspendExecution ; import co.paralleluniverse.strands.SuspendableRunnable ; public class HelloFiber { public static void main ( String [] args ) throws Exception { long start = System . currentTimeMillis (); Runnable r = new Runnable () { @Override public void run () { calc (); } }; int size = 10000 ; Thread [] threads = new Thread [ size ] ; for ( int i = 0 ; i < threads . length ; i ++ ) { threads [ i ] = new Thread ( r ); } for ( int i = 0 ; i < threads . length ; i ++ ) { threads [ i ] . start (); } for ( int i = 0 ; i < threads . length ; i ++ ) { threads [ i ] . join (); } long end = System . currentTimeMillis (); System . out . println ( end - start ); } static void calc () { int result = 0 ; for ( int m = 0 ; m < 10000 ; m ++ ) { for ( int i = 0 ; i < 200 ; i ++ ) result += i ; } } } \u7ea4\u7a0b\u7248\u672c import co.paralleluniverse.fibers.Fiber ; import co.paralleluniverse.fibers.SuspendExecution ; import co.paralleluniverse.strands.SuspendableRunnable ; public class HelloFiber2 { public static void main ( String [] args ) throws Exception { long start = System . currentTimeMillis (); // \u7ea4\u7a0b int size = 10000 ; Fiber < Void >[] fibers = new Fiber [ size ] ; for ( int i = 0 ; i < fibers . length ; i ++ ) { fibers [ i ] = new Fiber < Void > ( new SuspendableRunnable () { public void run () throws SuspendExecution , InterruptedException { calc (); } }); } for ( int i = 0 ; i < fibers . length ; i ++ ) { fibers [ i ] . start (); } for ( int i = 0 ; i < fibers . length ; i ++ ) { fibers [ i ] . join (); } long end = System . currentTimeMillis (); System . out . println ( end - start ); } static void calc () { int result = 0 ; for ( int m = 0 ; m < 10000 ; m ++ ) { for ( int i = 0 ; i < 200 ; i ++ ) result += i ; } } } \u4f5c\u4e1a\uff1a \u76ee\u524d\u662f 10000 \u4e2a Fiber -> 1 \u4e2a JVM \u7ebf\u7a0b\uff0c\u60f3\u529e\u6cd5\u63d0\u9ad8\u6548\u7387\uff0c10000Fiber -> 10 \u4efd -> 10Threads \u7ea4\u7a0b\u7684\u5e94\u7528\u573a\u666f \u00b6 \u7ea4\u7a0b vs \u7ebf\u7a0b\u6c60\uff1a\u5f88\u77ed\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u4e0d\u9700\u8981\u548c\u5185\u6838\u6253\u4ea4\u9053\uff0c\u5e76\u53d1\u91cf\u9ad8\uff01 \u8fdb\u7a0b \u00b6 Linux \u4e2d\u4e5f\u79f0\u4e3a task, \u662f\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d - \u8d44\u6e90\uff1a\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5185\u6838\u6570\u636e\u7ed3\u6784\uff08\u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff09 \u5168\u5c40\u53d8\u91cf \u6570\u636e\u6bb5\u3002\u3002\u3002 - \u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff1aPCB\uff08Process Control Block) \u5185\u6838\u8fdb\u7a0b \u00b6 \u5185\u6838\u542f\u52a8\u540e\u7ecf\u5e38\u9700\u8981\u505a\u4e00\u4e9b\u540e\u53f0\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u7531Kernel Thread \u6765\u5b8c\u6210\u3002\u4ec5\u4ec5\u5728\u5185\u6838\u7a7a\u95f4\u8fd0\u884c\u3002 \u8fdb\u7a0b\u521b\u5efa\u548c\u542f\u52a8 \u00b6 \u7cfb\u7edf\u51fd\u6570: - fork() --- clone() - exec() B = fork(A): - A\uff1a \u7236\u8fdb\u7a0b - B\uff1a \u5b50\u8fdb\u7a0b \u50f5\u5c38\u8fdb\u7a0b \u00b6 # \u67e5\u627e\u50f5\u5c38\u8fdb\u7a0b ps -ef | grep defunct \u5b9a\u4e49\uff1a \u7236\u8fdb\u7a0b\u4ea7\u751f\u5b50\u8fdb\u7a0b\u540e\uff0c\u4f1a\u7ef4\u62a4\u5b50\u8fdb\u7a0b\u7684\u4e00\u4e2aPCB\u7ed3\u6784\uff0c\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u7531\u7236\u8fdb\u7a0b\u91ca\u653e\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u6ca1\u6709\u91ca\u653e\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u6210\u4e3a\u4e00\u4e2a\u50f5\u5c38\u8fdb\u7a0b - \u50f5\u5c38\u8fdb\u7a0b\u9700\u8981\u624b\u52a8\u91ca\u653e\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u672a\u5173\u673a\u7684\u670d\u52a1\u5668\u4e2d\u53ef\u80fd\u5b58\u5728\u6301\u7eed\u589e\u957f\u7684\u50f5\u5c38\u8fdb\u7a0b zombie.c #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <assert.h> #include <sys/types.h> int main () \uff5b // for() \u8fd4\u56de\u4e24\u4e2a\u503c\uff0c1 \u4e3a\u5b50\u8fdb\u7a0b\u7a0b\u5e8f\u3002 pid_t pid = fork (); // \u5b50\u8fdb\u7a0b\u8fd0\u884c if ( 0 == pid ) { printf ( \"child id is %d \\n \" , getpid ()); printf ( \"parent id is %d \\n \" , getppid ()); } else // \u7236\u8fdb\u7a0b\u4e00\u81f4\u8fd0\u884c\uff0c\u4e0d\u91ca\u653e\u5b50\u7a0b\u5e8f { while ( 1 ); } } - \u7f16\u8bd1\u53ca\u540e\u53f0\u8fd0\u884c\uff1a gcc zombie.c -o zombie && ./zombie & - \u67e5\u770b\u50f5\u5c38\u8fdb\u7a0b\uff1a ps \u50f5\u5c38\u8fdb\u7a0b\u540e\u9762\u6709 <defunct> \u5b64\u513f\u7ebf\u7a0b \u00b6 \u5b50\u8fdb\u7a0b\u7ed3\u675f\u4e4b\u524d\uff0c\u7236\u8fdb\u7a0b\u5df2\u7ecf\u9000\u51fa \u5b64\u513f\u8fdb\u7a0b\u4f1a\u6210\u4e3aipt\u8fdb\u7a0b\u7684\u5b69\u5b50\uff1a \u82e5\u56fe\u5f62\u5316\u754c\u9762\u5b58\u5728\uff0c\u90a3\u4e48\u8fdb\u7a0b\u7531\u6b64\u8fdb\u7a0b\u7ef4\u62a4 \u82e5\u65e0\u56fe\u5f62\u5316\u754c\u9762\uff0c\u90a3\u4e48\u75311\u53f7\u8fdb\u7a0b\u7ef4\u62a4\uff081\u53f7\u4e3a\u6240\u6709\u8fdb\u7a0b\u7684\u516c\u7239\uff09 orphan.c #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <assert.h> #include <sys/types.h> int main() \uff5b // for() \u8fd4\u56de\u4e24\u4e2a\u503c\uff0c1 \u4e3a\u5b50\u8fdb\u7a0b\u7a0b\u5e8f\u3002 pid_t pid = fork(); // \u5b50\u8fdb\u7a0b\u8fd0\u884c if(0 == pid) { printf(\"child ppid is %d\\n\", getppid()); sleep(10); printf(\"parent ppid is %d\\n\", getppid()); }else // \u7236\u8fdb\u7a0b\u63d0\u524d\u9000\u51fa { printf(\"parent id is %d\\n\", getpid()); sleep(5); exit(); } } \u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u8c03\u5ea6 \u00b6 \u5185\u6838\u8fdb\u7a0b\u8c03\u5ea6\u5668\u51b3\u5b9a\uff1a - \u8be5\u90a3\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff1f\u4f55\u65f6\u5f00\u59cb\uff1f\u8fd0\u884c\u591a\u957f\u65f6\u95f4\uff1f - \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u8c03\u5ea6\u65b9\u6848\u3002 \u4ece\u5355\u4efb\u52a1\uff08\u72ec\u5360\uff09\u5230\u591a\u4efb\u52a1\uff08\u5206\u65f6\uff09 - \u6700\u5f00\u59cb\uff1aDOS MacOS \u65e9\u671f\u7248\u672c\uff0c Windows3.1 ... - \u5230\u76ee\u524d\uff1atimeslice - CPU \u5206\u7247\u6267\u884c\u529f\u80fd - \u539f\u5219\uff1a\u6700\u5927\u9650\u5ea6\u5730\u538b\u69a8cpu\u8d44\u6e90 \u6280\u672f\uff1a - \u5de5\u7a0b\u6280\u672f\uff1a\u5927\u5bb6\u90fd\u53ef\u4ee5\u5b66\u4f1a\u3002 - \u4f5c\u51fa\u81ea\u5df1\u7684\u5de5\u7a0b\u65b9\u4e3a\u6b63\u9014\u3002 \u591a\u4efb\u52a1\uff08multitasking) 1. \u975e\u62a2\u5360\u5f0f\uff08cooperative multitasking\uff09 - \u9664\u975e\u8fdb\u7a0b\u4e3b\u52a8\u8ba9\u51facpu\uff08yielding\uff09\uff0c\u5426\u5219\u5c06\u4e00\u76f4\u8fd0\u884c 2. \u62a2\u5360\u5f0f\uff08preemptive multitasking\uff09 - \u7531\u8fdb\u7a0b\u8c03\u5ea6\u5668\u5f3a\u5236\u5f00\u59cb\u6216\u6682\u505c\uff08\u62a2\u53e4\uff09\u67d0\u4e00\u8fdb\u7a0b\u7684\u6267\u884c \u8fdb\u7a0b\u8c03\u5ea6\uff08\u9009\u4fee\uff09 1. Linux2.5 \u7ecf\u5178 Unix 0(1) \u8c03\u5ea6\u7b56\u7565\uff0c\u504f\u5411\u670d\u52a1\u5668\uff0c\u4f46\u5bf9\u4ea4\u4e92\u4e0d\u53cb\u597d - timeslice \u8f6e\u8be2\u7b56\u7565 - \u6ca1\u6709\u5373\u65f6\u54cd\u5e94\uff0c 2. Linux2.6.23 \u91c7\u7528 CFS \u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5Completely Fair Scheduler - \u6309\u4f18\u5148\u7ea7\u5206\u914d\u65f6\u95f4\u7247\u7684\u6bd4\u4f8b\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u65f6\u95f4\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u65f6\u95f4\u4e0d\u5230\u4ed6\u5e94\u8be5\u5206\u914d\u7684\u6bd4\u4f8b,\u4f18\u5148\u6267\u884c \u8fdb\u7a0b\u7c7b\u578b - IO\u5bc6\u96c6\u578b\u5927\u90e8\u5206\u65f6\u95f4\u7528\u4e8e\u7b49\u5f85IO - CPU\u5bc6\u96c6\u578b\u5927\u90e8\u5206\u65f6\u95f4\u7528\u4e8e\u95f7\u5934\u8ba1\u7b97 \u8fdb\u7a0b\u4f18\u5148\u7ea7 - \u5b9e\u65f6\u8fdb\u7a0b >>> \u666e\u901a\u8fdb\u7a0b\uff080-99\uff09 - \u666e\u901a\u8fdb\u7a0bnice\u503c\uff08-20-19\uff09 \u65f6\u95f4\u5206\u914d - linux\u91c7\u7528\u6309\u4f18\u5148\u7ea7\u7684CPU\u65f6\u95f4\u6bd4 - \u5176\u4ed6\u7cfb\u7edf\u591a\u91c7\u7528\u6309\u4f18\u5148\u7ea7\u7684\u65f6\u95f4\u7247 eg.\u4e24\u4e2aapp\u540c\u65f6\u8fd0\u884c - \u4e00\u4e2a\u6587\u672c\u5904\u7406\u7a0b\u5e8f - \u4e00\u4e2a\u5f71\u89c6\u540e\u671f\u7a0b\u5e8f Linux \u9ed8\u8ba4\u8c03\u5ea6\u7b56\u7565\uff1a \u5b9e\u65f6\u8fdb\u7a0b\uff08\u6025\u8bca\uff09\uff1a \u4f18\u5148\u7ea7\u5206\u9ad8\u4f4e\uff1aSCHED_FIFO (First In First Out)\uff0c\u6b64\u79cd\u7b49\u7ea7\u6700\u9ad8\u3002\u9664\u975e\u81ea\u5df1\u8ba9\u51faCPU\u8d44\u6e90\u5426\u5219Linux\u4f1a\u76f4\u81f3\u6267\u884c\u5b83\u3002\u9664\u975e\u8fd8\u6709\u66f4\u9ad8\u7ea7\u522b\u7684FIOFO\u548cRR\u62a2\u5360\u5b83\u3002 \u4f18\u5148\u7ea7\u4e00\u6837\u65f6\uff1aSCHED_RR\uff08Round Robin\uff09\uff0cRR\u53ea\u662f\u8fd9\u79cd\u7ebf\u7a0b\u4e2d\u662f\u540c\u7ea7\u522bFIFO\u4e2d\u7684\u5e73\u5747\u5206\u914d \u53ea\u6709\u5b9e\u65f6\u8fdb\u7a0b\u4e3b\u52a8\u8ba9\u51fa\uff0c\u6216\u8005\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u666e\u901a\u8fdb\u7a0b\u624d\u6709\u673a\u4f1a\u8fd0\u884c \u666e\u901a\uff1a CFS \u4e2d\u65ad \u00b6 \u4e2d\u65ad\u5904\u7406\u673a\u5236\u7684\u5b9e\u73b0\u7ec6\u8282\uff1a \u786c\u4ef6\u4e2d\u65ad --- \u4e2d\u65ad\u63a7\u5236\u5668 --- CPU --- kernel --- \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f - \u4e2d\u65ad\u5411\u91cf\u8868\uff1a - n1 - \u952e\u76d8 - \u5904\u7406\u7a0b\u5e8f - n2 - \u9f20\u6807 - \u5904\u7406\u7a0b\u5e8f - 0x80 - \u8f6f\u4e2d\u65ad - \u5904\u7406\u7a0b\u5e8f - CPU\u4f9d\u636e\u7279\u5b9a\u7684\u4e2d\u65ad\u4fe1\u53f7\u5199\u5165\u56fa\u5b9a\u5185\u5b58\u4f4d\u7f6e - kernel \u8bfb\u53d6\u5230\u4e2d\u65ad\u4fe1\u53f7\uff0c\u5e76\u6267\u884c\u5199\u597d\u7684\u4e2d\u65ad - \u4e2d\u65ad\u5904\u7406\u4e0a\u534a\u573a\u4e3akernel, \u4e0b\u534a\u573a\u4e3a\u5e94\u7528\u7a0b\u5e8f \u5206\u7c7b\uff1a \u786c\u4e2d\u65ad\uff1a - \u786c\u4ef6\u8ddf\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6253\u4ea4\u9053\u7684\u4e00\u79cd\u673a\u5236 \u8f6f\u4e2d\u65ad\uff0880 Hex \u4e2d\u65ad\uff09 == \u7cfb\u7edf\u8c03\u7528 - \u5e94\u7528\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u8c03\u7528\u7cfb\u7edf\u51fd\u6570 - \u7cfb\u7edf\u8c03\u7528\uff1aint 0x80 \u6216\u8005 sysenter \u539f\u8bed\uff08\u66f4\u8fdb\u4e00\u6b65\uff09 - \u901a\u8fc7 ax \u5bc4\u5b58\u5668\u586b\u5165\u8c03\u7528\u53f7 - \u53c2\u6570\u901a\u8fc7 bx cx dx si di \u5bc4\u5b58\u5668\u4f20\u5165\u5185\u6838 - \u8fd4\u56de\u503c\u901a\u8fc7 ax \u8fd4\u56de - \u64cd\u4f5c\u7cfb\u7edf\u7cfb\u7edf\u51fd\u6570\u8c03\u7528\u8868 - eax <- \u7cfb\u7edf\u8c03\u7528\u53f7 - write <- 4\u53f7 - exit <- 1\u53f7 \u6848\u4f8b\uff1a java \u8bfb\u7f51\u7edc \u2013> jvm read() \u2013 > c\u5e93 read() - > \u5185\u6838\u7a7a\u95f4 -> system_call() \uff08\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8f sysenter \u539f\u8bed\uff0c\u4f9d\u636e\u7cfb\u7edf\u51fd\u6570\u8c03\u7528\u8868\uff09 -> sys_read() \u5904\u7406\u54cd\u5e94\uff0c\u5e76\u5c06\u5904\u7406\u7ed3\u679c\u5bc4\u5b58\u5728 ax \u4e2d -> \u8fd4\u56dejvm -> java \u4ece\u6c47\u7f16\u89d2\u5ea6\u7406\u89e3\u8f6f\u4e2d\u65ad \u00b6 \u642d\u5efa\u6c47\u7f16\u73af\u5883 \u00b6 \u5b89\u88c5\uff1a # nasm \u662f\u7528\u6765\u7f16\u8bd1\u6c47\u7f16\u6587\u4ef6\u7684 .asm yum install nasm hello.asm ;hello.asm ;write(int fd, const void *buffer, size_t nbytes) ;- fd \u6587\u4ef6\u63cf\u8ff0\u7b26 file descriptor - linux\u4e0b\u4e00\u5207\u7686\u6587\u4ef6 section data msg db \"Hello\", 0xA len equ $ - msg section .text global _start _start: mov edx, len mov ecx, msg mov ebx, 1 ;\u6587\u4ef6\u63cf\u8ff0\u7b261 std_out mov eax, 4 ;write\u51fd\u6570\u7cfb\u7edf\u8c03\u7528\u53f7 4 int 0x80 mov ebx, 0 mov eax, 1 ;exit\u51fd\u6570\u7cfb\u7edf\u8c03\u7528\u53f7 int 0x80 \u7f16\u8bd1\uff1a - nasm -f elf hello.asm -o hello.o \u94fe\u63a5\uff1a - ld -m elf_i386 -o hello hello.o \u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u8981\u4e48\u5904\u4e8e\u7528\u6237\u6001\uff0c\u8981\u4e48\u5904\u4e8e\u5185\u6838\u6001 - \u800c\u7a0b\u5e8f\u7684IO\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u5224\u5b9a\u4e3a\uff1a - \u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5b9a\u4f1a\u8c03\u7528\u5185\u6838\u6001\u6267\u884c\uff0c\u800c\u533a\u5206\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u5173\u952e\u70b9\u5728\u4e8e\uff1a\u6b64\u65f6\uff0c\u7528\u6237\u6001\u7684\u90e8\u5206\u662f\u5426\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5de5\u4f5c\u3002\u4e0d\u80fd\u5e72\u6d3b\u4e3a\u963b\u585e\uff0c\u53ef\u4ee5\u5e72\u6d3b\u7684\u4e3a\u975e\u963b\u585e\u3002 \u5185\u5b58\u7ba1\u7406 \u00b6 \u53d1\u5c55\u5386\u7a0b \u00b6 DOS \u65f6\u4ee3\uff1a \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c\uff08\u4e5f\u6709\u4e00\u4e9b\u7279\u6b8a\u7b97\u6cd5\u53ef\u4ee5\u652f\u6301\u591a\u8fdb\u7a0b\uff09 windows9x\uff1a\u591a\u4e2a\u8fdb\u7a0b\u5168\u90e8\u88c5\u5165\u5185\u5b58 1\uff1a\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u6491\u7206\u4e86 2\uff1a\u4e92\u76f8\u6253\u6270 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8bde\u751f\u4e86\u73b0\u5728\u7684\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\uff1a\u865a\u62df\u5730\u5740 \u5206\u9875\u88c5\u5165 \u8f6f\u786c\u4ef6\u7ed3\u5408\u5bfb\u5740 1.\u5206\u9875\uff08\u5185\u5b58\u4e0d\u591f\u7528\uff09\uff0c\u5185\u5b58\u4e2d\u5206\u6210\u56fa\u5b9a\u5927\u5c0f\u7684\u9875\u6846\uff08page frame 4K\uff09\uff0c\u540c\u65f6\u4e5f\u628a\u7a0b\u5e8f\uff08\u786c\u76d8\u4e0a\uff09\u5206\u6210 4K \u5927\u5c0f\u7684\u5757\uff0c\u7528\u5230\u54ea\u4e00\u5757\uff0c\u52a0\u8f7d\u90a3\u4e00\u5757\uff0c\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5185\u5b58\u5df2\u7ecf\u6ee1\u4e86\uff0c\u4f1a\u628a\u6700\u4e0d\u5e38\u7528\u7684\u4e00\u5757\u653e\u5230 swap \u5206\u533a\uff0c \u628a\u6700\u65b0\u7684\u4e00\u5757\u52a0\u8f7d\u8fdb\u6765\uff0c\u8fd9\u4e2a\u5c31\u662f\u8457\u540d\u7684 LRU** \u7b97\u6cd5** \u6848\u4f8b\uff1awin \u53cc\u51fb\u5e94\u7528\uff0c\u5373\u5c06\u7a0b\u5e8f**\u9875\u8868**\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u3002\u540c\u65f6\uff0c\u52a0\u8f7d\u5165\u53e3\u5730\u5740\u9875\uff0c\u4e4b\u540e\u8fde\u63a5\u5176\u4ed6\u9875\u3002\u540c\u65f6\uff0c\u5982\u679c\u5185\u5b58\u7a7a\u95f4\u6ee1\u4e86\uff0c\u90a3\u4e48\u4f1a\u628a\u6700\u4e0d\u5e38\u7528\u7684\u4e00\u5757\u653e\u5982 Linux \u7684 swap \u5206\u533a LRU \u7b97\u6cd5 LeetCode146 \u9898\uff0c\u5934\u6761\u8981\u6c42\u624b\u6495\uff0c\u963f\u91cc\u53bb\u5e74\u4e5f\u8981\u6c42\u624b\u6495 Least Recently Used \u6700\u4e0d\u5e38\u7528\uff0c\u8fd1\u4e4e\u6240\u6709\u7684\u8bbe\u8ba1\u5230\u7f13\u5b58\u7684\u90fd\u4f1a\u8bbe\u8ba1\u5230\u6b64\u7b97\u6cd5:LRU, LFU \u54c8\u5e0c\u8868\uff08\u4fdd\u8bc1 \u67e5\u627e\u64cd\u4f5c O(1)\uff09 + \u94fe\u8868 \uff08\u4fdd\u8bc1 \u6392\u5e8f\u64cd\u4f5c\u548c\u65b0\u589e\u64cd\u4f5c O(1)\uff09\uff09 \u53cc\u5411\u94fe\u8868 \uff08\u4fdd\u8bc1 \u5de6\u8fb9\u6307\u9488 \u6307\u5411\u53f3\u8fb9\u5757\uff09 2.\u865a\u62df\u5185\u5b58\uff08\u89e3\u51b3\u76f8\u4e92\u6253\u6270\u95ee\u9898\uff09 DOS Win31 \u5e94\u7528\u7a0b\u5e8f... \u4e92\u76f8\u5e72\u6389 \u4e3a\u4e86\u4fdd\u8bc1\u4e92\u4e0d\u5f71\u54cd - \u8ba9\u8fdb\u7a0b\u5de5\u4f5c\u5728\u865a\u62df\u7a7a\u95f4\uff0c\u7a0b\u5e8f\u4e2d\u7528\u5230\u7684\u7a7a\u95f4\u5730\u5740\u4e0d\u518d\u662f\u76f4\u63a5\u7684\u7269\u7406\u5730\u5740\uff0c\u800c\u662f\u865a\u62df\u7684\u5730\u5740\uff0c\u8fd9\u6837\uff0cA \u8fdb\u7a0b\u6c38\u8fdc\u4e0d\u53ef\u80fd\u8bbf\u95ee\u5230 B \u8fdb\u7a0b\u7684\u7a7a\u95f4 \u865a\u62df\u7a7a\u95f4\u591a\u5927\u5462\uff1f\u5bfb\u5740\u7a7a\u95f4 - 64 \u4f4d\u7cfb\u7edf 2 ^ 64\uff0c\u6bd4\u7269\u7406\u7a7a\u95f4\u5927\u5f88\u591a \uff0c\u5355\u4f4d\u662f byte \u7ad9\u5728\u865a\u62df\u7684\u89d2\u5ea6\uff0c\u8fdb\u7a0b\u662f\u72ec\u4eab\u6574\u4e2a\u7cfb\u7edf + CPU \u5185\u5b58\u6620\u5c04\uff1a\u504f\u79fb\u91cf + \u6bb5\u7684\u57fa\u5730\u5740 = \u7ebf\u6027\u5730\u5740 \uff08\u865a\u62df\u7a7a\u95f4\uff09 \u7ebf\u6027\u5730\u5740\u901a\u8fc7 OS + MMU\uff08\u786c\u4ef6 Memory Management Unit\uff09 \u7f3a\u9875\u4e2d\u65ad\uff08\u4e0d\u662f\u5f88\u91cd\u8981\uff09\uff1a \u865a\u62df\u5185\u5b58\u4e2d\u9700\u8981\u7528\u5230\u6570\u636e\u9875\uff0c\u5b9e\u9645\u5185\u5b58\u4e2d\u6ca1\u6709\uff0c\u4ea7\u751f\u7f3a\u9875\u5f02\u5e38\uff08\u4e2d\u65ad\uff09\uff0c\u7531\u5185\u6838\u5904\u7406\u5e76\u52a0\u8f7d\u786c\u76d8\u6570\u636e\u9875\u5230\u5185\u5b58\u4e2d\u3002 \u865a\u62df\u5185\u5b58\uff1a \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u865a\u62df\u7684\u72ec\u5360\u6574\u4e2aCPU \u8fdb\u7a0b\u5185\u90e8\u5206\u6bb5\uff0c\u6bb5\u5185\u90e8\u5206\u9875\uff0c\u9700\u8981\u8be5\u9875\u7684\u65f6\u5019\u52a0\u8f7d\u5230\u5185\u5b58\u9875\u6846(page frame) \u5185\u5b58\u6620\u5c04\uff1a 1. \u64cd\u4f5c \u6570\u636e\u6bb5 \u6570\u636e\u533a \u903b\u8f91\u5730\u5740 ---> \u6bb5\u7684\u57fa\u5730\u5740 + \u504f\u79fb\u91cf\uff08\u903b\u8f91\u5730\u5740\uff09 == \u865a\u62df\u5730\u5740/\u7ebf\u6027\u5730\u5740 2. \u7ebf\u6027\u5730\u5740\u901a\u8fc7 OS + MMU\uff08\u786c\u4ef6 Memory Management Unit\uff09\u6620\u5c04\u5230\u771f\u6b63\u5730\u903b\u8f91\u5730\u5740 \u5185\u5b58\u5730\u5740\u6620\u5c04\uff1a ZGC \uff08The Z garbage collector\uff09 \u00b6 \u7b97\u6cd5\u53eb\u505a\uff1aColored Pointer + Load Barrier - GC \u4fe1\u606f\u8bb0\u5f55\u5728\u6307\u9488\u4e0a\uff0c\u4e0d\u662f\u8bb0\u5f55\u5728\u5934\u90e8\uff0c immediate memory use - 42 \u4f4d\u6307\u9488 \u5bfb\u5740\u7a7a\u95f4 4T - JDK13 ---> 16T \u76ee\u524d\u4e3a\u6b62\u6700\u5927 16T 2^44 - \u539f\u56e0\uff1a\u5730\u5740\u603b\u7ebf\u76ee\u524d\uff1a48 \u4f4d\u3002\u56e0\u6b64\uff0c4 \u4f4d\u7ed9\u4e86\u989c\u8272\u6307\u9488\uff0c\u800c\u5269\u4f59\u7684\u8fd8\u670944\u4f4d\u53ef\u4ee5\u7528\u4e8e\u5bfb\u5740 \u989c\u8272\u6307\u9488\uff1a\u56db\u4e2a\u4e92\u76f8\u6392\u65a5 \u989c\u8272\u6307\u9488\u672c\u8d28\u4e0a\u5305\u542b\u4e86\u5730\u5740\u6620\u5c04\u7684\u6982\u5ff5 Marked0\uff084T\uff09 Marked1 (8T) Remapped (12T) Finalizable (16T) CPU \u5982\u4f55\u533a\u5206 \u4e00\u4e2a\u7acb\u5373\u6570 \u548c \u4e00\u6761\u6307\u4ee4 \u00b6 \u603b\u7ebf\u5185\u90e8\u5206\u4e3a\uff1a\u6570\u636e\u603b\u7ebf \u5730\u5740\u603b\u7ebf \u63a7\u5236\u603b\u7ebf \u5730\u5740\u603b\u7ebf\u76ee\u524d\uff1a48 \u4f4d \u56e0\u6b64\uff0c4 \u4f4d\u7ed9\u4e86\u989c\u8272\u6307\u9488\uff0c\u800c\u5269\u4f59\u7684\u8fd8\u670944\u4f4d\u53ef\u4ee5\u7528\u4e8e\u5bfb\u5740 \u5185\u6838\u540c\u6b65\u673a\u5236 \u00b6 \u5173\u4e8e\u540c\u6b65\u7406\u8bba\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5 \u00b6 \u4e34\u754c\u533a\uff08critical area\uff09: \u8bbf\u95ee\u6216\u64cd\u4f5c\u5171\u4eab\u6570\u636e\u7684\u4ee3\u7801\u6bb5 \u7b80\u5355\u7406\u89e3\uff1asynchronized \u5927\u62ec\u53f7\u4e2d\u90e8\u5206\uff08\u539f\u5b50\u6027\uff09 \u7ade\u4e89\u6761\u4ef6\uff08race conditions\uff09\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u62e5\u6709\u4e34\u754c\u533a\u7684\u6267\u884c\u6743 \u6570\u636e\u4e0d\u4e00\u81f4\uff1adata unconsistency \u7531\u7ade\u4e89\u6761\u4ef6\u5f15\u8d77\u7684\u6570\u636e\u7834\u574f \u540c\u6b65\uff08synchronization\uff09\u907f\u514d race conditions \u5b9a\u4e49\u540c\u65f6\u6267\u884c\u4e34\u754c\u533a\u7684\u4ee3\u7801\u533a\u65f6\u6240\u5b9a\u7684\u6267\u884c\u89c4\u5219 \u9501\uff1a\u5b8c\u6210\u540c\u6b65\u7684\u624b\u6bb5\uff08\u95e8\u9501\uff0c\u95e8\u540e\u662f\u4e34\u754c\u533a\uff0c\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u5728\uff09 \u4e0a\u9501\u89e3\u9501\u5fc5\u987b\u5177\u5907\u539f\u5b50\u6027 \u539f\u5b50\u6027\uff08\u8c61\u539f\u5b50\u4e00\u6837\u4e0d\u53ef\u5206\u5272\u7684\u64cd\u4f5c\uff09 \u6709\u5e8f\u6027\uff08\u7981\u6b62\u6307\u4ee4\u91cd\u6392\uff09 \u53ef\u89c1\u6027\uff08\u4e00\u4e2a\u7ebf\u7a0b\u5185\u7684\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u89c1\uff09 \u53c2\u770b\u89c1\u4e92\u65a5\u9501 \u6392\u4ed6\u9501 \u5171\u4eab\u9501 \u5206\u6bb5\u9501 \u5185\u6838\u540c\u6b65\u5e38\u7528\u65b9\u6cd5 \u00b6 \u76ee\u7684\uff1a\u4fdd\u8bc1\u539f\u5b50\u6027\uff0c\u6709\u5e8f\u6027\uff0c\u53ef\u89c1\u6027(Atomicity, Ordering, Visibility) \u539f\u5b50\u64cd\u4f5c\uff1a\u5185\u6838\u4e2d\u7c7b\u4f3c\u4e8e AtomicXXX\uff0c\u4f4d\u4e8e \u81ea\u65cb\u9501\uff1a\u5185\u6838\u4e2d\u901a\u8fc7\u6c47\u7f16\u652f\u6301\u7684 cas\uff0c\u4f4d\u4e8e \u79bb\u5f00\u540e\uff0c\u518d\u6b21\u56de\u6765\u7684\u65f6\u5019 \u68c0\u67e5\u4e00\u4e0b\u9501\u72b6\u6001 \u8bfb - \u5199\u81ea\u65cb \u2013 \u7c7b\u4f3c\u4e8e ReadWriteLock \u53ef\u540c\u65f6\u8bfb\uff0c\u53ea\u80fd\u4e00\u4e2a\u5199 \u8bfb\u7684\u65f6\u5019\u662f\u5171\u4eab\u9501\uff0c\u5199\u7684\u65f6\u5019\u662f\u6392\u4ed6\u9501 \u4fe1\u53f7\u91cf \u2013 \u7c7b\u4f3c\u4e8e Semaphore(PV \u64cd\u4f5c down up \u64cd\u4f5c\uff1a\u5360\u6709\u548c\u91ca\u653e\uff09 \u91cd\u91cf\u7ea7\u9501\uff0c\u7ebf\u7a0b\u4f1a\u8fdb\u5165 wait\uff0c\u9002\u5408\u957f\u65f6\u95f4\u6301\u6709\u7684\u9501\u60c5\u51b5 \u5185\u6838\u91cc\u9762\u7684 Semaphore \u8bfb-\u5199\u4fe1\u53f7\u91cf \u2013 downread upread downwrite upwrite \u591a\u4e2a\u5199\uff0c\u53ef\u4ee5\u5206\u6bb5\u5199\uff0c\u6bd4\u8f83\u5c11\u7528(\u5206\u6bb5\u9501\uff09 \u4e92\u65a5\u4f53 (mutex) \u2013 \u7279\u6b8a\u7684\u4fe1\u53f7\u91cf\uff08\u4e8c\u503c\u4fe1\u53f7\u91cf\uff09 \u5e73\u65f6\u6240\u8bf4\u7684 Syncinized \u5b8c\u6210\u53d8\u91cf \u2013 \u7279\u6b8a\u7684\u4fe1\u53f7\u91cf\uff08A \u53d1\u51fa\u4fe1\u53f7\u7ed9 B\uff0cB \u7b49\u5f85\u5728\u5b8c\u6210\u53d8\u91cf\u4e0a\uff09 \u5185\u6838vfork() \u5728\u5b50\u8fdb\u7a0b\u7ed3\u675f\u65f6\u901a\u8fc7\u5b8c\u6210\u53d8\u91cf\u53eb\u9192\u7236\u8fdb\u7a0b \u7c7b\u4f3c\u4e8e (Latch) BKL\uff1a\u5927\u5185\u6838\u9501\uff08\u65e9\u671f\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u7528\uff09 \u987a\u5e8f\u9501\uff082.6\uff09\uff1a \u2013 \u7ebf\u7a0b\u53ef\u4ee5\u6302\u8d77\u7684\u8bfb\u5199\u81ea\u65cb\u9501 \u4f7f\u7528\u5e8f\u5217\u8ba1\u6570\u5668\u5b9e\u73b0\uff1a\u4ece 0 \u5f00\u59cb\uff0c\u5199\u65f6\u589e\u52a0 (+1)\uff0c\u5199\u5b8c\u91ca\u653e (+1)\uff0c\u8bfb\u524d\u53d1\u73b0\u5355\u6570\uff0c \u8bf4\u660e\u6709\u5199\u7ebf\u7a0b\uff0c\u7b49\u5f85\u6216\u5176\u4ed6\u7b49\u81ea\u884c\u51b3\u5b9a\u662f\u5426\u64cd\u4f5c\uff0c\u8bfb\u524d\u8bfb\u540e\u5e8f\u5217\u4e00\u6837\uff0c\u8bf4\u660e\u6ca1\u6709\u5199\u7ebf\u7a0b\u6253\u65ad\uff09 \u7981\u6b62\u62a2\u5360 \u2013 preempt_disable() \u5185\u5b58\u5c4f\u969c \u2013 \u89c1 volatile \u81ea\u5b9a\u4e49\u64cd\u4f5c\u7cfb\u7edf \u00b6 1. \u7f16\u5199\u6c47\u7f16\u7801 \u00b6 boot.asm ; \u6587\u4ef6\u540d boot.asm org 7c00h ; BIOS\u8bfb\u5165MBR\u540e\uff0c\u4ece0x7c00h\u5904\u5f00\u59cb\u6267\u884c ; \u4e0b\u9762\u90e8\u5206\u548c10h\u6709\u5173\u4e2d\u65ad\uff0c10h\u4e2d\u65ad\u7528\u6765\u663e\u793a\u5b57\u7b26 mov ax, cs mov es, ax mov ax, msg mov bp, ax ; ES:BP\u8868\u793a\u663e\u793a\u5b57\u7b26\u4e32\u7684\u5730\u5740 mov cx, msgLen ; CX\u5b58\u5b57\u7b26\u957f\u5ea6 mov ax, 1301h ; AH=13h\u8868\u793a\u5411TTY\u663e\u793a\u5b57\u7b26\uff0cAL=01h\u8868\u793a\u663e\u793a\u65b9\u5f0f\uff08\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u663e\u793a\u5c5e\u6027\uff0c01h\u8868\u793a\u4e0d\u5305\u542b\uff09 mov bx, 000fh ; BH=00h\u8868\u793a\u9875\u53f7\uff0cBL=0fh\u8868\u793a\u989c\u8272 mov dl, 0 ; \u5217 int 10h msg: db \"hello world, welcome to OS!\" msgLen: equ $ - msg ; \u5b57\u7b26\u4e32\u957f\u5ea6 times 510 - ($ - $$) db 0 ; \u586b\u5145\u5269\u4f59\u90e8\u5206 dw 0aa55h ; \u9b54\u6570\uff0c\u5fc5\u987b\u6709\u8fd9\u4e24\u4e2a\u5b57\u8282BIOS\u624d\u786e\u8ba4\u662fMBR 2. \u7f16\u8bd1 \u00b6 nasm boot.asm -o boot.bin 3. \u5236\u4f5c\u542f\u52a8\u8f6f\u76d8 \u00b6 dd if=/dev/zero of=floppy.img bs=1474560 count=1 \u751f\u6210\u7a7a\u767d\u8f6f\u76d8\u955c\u50cf dd if=boot.bin of=myos.img bs=512 count=1 \u5236\u4f5c\u5305\u542b\u4e3b\u5f15\u5bfc\u8bb0\u5f55 boot.bin \u7684\u542f\u52a8\u955c\u50cf\u6587\u4ef6 dd if=floppy.img of=myos.img skip=1 seek=1 bs=512 count=2879 \u5728 bin \u751f\u6210\u7684\u955c\u50cf\u6587\u4ef6\u540e\u8865\u4e0a\u7a7a\u767d\uff0c\u6210\u4e3a\u5408\u9002\u5927\u5c0f\u7684\u8f6f\u76d8\u955c\u50cf\uff0c\u4e00\u5171 2880 \u4e2a\u6247\u533a\uff0c\u7565\u8fc7\u7b2c\u4e00\u4e2a 4. \u7528\u8f6f\u76d8\u542f\u52a8\u7cfb\u7edf \u00b6 \u5c06 myos.img \u4e0b\u8f7d\u5230 windows VMWare \u521b\u5efa\u7a7a\u7684\u865a\u62df\u673a \u6587\u4ef6 - \u521b\u5efa\u65b0\u7684\u865a\u62df\u673a - \u5178\u578b \u7a0d\u540e\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf \u5176\u4ed6 \u4e00\u8def next \u5b8c\u6210 \u865a\u62df\u673a\u8bbe\u7f6e\uff0c\u53bb\u6389 CD/DVD \u9009\u9879\u4e2d \u201c\u542f\u52a8\u65f6\u8fde\u63a5\u201d \u7f51\u7edc\uff0c\u9009\u62e9 \u201c\u4ec5\u4e3b\u673a\u6a21\u5f0f\u201d\uff0c\u52fe\u9009 \u201c\u542f\u52a8\u65f6\u8fde\u63a5\u201d\uff08\u597d\u50cf\u65e0\u6240\u8c13\uff09 \u6dfb\u52a0\u8f6f\u76d8\u9a71\u52a8\u5668 \u4f7f\u7528\u8f6f\u76d8\u6620\u50cf \u627e\u5230 myos.img \u542f\u52a8\u865a\u62df\u673a \u4e3a\u4ec0\u4e48\u662f 0x7C00? \u00b6 \u53c2\u8003\uff1a https://www.glamenv-septzen.net/en/view/6 http://mashibing.com/doc/ Reference \u00b6 I wrote an operating system in conjunction with (a) - 10 mins to write the operating system Why BIOS loads MBR into 0x7C00 in x86 ?","title":"\u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#java","text":"","title":"Java \u7a0b\u5e8f\u5458\u638c\u63e1\u7684\u7cfb\u7edf\u5e95\u5c42\u77e5\u8bc6"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_1","text":"\u786c\u4ef6\u57fa\u7840\u77e5\u8bc6 Java\u76f8\u5173\u786c\u4ef6\u77e5\u8bc6 \u6c47\u7f16\u8bed\u8a00\u7684\u6267\u884c\u8fc7\u7a0b\uff08\u65f6\u949f\u53d1\u751f\u5668\u5bc4\u5b58\u5668\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09 \u8ba1\u7b97\u673a\u542f\u52a8\u8fc7\u7a0b \u64cd\u4f5c\u7cfb\u7edf\u57fa\u672c\u77e5\u8bc6 \u8fdb\u7a0b\u7ebf\u7a0b\u7ea4\u7a0b\u7684\u57fa\u672c\u6982\u5ff5\uff08\u9762\u8bd5\u9ad8\u9891\uff09 \u7ea4\u7a0b\u7684\u5b9e\u73b0 \u5185\u5b58\u7ba1\u7406 \u8fdb\u7a0b\u7ba1\u7406\u4e0e\u7ebf\u7a0b\u7ba1\u7406\uff08\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u5728Linux\u4e2d\u7684\u5b9e\u73b0\uff09 \u4e2d\u65ad\u4e0e\u7cfb\u7edf\u8c03\u7528\uff08\u8f6f\u4e2d\u65ad\uff09 \u5185\u6838\u540c\u6b65\u57fa\u7840\u77e5\u8bc6 \u5173\u4e8e\u786c\u76d8IO DMA","title":"\u603b\u4f53\u67b6\u6784"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_2","text":"\u8bfb\u4e66\u7684\u539f\u5219\uff1a\u4e0d\u6c42\u751a\u89e3\uff0c\u89c2\u5176\u5927\u7565 \u4f60\u5982\u679c\u8fdb\u5230\u5e90\u5c71\u91cc\u5934\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u8e72\u4e0b\u5934\u6765\uff0c\u5f2f\u4e0b\u8170\uff0c\u5c31\u5bf9\u7740\u67d0\u68f5\u6811\u67d0\u68f5\u5c0f\u8349\u731b\u7814\u7a76\u800c\u4e0d\u662f\u8bf4\u5148\u628a\u5e90\u5c71\u7684\u6574\u4f53\u8109\u7edc\u8ddf\u90a3\u7814\u7a76\u6e05\u695a\u4e86\uff0c\u90a3\u4e48\u4f60\u7684\u5b66\u4e60\u65b9\u6cd5\u80af\u5b9a\u6548\u7387\u5de8\u4f4e\u800c\u4e14\u7279\u522b\u75db\u82e6\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u6162\u6162\u5730\u8fd8\u6253\u51fb\u4f60\u7684\u79ef\u6781\u6027\uff0c\u8bf4\u6211\u7684\u5b66\u4e60\u600e\u4e48\u90a3\u4e48\u4e0d happy \u554a\uff0c\u600e\u4e48\u90a3\u4e48\u7279\u6ca1\u52b2\u90a3\uff0c\u56e0\u4e3a\u4f60\u7684\u5b66\u4e60\u65b9\u6cd5\u9519\u4e86\uff0c\u5927\u4f53\u8bfb\u660e\u767d\uff0c\u5148\u62ff\u6765\u7528\uff0c\u7528\u7740\u7528\u7740\uff0c\u5f88\u591a\u9053\u7406\u4f60\u5c31\u660e\u767d\u4e86 \u56fe\u4e66\u63a8\u8350 \u300a\u7f16\u7801\uff1a\u9690\u533f\u5728\u8ba1\u7b97\u673a\u8f6f\u786c\u4ef6\u80cc\u540e\u7684\u8bed\u8a00\u300b \u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b \u8bed\u8a00\uff1aC JAVA K&R\u300aC \u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u300b \u300aC Primer Plus\u300b \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff1a -- \u6bd5\u751f\u7684\u5b66\u4e60 leetCode \u300aJava \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\u300a\u7b97\u6cd5\u300b \u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u827a\u672f\u300b// \u96be \u64cd\u4f5c\u7cfb\u7edf\uff1a Linux \u5185\u6838\u6e90\u7801\u89e3\u6790 Linux \u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0 30 \u5929\u81ea\u5236\u64cd\u4f5c\u7cfb\u7edf \u7f51\u7edc\uff1a\u673a\u5de5\u300aTCP/IP \u8be6\u89e3\u300b\u5377\u4e00 \u7ffb\u8bd1\u4e00\u822c \u7f16\u8bd1\u539f\u7406\uff1a \u673a\u5de5 \u9f99\u4e66 \u300a\u7f16\u8bd1\u539f\u7406\u300b \u300a\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0\u6a21\u5f0f\u300b\u9a6c\u8bed \u6570\u636e\u5e93\uff1a SQLite \u6e90\u7801 Derby - JDK \u81ea\u5e26\u6570\u636e\u5e93 \u8981\u4e8b\u7b2c\u4e00\uff1a \u5e95\u5c42\u539f\u7406\u9002\u5ea6\u6253\u5f00 \u5f53\u4f60\u51dd\u671b\u6df1\u6e0a\uff0c\u6df1\u6e0a\u4e5f\u5728\u51dd\u671b\u4f60\u3002\u5f53\u4f60\u6253\u5f00\u6f58\u591a\u62c9\u4e4b\u76d2\uff0c\u90a3\u4e48\u5b83\u4e5f\u5c06\u541e\u566c\u4f60\u7684\u7cbe\u529b\u548c\u65f6\u95f4\u3002","title":"\u56fe\u4e66\u63a8\u8350\u53ca\u5176\u539f\u5219"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#cpu","text":"Intel cpu \u7684\u5236\u4f5c\u8fc7\u7a0b https://haokan.baidu.com/v?vid=11928468945249380709&pd=bjh&fr=bjhauthor&type= video CPU \u662f\u5982\u4f55\u5236\u4f5c\u7684\uff08\u6587\u5b57\u63cf\u8ff0\uff09 https ://www.sohu.com/a/255397866_468626","title":"CPU \u7684\u5236\u4f5c\u8fc7\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#cpu_1","text":"\u8ba1\u7b97\u673a\u9700\u8981\u89e3\u51b3\u7684\u6700\u6839\u672c\u95ee\u9898\uff1a\u5982\u4f55\u4ee3\u8868\u6570\u5b57 \u6676\u4f53\u7ba1\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a https://haokan.baidu.com/v?vid=16026741635006191272&pd=bjh&fr=bjhauthor&type= video \u6676\u4f53\u7ba1\u7684\u5de5\u4f5c\u539f\u7406\uff1a https://www.bilibili.com/video/av47388949?p=2","title":"CPU \u7684\u539f\u7406"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_3","text":"\u6c47\u7f16\u8bed\u8a00\u7684\u672c\u8d28\uff1a\u673a\u5668\u8bed\u8a00\u7684\u52a9\u8bb0\u7b26 \u5176\u5b9e\u5b83\u5c31\u662f\u673a\u5668\u8bed\u8a00 \u8ba1\u7b97\u673a\u901a\u7535 \u2192 CPU \u8bfb\u53d6\u5185\u5b58\u4e2d\u56fa\u5b9a\u4f4d\u7f6e\u7684\u7a0b\u5e8f\uff08\u7535\u4fe1\u53f7\u8f93\u5165\uff09---> \u65f6\u949f\u53d1\u751f\u5668\u4e0d\u65ad\u9707\u8361\u901a\u65ad\u7535 ---> \u63a8\u52a8 CPU \u5185\u90e8\u4e00\u6b65\u4e00\u6b65\u6267\u884c\uff08\u6267\u884c\u591a\u5c11\u6b65\u53d6\u51b3\u4e8e\u6307\u4ee4\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\uff09---> \u8ba1\u7b97\u5b8c\u6210 ---> \u5199\u56de\uff08\u7535\u4fe1\u53f7\uff09---> \u5199\u7ed9\u663e\u5361\u8f93\u51fa\uff08sout\uff0c\u6216\u8005\u56fe\u5f62\uff09 \u65f6\u949f\u53d1\u751f\u5668\u6bcf\u901a\u65ad\u4e00\u6b21\u7535\u79f0\u4e3a\u4e00\u4e2a\u59cb\u7ec8\u5468\u671f \u65f6\u949f\u53d1\u751f\u5668\u6bcf\u79d2\u53ef\u4ee5\u632f\u8361\u7684\u6b21\u6570\u4e3a \u4e3b\u9891\uff0c\u5355\u4f4d\u4e3a\uff1aGHz(\u51e0\u5341\u4ebf\u6b21)","title":"\u6c47\u7f16\u8bed\u8a00\uff08\u673a\u5668\u8bed\u8a00\uff09\u7684\u6267\u884c\u8fc7\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_4","text":"\u91cf\u5b50\u6bd4\u7279\uff0c\u540c\u65f6\u8868\u793a 1 0 \u540c\u65f6\u8868\u793a01\uff0c\u53731\u4f4d\u91cf\u5b50\u4f4d","title":"\u91cf\u5b50\u8ba1\u7b97\u673a"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#cpu_2","text":"PC -> Program Counter \u7a0b\u5e8f\u8ba1\u6570\u5668 \u8bb0\u5f55\u5f53\u524d\u6307\u4ee4\u5730\u5740 \u4f9d\u636e\u5f53\u524d\u6307\u4ee4\u5730\u5740\u6240\u5360\u7a7a\u95f4\u81ea\u52a8\u504f\u79fb Registers -> \u6682\u65f6\u5b58\u50a8 CPU \u8ba1\u7b97\u9700\u8981\u7528\u5230\u7684\u6570\u636e \u8ddd\u79bbCPU\u6700\u8fd1\u7684\u6570\u636e\u5b58\u50a8 ALU -> Arithmetic & Logic Unit \u8fd0\u7b97\u5355\u5143 \u8ddd\u79bb CU -> Control Unit \u63a7\u5236\u5355\u5143 \u4e2d\u65ad\u76f8\u5173\u7684\u63a7\u5236\u4fe1\u606f MMU -> Memory Management Unit \u5185\u5b58\u7ba1\u7406\u5355\u5143 \u5185\u5b58\u7ba1\u7406\uff1a\u8f6f\u4ef6 +\u3000\u786c\u4ef6\uff08\u8fd9\u91cc\u5c31\u662f\uff09 cache","title":"CPU \u7684\u57fa\u672c\u7ec4\u6210"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_5","text":"\u6570\u636e\u8bfb\u53d6\uff1a - \u6309\u5757\u8bfb\u53d6\uff08cache line\uff09 - \u4f9d\u636e\u7a0b\u5e8f\u5c40\u90e8\u6027\u539f\u7406\uff0c\u53ef\u4ee5\u63d0\u5347\u6548\u7387 - \u5145\u5206\u53d1\u6325\u603b\u7ebf\uff0cCPU\u9488\u811a\u7b49\u4e00\u6b21\u6027\u8bfb\u53d6\u66f4\u591a\u6570\u636e\u7684\u80fd\u529b intel - MESI Cache \u4e00\u81f4\u6027\u534f\u8bae \u4e00\u81f4\u6027\u534f\u8bae\uff1a https://www.cnblogs.com/z00377750/p/9180644.html CPU \u6bcf\u4e2a cache line \u6807\u8bb0\u56db\u79cd\u72b6\u6001\uff08\u989d\u5916\u4e24\u4f4d\uff09 \u8fd9\u79cd\u534f\u8bae\u5b9e\u73b0\u4e86\u9501\u603b\u7ebf\uff0c\u5373\u662f\u7f13\u5b58\u9501\u7684\u4e00\u79cd\u3002\u540c\u65f6\uff0c\u5bf9\u4e8e\u6709\u4e9b\u65e0\u6cd5\u88ab\u7f13\u5b58\u7684\u6570\u636e\uff0c\u6216\u8005\u8de8\u8d8a\u591a\u4e2a\u7f13\u5b58\u884c\u7684\u6570\u636e\u4f9d\u7136\u5fc5\u987b\u4f7f\u7528\u603b\u7ebf\u9501\u3002 \u53e6\u5916\uff1aMSI MESI MOSI Synapse Firefly Dragon \u7b49\u5747\u662f\u4e0d\u540c\u516c\u53f8\u7684\u4e00\u81f4\u6027\u534f\u8bae \u7f13\u5b58\u884c\uff1a \u7f13\u5b58\u884c\u8d8a\u5927\uff0c\u5c40\u90e8\u6027\u7a7a\u95f4\u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u8bfb\u53d6\u65f6\u95f4\u6162 \u7f13\u5b58\u884c\u8d8a\u5c0f\uff0c\u5c40\u90e8\u6027\u7a7a\u95f4\u6548\u7387\u8d8a\u4f4e\uff0c\u4f46\u8bfb\u53d6\u65f6\u95f4\u5feb \u53d6\u4e00\u4e2a\u6298\u4e2d\u503c\uff0c\u76ee\u524d\u591a\u7528\uff1a64 \u5b57\u8282 package com.mashibing.juc.c_028_FalseSharing ; public class T03_CacheLinePadding { public static volatile long [] arr = new long [ 2 ] ; public static void main ( String [] args ) throws Exception { Thread t1 = new Thread (() -> { for ( long i = 0 ; i < 10_0000_0000L ; i ++ ) { arr [ 0 ] = i ; } }); Thread t2 = new Thread (() -> { for ( long i = 0 ; i < 10_0000_0000L ; i ++ ) { arr [ 1 ] = i ; } }); final long start = System . nanoTime (); t1 . start (); t2 . start (); t1 . join (); t2 . join (); System . out . println (( System . nanoTime () - start ) / 100_0000 ); } } package com.mashibing.juc.c_028_FalseSharing ; public class T04_CacheLinePadding { public static volatile long [] arr = new long [ 16 ] ; public static void main ( String [] args ) throws Exception { Thread t1 = new Thread (() -> { for ( long i = 0 ; i < 10000_0000L ; i ++ ) { arr [ 0 ] = i ; } }); Thread t2 = new Thread (() -> { for ( long i = 0 ; i < 10000_0000L ; i ++ ) { arr [ 8 ] = i ; } }); final long start = System . nanoTime (); t1 . start (); t2 . start (); t1 . join (); t2 . join (); System . out . println (( System . nanoTime () - start ) / 100_0000 ); } } \u4e00\u79cd\u7f16\u7a0b\u65b9\u5f0f\uff1a \u7f13\u5b58\u884c\u5bf9\u9f50 \uff1a - \u5bf9\u4e8e\u6709\u4e9b\u7279\u522b\u654f\u611f\u7684\u6570\u5b57\uff0c\u4f1a\u5b58\u5728\u7ebf\u7a0b\u9ad8\u7ade\u4e89\u7684\u8bbf\u95ee\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u53d1\u751f\u4f2a\u5171\u4eab\uff0c\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u822a\u5bf9\u9f50\u7684\u7f16\u7a0b\u65b9\u5f0f JVM disruptor JDK7 coding: public long p1 , p2 , p3 , p4 , p5 , p6 , p7 ; private volatile long cursor = INITIAL_CURSOR_VALUE ; public long p8 , p9 , p10 , p11 , p012 , p13 , p14 ; \u8bf4\u660e\uff1a - JDK7 \u4e2d\uff0c\u5f88\u591a\u91c7\u7528 long padding \u63d0\u9ad8\u6548\u7387 - JDK8\uff0c\u52a0\u5165\u4e86 @Contended \u6ce8\u89e3\u9700\u8981\u52a0\u4e0a\uff1aJVM -XX:-RestrictContended - \u52a0\u5165\u6ce8\u89e3\u540e\uff0cJVM\u53ef\u4ee5\u4f9d\u636e\u5e95\u5c42CPU\u5236\u9020\u5546\u6765\u8bbe\u7f6e\u4e0d\u540c\u7684\u5b57\u8282\uff0c\u4fdd\u8bc1\u4e0d\u540c\u7684\u7f13\u5b58\u884c \u4e0d\u540c\u90e8\u4ef6\u8bfb\u53d6\uff08\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u539f\u7406\uff09\uff1a - \u5185\u5b58\u8bfb\u53d6\uff1a\u7f13\u5b58\u884c\uff0c\u4e00\u884c\u4e00\u884c\u5730\u8bfb\u53d6 - \u5185\u5b58\u5b58\u50a8\uff1a\u4e00\u9875\u4e00\u9875\u5730\u5b58 - \u786c\u76d8\u8bfb\u53d6\uff1a\u4e00\u5757\u4e00\u5757","title":"\u7f13\u5b58"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_6","text":"CPU \u5728\u8fdb\u884c\u8bfb\u7b49\u5f85\u7684\u540c\u65f6\u6267\u884c\u6307\u4ee4\uff0c\u662f CPU \u4e71\u5e8f\u7684\u6839\u6e90\uff0c\u4e71\u5e8f\u6267\u884c\u4ee5\u4fbf\u63d0\u5347\u6548\u7387\u3002 - \u6307\u4ee41:\u53bb\u5185\u5b58\u8bfb\u6570\u636e,\u7b49\u5f85\u8fd4\u56de - \u6307\u4ee42:\u4f18\u5148\u6267\u884c \u4e71\u5e8f\u6267\u884c\u7684\u7a0b\u5e8f\u9a8c\u8bc1\uff1a \u53c2\u8003\u535a\u5ba2\uff1a https://preshing.com/20120515/memory-reordering-caught-in-the-act/ jvm/jmm/Disorder.java","title":"\u4e71\u5e8f\u6267\u884c"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_7","text":"DCL\u5355\u4f8b\u4e3a\u4ec0\u4e48\u8981\u52a0volatile\uff1f \u5bf9\u8c61\u521d\u59cb\u5316\u4f1a\u6709","title":"\u4e71\u5e8f\u6267\u884c\u53ef\u80fd\u4ea7\u751f\u7684\u95ee\u9898"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_8","text":"CPU \u5c42\u9762\uff1aIntel -> \u539f\u8bed (mfence lfence sfence) \u6216\u8005\u9501\u603b\u7ebf intel lock \u6c47\u7f16\u6307\u4ee4\u5b9e\u73b0\uff1a - \u786c\u4ef6\uff1a\u539f\u5b50\u6307\u4ee4\uff0c\u5982 x86 \u4e0a\u7684 \"lock addl 0x0(esp)\" \u6307\u4ee4\u662f\u4e00\u4e2a Full Barrier, \u6267\u884c\u65f6\u4f1a\u9501\u4f4f\u5185\u5b58\u5b50\u7cfb\u7edf\u6765\u786e\u4fdd\u6267\u884c\u987a\u5e8f\uff0c\u751a\u81f3\u8de8\u591a\u4e2acpu - \u8f6f\u4ef6\uff1aSoftware Locks \u901a\u5e38\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u6216\u539f\u5b50\u6307\u4ee4\u6765\u5b9e\u73b0\u53d8\u91cf\u53ef\u89c1\u6027\u548c\u4fdd\u6301\u7a0b\u5e8f\u987a\u5e8f\u3002 x86 CPU \u5185\u5b58\u5c4f\u969c\uff1a 1. intel \u539f\u8bed\uff08\u6c47\u7f16\u6307\u4ee4\uff09\u5b8c\u6210\u5c4f\u969c - lfence:load fence \u8bfb\u5c4f\u969c\uff1a\u5728lfence\u6307\u4ee4\u524d\u7684\u6240\u6709\u8bfb\u64cd\u4f5c\uff0c\u5fc5\u987b\u5728lfence\u6307\u4ee4\u540e\u7684\u8bfb\u64cd\u4f5c\u524d\u5b8c\u6210\u3002 - sfence:save fence \u5199\u5c4f\u969c\uff1a\u5728sfence\u6307\u4ee4\u524d\u7684\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u5fc5\u987b\u5728sfence\u6307\u4ee4\u540e\u7684\u5199\u64cd\u4f5c\u524d\u5b8c\u6210\u3002 - mfence: mixed fence \u8bfb\u5199\u5c4f\u969c\uff1a\u5728mfence\u6307\u4ee4\u524d\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c\uff0c\u5fc5\u987b\u5728mfence\u6307\u4ee4\u540e\u7684\u8bfb\u5199\u64cd\u4f5c\u524d\u5b8c\u6210\u3002 2. \u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u603b\u7ebf\u9501\u5b9e\u73b0\u3002 JVM \u5c42\u7ea7\uff1a8 \u4e2a hanppens-before \u539f\u5219 4 \u4e2a\u5185\u5b58\u5c4f\u969c \uff08LL LS SL SS\uff09 JSR\u5185\u5b58\u5c4f\u969c 1. LoadLoad\u5c4f\u969c\uff1a - \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Load1\uff1bLoadLoad\uff1bLoad2; - \u90a3\u4e48\uff0c\u5728Load2\u53ca\u540e\u7eed\u8bfb\u53d6\u64cd\u4f5c\u8981\u8bfb\u53d6\u7684\u6570\u636e\u88ab\u8bbf\u95ee\u524d\uff0c\u4fdd\u8bc1Load1\u8981\u8bfb\u53d6\u7684\u6570\u636e\u88ab\u8bfb\u53d6\u5b8c\u6bd5\u3002 StoreStore\u5c4f\u969c\uff1a \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Store1\uff1bStoreStore\uff1bStore2; \u90a3\u4e48\uff0c\u5728Store2\u53ca\u540e\u7eed\u5199\u5165\u64cd\u4f5c\u6267\u884c\u524d\uff0c\u4fdd\u8bc1Store1\u7684\u5199\u5165\u64cd\u4f5c\u5bf9\u5176\u5b83\u5904\u7406\u5668\u53ef\u89c1\u3002 LoadStore\u5c4f\u969c\uff1a \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Load1\uff1bLoadStore\uff1bStore2\uff0c \u5728Store2\u53ca\u540e\u7eed\u5199\u5165\u64cd\u4f5c\u88ab\u5237\u51fa\u524d\uff0c\u4fdd\u8bc1Load1\u8981\u8bfb\u53d6\u7684\u6570\u636e\u88ab\u8bfb\u53d6\u5b8c\u6bd5\u3002 StoreLoad\u5c4f\u969c\uff1a \u5bf9\u4e8e\u8fd9\u6837\u7684\u8bed\u53e5Store1\uff1bStoreLoad\uff1bLoad2; \u5728Load2\u53ca\u540e\u7eed\u6240\u6709\u8bfb\u53d6\u64cd\u4f5c\u6267\u884c\u524d\uff0c\u4fdd\u8bc1Store1\u7684\u5199\u5165\u5bf9\u6240\u6709\u5904\u7406\u5668\u53ef\u89c1\u3002 JVM \u5c42\u9762\u5bf9\u4e8e volatile \u7684\u5b9e\u73b0\u7ec6\u8282\uff1a // case 1 StoreStoreBarrier // ################# volatile \u5199\u64cd\u4f5c // ################# StoreLoadBarrier // case 2 LoadLoadBarrier // ################ volatile \u8bfb\u64cd\u4f5c // ################ LoadStoreBarrier - \u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u6709\u5728 # \u4e0a\u4e0b\u64cd\u4f5c\u90fd\u5b9e\u73b0\u4e86\u5b8c\u5168\u5c4f\u969c\u3002 - \u8fd9\u91cc\u662f JVM \u5c42\u9762\u8981\u6c42\u7684\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f\u89c4\u5219\uff0c\u5b9e\u9645\u5b9e\u73b0\u4ecd\u7136\u662f\u5e95\u5c42\u7684 lock addl 0x0 - \u82e5 volatile new Class \u90a3\u4e48\uff0c\u6574\u4e2a\u7c7b\u5168\u90e8\u5b9e\u73b0\u5c4f\u969c\uff08\u8fd9\u91cc\u662f\u9a6c\u8001\u5e08\u7684\u9a8c\u8bc1\u7ed3\u679c\uff0c\u65e0\u6570\u636e\u53c2\u8003\uff09 Hanppens-before \u539f\u5219\uff08JVM \u89c4\u5b9a\u91cd\u6392\u5e8f\u5fc5\u987b\u9075\u5b88\u7684\u89c4\u5219\uff09 -- JLS17 4.5 - \u7a0b\u5e8f\u6b21\u5e8f\u89c4\u5219\uff1a\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5185\uff0c\u6309\u7167\u4ee3\u7801\u51fa\u73b0\u7684\u987a\u5e8f\uff0c\u524d\u9762\u7684\u4ee3\u7801\u5148\u884c\u4e8e\u540e\u9762\u7684\u4ee3\u7801\uff0c\u51c6\u786e\u7684\u8bf4\u662f\u63a7\u5236\u6d41\u987a\u5e8f\uff0c\u56e0\u4e3a\u8981\u8003\u8651\u5230\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u3002 - \u7ba1\u7a0b\u9501\u5b9a\u89c4\u5219\uff1a\u4e00\u4e2aunlock\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\uff09\u5bf9\u540c\u4e00\u4e2a\u9501\u7684lock\u64cd\u4f5c\u3002 - volatile\u53d8\u91cf\u89c4\u5219\uff1a\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\uff09\u5bf9\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002 - \u7ebf\u7a0b\u542f\u52a8\u89c4\u5219\uff1aThread\u7684start\uff08\uff09\u65b9\u6cd5\u5148\u884c\u53d1\u751f\u4e8e\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u3002 - \u7ebf\u7a0b\u7ec8\u6b62\u89c4\u5219\uff1a\u7ebf\u7a0b\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5148\u884c\u4e8e\u6b64\u7ebf\u7a0b\u7684\u7ec8\u6b62\u68c0\u6d4b\u3002\u53ef\u4ee5\u901a\u8fc7Thread.join\uff08\uff09\u65b9\u6cd5\u7ed3\u675f\u3001Thread.isAlive\uff08\uff09\u7684\u8fd4\u56de\u503c\u7b49\u624b\u6bb5\u68c0\u6d4b\u7ebf\u7a0b\u7684\u7ec8\u6b62\u3002 - \u7ebf\u7a0b\u4e2d\u65ad\u89c4\u5219\uff1a\u5bf9\u7ebf\u7a0binterrupt\uff08\uff09\u65b9\u6cd5\u7684\u8c03\u7528\u5148\u884c\u53d1\u751f\u4e8e\u88ab\u4e2d\u65ad\u7ebf\u7a0b\u7684\u4ee3\u7801\u68c0\u6d4b\u5230\u4e2d\u65ad\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u53ef\u4ee5\u901a\u8fc7Thread.interrupt\uff08\uff09\u65b9\u6cd5\u68c0\u6d4b\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad. - \u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5b8c\u6210\u5148\u884c\u4e8e\u53d1\u751f\u5b83\u7684finalize\uff08\uff09\u65b9\u6cd5\u7684\u5f00\u59cb\u3002 - \u4f20\u9012\u6027\uff1a\u5982\u679c\u64cd\u4f5cA\u5148\u884c\u4e8e\u64cd\u4f5cB\uff0c\u64cd\u4f5cB\u5148\u884c\u4e8e\u64cd\u4f5cC\uff0c\u90a3\u4e48\u64cd\u4f5cA\u5148\u884c\u4e8e\u64cd\u4f5cc as-if-serial : - \u4e0d\u7ba1\u786c\u4ef6\u4ec0\u4e48\u987a\u5e8f(\u5373\u6709\u53ef\u80fd\u53d1\u751f\u91cd\u6392\u5e8f\uff0c\u4f46\u662f\u6ca1\u5565\u5f71\u54cd)\uff0c\u5355\u7ebf\u7a0b\u6267\u884c\u7684\u7ed3\u679c\u4e0d\u53d8\uff0c\u770b\u4e0a\u53bb\u50cf\u662f serial \u6848\u4f8b\uff1a \u95ee\u9898\uff1a\u5c06\u8bf7\u6c42\u6309\u7167\u987a\u5e8f\u6267\u884c \u89e3\u7b54\uff1aThread \u4f7f\u7528 SingleThreadPool.","title":"\u7981\u6b62\u4e71\u5e8f(\u6709\u5e8f\u6027\u4fdd\u969c)"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_9","text":"Write Combining Buffer\uff08\u5408\u5e76\u5199\u6280\u672f\uff0c\u63d0\u5347\u5199\u6548\u7387\uff09 - \u4e00\u822c\u662f 4 \u4e2a\u5b57\u8282 - \u7531\u4e8e ALU \u901f\u5ea6\u592a\u5feb\uff0c\u6240\u4ee5\u5728\u5199\u5165 L1 \u7684\u540c\u65f6\uff0c\u5199\u5165\u4e00\u4e2a WC Buffer\uff0c\u6ee1\u4e86\u4e4b\u540e\uff0c\u518d\u76f4\u63a5\u66f4\u65b0\u5230 L2","title":"\u5408\u5e76\u5199\uff08\u4e0d\u91cd\u8981\uff09"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#numa","text":"Non Uniform Memory Access UMA\uff1a \u540c\u4e00\u8bbf\u95ee\u5185\u5b58\uff0c\u591a\u4e2aCPU\u8bbf\u95ee\u65f6\u4e0d\u5177\u5907\u660e\u663e\u7684\u4f18\u5148\u7ea7\u8bbf\u95ee\u6743\u9650\u3002 - \u4e0d\u5bb9\u6613\u6269\u5c55 - CPU\u6570\u91cf\u589e\u591a\u540e\u5f15\u8d77\u5185\u5b58\u8bbf\u95ee\u51b2\u7a81\u52a0\u5267\uff0c\u5f88\u591a\u8d44\u6e90\u82b1\u5728\u4e89\u62a2\u5185\u5b58\u5730\u5740\u4e0a\u9762\u4e86\u3002 - \u4e00\u822c\u800c\u8a00\uff0c4\u9897\u5de6\u53f3\u6bd4\u8f83\u5408\u9002\u3002 NUMA\uff1a\u5206\u914d\u5185\u5b58\u4f1a\u4f18\u5148\u5206\u914d\u8be5\u7ebf\u7a0b\u6240\u5728 CPU \u7684\u6700\u8fd1\u5185\u5b58\u3002\u5f53\u7136\uff0c\u8bbf\u95ee\u4e3e\u4f8b\u522b\u4eba\u8fd1\u7684\u5185\u5b58\u4e5f\u5c31\u662f\u4f4e\u6709\u9650\u7ea7\u3002 - \u76ee\u524d\u66f4\u591a\u624d\u6709\u6b64\u67b6\u6784\uff0c\u5f53\u7136\u770b\u751f\u4ea7\u5382\u5bb6 ZGC - NUMA aware - \u7531\u4e8e CPU \u5e95\u5c42\u7ed3\u6784 NUMA\uff0c\u90a3\u4e48\u4ea7\u751f\u4e86\u76f8\u5173\u7684\u8f6f\u4ef6\u6280\u672f","title":"NUMA"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_10","text":"\u901a\u7535 -> bios uefi \u5de5\u4f5c -> \u52a0\u7535\u81ea\u68c0 -> \u5230\u786c\u76d8\u56fa\u5b9a\u4f4d\u7f6e()\u52a0\u8f7d bootloader -> \u8bfb\u53d6\u53ef\u914d\u7f6e\u4fe1\u606f -> CMOS - BIOS UEFI:Unified Extensible Firmware Interface - bootloader \u5199\u6b7b\u5230\u78c1\u76d8\u7684\u7b2c\u4e00\u4e2a\u6247\u533a\uff0c\u5e76loader\u5230\u56fa\u5b9a\u4f4d\u7f6e - CMOS(Complementary Metal Oxide Semiconductor): \u9700\u8981\u6301\u7eed\u901a\u7535\uff0c\u65ad\u7535\u540e\u4fe1\u606f\u6d88\u5931 - \u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\uff1a\u6389\u8f6c Ox700","title":"\u542f\u52a8\u8fc7\u7a0b\uff08\u4e0d\u91cd\u8981\uff09"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_11","text":"\u5b9a\u4e49\uff1a\u6240\u6709\u8f6f\u4ef6\u7684\u8001\u5927 - \u7ba1\u7406\u786c\u4ef6\uff1a\u5185\u5b58\uff0c\u786c\u76d8\uff0cCPU - \u7ba1\u7406\u5e94\u7528\uff1a\u8fdb\u7a0b \u7ed3\u6784\uff1a - Hardware - Shell::kernel - \u5e94\u7528 - \u300aLinux \u5185\u6838\u8bbe\u8ba1\u4ee5\u53ca\u5b9e\u8df5\u300b kernel - CUP \u8c03\u5ea6 - \u5185\u5b58\u7ba1\u7406 - \u4e2d\u65ad\u5904\u7406\uff0c\u8bbe\u5907\u9a71\u52a8 - \u5e94\u7528\u7ba1\u7406\uff0c\u8fdb\u7a0b\u8c03\u5ea6 - \u6587\u4ef6\u7cfb\u7edf \u9e3f\u8499\u5fae\u5185\u6838\uff1a - \u9488\u5bf95G + IoT - \u5168\u573a\u666f - \u624b\u673a PC \u5e73\u677f \u8f66\u8f86 \u667a\u80fd\u7a7f\u6234 \u5bb6\u5c45\u8bbe\u5907 - \u5f39\u6027\u90e8\u7f72 - \u5f00\u6e90 - \u65b9\u821f\u7f16\u8bd1\u5668 - \u6df7\u5408\u5185\u6838 Linux + LiteOS + ...","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_12","text":"\u5fae\u5185\u6838 - \u5f39\u6027\u90e8\u7f72 5G IoT \u5b8f\u5185\u6838 - PC phone \u5916\u6838 - \u79d1\u7814 \u5b9e\u9a8c\u4e2d \u4e3a\u5e94\u7528\u5b9a\u5236\u64cd\u4f5c\u7cfb\u7edf (\u7c7b\u4f3c\u591a\u79df\u6237 request-based GC JVM) \u5b8f\u5185\u6838\uff1a\u6240\u6709\u76f8\u5173\u90fd\u96c6\u6210\u4e00\u4f53 \u5fae\u5185\u6838\uff1a\u4ec5\u4ec5\u5177\u5907\u5e94\u7528\u7ba1\u7406\u548c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u5176\u4ed6\u529f\u80fd\u5168\u90e8\u901a\u8fc7\u8c03\u5ea6\u5b9e\u73b0\u5b8c\u6210 \u6548\u7387\u5fae\u4f4e\uff0c\u5f39\u6027\u90e8\u7f72 \u5916\u6838\uff1a \u4f9d\u636e\u5e94\u7528\u7aef\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5b9a\u5236 VMM: - \u865a\u62df\u673a\u76d1\u63a7\u5668\uff0c\u786c\u4ef6\u8d44\u6e90\u8fc7\u5269","title":"\u5185\u6838\u5206\u7c7b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_13","text":"DOS\uff1a\u4e0d\u5206\u7ea7\u522b\uff0c\u76f4\u63a5\u64cd\u4f5c\u786c\u4ef6\u3002 \u76ee\u524dLinux cpu \u5206\u4e0d\u540c\u7684\u6307\u4ee4\u7ea7\u522b - intel CPU \u5206\u56db\u4e2a\u7ea7\u522b\uff1aring 0, ring 1, ring 2, ring 3 - linux \u5185\u6838\u8dd1\u5728 ring 0 \u7ea7\uff0c \u7528\u6237\u7a0b\u5e8f\u8dd1\u5728 ring 3\uff0c\u5bf9\u4e8e\u7cfb\u7edf\u7684\u5173\u952e\u8bbf\u95ee\uff0c\u9700\u8981\u7ecf\u8fc7 kernel \u7684\u540c\u610f\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u5065\u58ee\u6027 \u5185\u6838\u6267\u884c\u7684\u64cd\u4f5c ---> 200 \u591a\u4e2a\u7cfb\u7edf\u8c03\u7528 sendfile read write pthread fork JVM -> \u7ad9\u5728 OS \u8001\u5927\u7684\u89d2\u5ea6\uff0c\u5c31\u662f\u4e2a\u666e\u901a\u7a0b\u5e8f","title":"\u7528\u6237\u6001\u4e0e\u5185\u6838\u6001"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_14","text":"\u9762\u8bd5\u9ad8\u9891\uff1a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u7b54\u6848\uff1a \u666e\u901a\uff1a\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u7684\u72b6\u6001\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4e0d\u540c\u7684\u6267\u884c\u8def\u5f84\u3002 \u4e13\u4e1a\uff1a\u8fdb\u7a0b\u662f OS \u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u7ebf\u7a0b\u662f\u6267\u884c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002\u5206\u914d\u8d44\u6e90\u6700\u91cd\u8981\u7684\u662f\uff1a\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u6267\u884c\uff08\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff09","title":"\u7a0b\u5e8f \u8fdb\u7a0b \u7ebf\u7a0b \u7ea4\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_15","text":"\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002","title":"\u8fdb\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_16","text":"\u7ebf\u7a0b\u5728 Linux \u4e2d\u7684\u5b9e\u73b0\uff1a \u300aLinux \u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u300b \u7b2c\u4e09\u7248 28 \u9875 - \u6bcf\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4e8e\u7ebf\u7a0b\u7684\u5b9e\u73b0\u4e0d\u540c - Linux \u4e2d\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u8fdb\u7a0b\uff0c\u53ea\u662f\u548c\u5176\u4ed6\u8fdb\u7a0b\u5171\u4eab\u8d44\u6e90\uff08\u5185\u5b58\u7a7a\u95f4\uff0c\u5168\u5c40\u6570\u636e\u7b49\u3002\u3002\u3002\uff09 - \u5176\u4ed6\u7cfb\u7edf\u90fd\u6709\u5404\u81ea\u7684\u6240\u8c13LWP \u7684\u5b9e\u73b0\uff1aLight Weight Process - \u9ad8\u5c42\u9762\u7406\u89e3\uff1a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4e0d\u540c\u7684\u6267\u884c\u8def\u7ebf\u3002 \u5b9e\u73b0\uff1a 1. hotspot JVM\uff08\u7528\u6237\u7ea7\uff09\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u90fd\u662f\u4e00\u4e00\u5bf9\u5e94\u7684, \u6240\u4ee5\u7ebf\u7a0b\u662f\u91cd\u91cf\u7ea7\u7684 2. \u5728JVM\u4e2d\u7ee7\u7eed\u5f00\u8f9f\u7ebf\u7a0b\uff0c\u540c\u5728\u7528\u6237\u7ea7\u91cc\u9762\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u3002\u5b9e\u9645\u4e0a\u4ec5\u4e00\u4e2a\u7ebf\u7a0b\u3002","title":"\u7ebf\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#fiber","text":"\u7ea4\u7a0b\uff1a\u7528\u6237\u6001\u7684\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u4e2d\u7684\u7ebf\u7a0b\uff0c\u5207\u6362\u548c\u8c03\u5ea6\u4e0d\u9700\u8981\u7ecf\u8fc7\u64cd\u4f5c\u7cfb\u7edf \u4f18\u52bf\uff1a - 1\uff1a\u5360\u6709\u8d44\u6e90\u5f88\u5c11\uff1aOS\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b1M Fiber\u4e3a4K - 2\uff1a\u5207\u6362\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u542f\u52a8\u5f88\u591a\u4e2a10W+ \u76ee\u524d 2020 3 22 \u652f\u6301\u5185\u7f6e\u7ea4\u7a0b\u7684\u8bed\u8a00\uff1a - Kotlin Scala Go Python(lib)... - Java? \uff08open jdk : loom\uff09","title":"fiber \u7ea4\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#java_1","text":"\u5229\u7528 Quaser \u5e93\uff08\u4e0d\u6210\u719f\uff09 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>mashibing.com</groupId> <artifactId>HelloFiber</artifactId> <version>1.0-SNAPSHOT</version> <dependencies> <!-- https://mvnrepository.com/artifact/co.paralleluniverse/quasar-core --> <dependency> <groupId>co.paralleluniverse</groupId> <artifactId>quasar-core</artifactId> <version>0.8.0</version> </dependency> </dependencies> </project> \u7ebf\u7a0b\u7248 import co.paralleluniverse.fibers.Fiber ; import co.paralleluniverse.fibers.SuspendExecution ; import co.paralleluniverse.strands.SuspendableRunnable ; public class HelloFiber { public static void main ( String [] args ) throws Exception { long start = System . currentTimeMillis (); Runnable r = new Runnable () { @Override public void run () { calc (); } }; int size = 10000 ; Thread [] threads = new Thread [ size ] ; for ( int i = 0 ; i < threads . length ; i ++ ) { threads [ i ] = new Thread ( r ); } for ( int i = 0 ; i < threads . length ; i ++ ) { threads [ i ] . start (); } for ( int i = 0 ; i < threads . length ; i ++ ) { threads [ i ] . join (); } long end = System . currentTimeMillis (); System . out . println ( end - start ); } static void calc () { int result = 0 ; for ( int m = 0 ; m < 10000 ; m ++ ) { for ( int i = 0 ; i < 200 ; i ++ ) result += i ; } } } \u7ea4\u7a0b\u7248\u672c import co.paralleluniverse.fibers.Fiber ; import co.paralleluniverse.fibers.SuspendExecution ; import co.paralleluniverse.strands.SuspendableRunnable ; public class HelloFiber2 { public static void main ( String [] args ) throws Exception { long start = System . currentTimeMillis (); // \u7ea4\u7a0b int size = 10000 ; Fiber < Void >[] fibers = new Fiber [ size ] ; for ( int i = 0 ; i < fibers . length ; i ++ ) { fibers [ i ] = new Fiber < Void > ( new SuspendableRunnable () { public void run () throws SuspendExecution , InterruptedException { calc (); } }); } for ( int i = 0 ; i < fibers . length ; i ++ ) { fibers [ i ] . start (); } for ( int i = 0 ; i < fibers . length ; i ++ ) { fibers [ i ] . join (); } long end = System . currentTimeMillis (); System . out . println ( end - start ); } static void calc () { int result = 0 ; for ( int m = 0 ; m < 10000 ; m ++ ) { for ( int i = 0 ; i < 200 ; i ++ ) result += i ; } } } \u4f5c\u4e1a\uff1a \u76ee\u524d\u662f 10000 \u4e2a Fiber -> 1 \u4e2a JVM \u7ebf\u7a0b\uff0c\u60f3\u529e\u6cd5\u63d0\u9ad8\u6548\u7387\uff0c10000Fiber -> 10 \u4efd -> 10Threads","title":"Java \u4e2d\u5bf9\u4e8e\u7ea4\u7a0b\u7684\u652f\u6301\uff1a\u6ca1\u6709\u5185\u7f6e\uff0c\u76fc\u671b\u5185\u7f6e"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_17","text":"\u7ea4\u7a0b vs \u7ebf\u7a0b\u6c60\uff1a\u5f88\u77ed\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u4e0d\u9700\u8981\u548c\u5185\u6838\u6253\u4ea4\u9053\uff0c\u5e76\u53d1\u91cf\u9ad8\uff01","title":"\u7ea4\u7a0b\u7684\u5e94\u7528\u573a\u666f"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_18","text":"Linux \u4e2d\u4e5f\u79f0\u4e3a task, \u662f\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d - \u8d44\u6e90\uff1a\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5185\u6838\u6570\u636e\u7ed3\u6784\uff08\u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff09 \u5168\u5c40\u53d8\u91cf \u6570\u636e\u6bb5\u3002\u3002\u3002 - \u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff1aPCB\uff08Process Control Block)","title":"\u8fdb\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_19","text":"\u5185\u6838\u542f\u52a8\u540e\u7ecf\u5e38\u9700\u8981\u505a\u4e00\u4e9b\u540e\u53f0\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u7531Kernel Thread \u6765\u5b8c\u6210\u3002\u4ec5\u4ec5\u5728\u5185\u6838\u7a7a\u95f4\u8fd0\u884c\u3002","title":"\u5185\u6838\u8fdb\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_20","text":"\u7cfb\u7edf\u51fd\u6570: - fork() --- clone() - exec() B = fork(A): - A\uff1a \u7236\u8fdb\u7a0b - B\uff1a \u5b50\u8fdb\u7a0b","title":"\u8fdb\u7a0b\u521b\u5efa\u548c\u542f\u52a8"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_21","text":"# \u67e5\u627e\u50f5\u5c38\u8fdb\u7a0b ps -ef | grep defunct \u5b9a\u4e49\uff1a \u7236\u8fdb\u7a0b\u4ea7\u751f\u5b50\u8fdb\u7a0b\u540e\uff0c\u4f1a\u7ef4\u62a4\u5b50\u8fdb\u7a0b\u7684\u4e00\u4e2aPCB\u7ed3\u6784\uff0c\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u7531\u7236\u8fdb\u7a0b\u91ca\u653e\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u6ca1\u6709\u91ca\u653e\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u6210\u4e3a\u4e00\u4e2a\u50f5\u5c38\u8fdb\u7a0b - \u50f5\u5c38\u8fdb\u7a0b\u9700\u8981\u624b\u52a8\u91ca\u653e\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u672a\u5173\u673a\u7684\u670d\u52a1\u5668\u4e2d\u53ef\u80fd\u5b58\u5728\u6301\u7eed\u589e\u957f\u7684\u50f5\u5c38\u8fdb\u7a0b zombie.c #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <assert.h> #include <sys/types.h> int main () \uff5b // for() \u8fd4\u56de\u4e24\u4e2a\u503c\uff0c1 \u4e3a\u5b50\u8fdb\u7a0b\u7a0b\u5e8f\u3002 pid_t pid = fork (); // \u5b50\u8fdb\u7a0b\u8fd0\u884c if ( 0 == pid ) { printf ( \"child id is %d \\n \" , getpid ()); printf ( \"parent id is %d \\n \" , getppid ()); } else // \u7236\u8fdb\u7a0b\u4e00\u81f4\u8fd0\u884c\uff0c\u4e0d\u91ca\u653e\u5b50\u7a0b\u5e8f { while ( 1 ); } } - \u7f16\u8bd1\u53ca\u540e\u53f0\u8fd0\u884c\uff1a gcc zombie.c -o zombie && ./zombie & - \u67e5\u770b\u50f5\u5c38\u8fdb\u7a0b\uff1a ps \u50f5\u5c38\u8fdb\u7a0b\u540e\u9762\u6709 <defunct>","title":"\u50f5\u5c38\u8fdb\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_22","text":"\u5b50\u8fdb\u7a0b\u7ed3\u675f\u4e4b\u524d\uff0c\u7236\u8fdb\u7a0b\u5df2\u7ecf\u9000\u51fa \u5b64\u513f\u8fdb\u7a0b\u4f1a\u6210\u4e3aipt\u8fdb\u7a0b\u7684\u5b69\u5b50\uff1a \u82e5\u56fe\u5f62\u5316\u754c\u9762\u5b58\u5728\uff0c\u90a3\u4e48\u8fdb\u7a0b\u7531\u6b64\u8fdb\u7a0b\u7ef4\u62a4 \u82e5\u65e0\u56fe\u5f62\u5316\u754c\u9762\uff0c\u90a3\u4e48\u75311\u53f7\u8fdb\u7a0b\u7ef4\u62a4\uff081\u53f7\u4e3a\u6240\u6709\u8fdb\u7a0b\u7684\u516c\u7239\uff09 orphan.c #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <assert.h> #include <sys/types.h> int main() \uff5b // for() \u8fd4\u56de\u4e24\u4e2a\u503c\uff0c1 \u4e3a\u5b50\u8fdb\u7a0b\u7a0b\u5e8f\u3002 pid_t pid = fork(); // \u5b50\u8fdb\u7a0b\u8fd0\u884c if(0 == pid) { printf(\"child ppid is %d\\n\", getppid()); sleep(10); printf(\"parent ppid is %d\\n\", getppid()); }else // \u7236\u8fdb\u7a0b\u63d0\u524d\u9000\u51fa { printf(\"parent id is %d\\n\", getpid()); sleep(5); exit(); } }","title":"\u5b64\u513f\u7ebf\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_23","text":"\u5185\u6838\u8fdb\u7a0b\u8c03\u5ea6\u5668\u51b3\u5b9a\uff1a - \u8be5\u90a3\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff1f\u4f55\u65f6\u5f00\u59cb\uff1f\u8fd0\u884c\u591a\u957f\u65f6\u95f4\uff1f - \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u8c03\u5ea6\u65b9\u6848\u3002 \u4ece\u5355\u4efb\u52a1\uff08\u72ec\u5360\uff09\u5230\u591a\u4efb\u52a1\uff08\u5206\u65f6\uff09 - \u6700\u5f00\u59cb\uff1aDOS MacOS \u65e9\u671f\u7248\u672c\uff0c Windows3.1 ... - \u5230\u76ee\u524d\uff1atimeslice - CPU \u5206\u7247\u6267\u884c\u529f\u80fd - \u539f\u5219\uff1a\u6700\u5927\u9650\u5ea6\u5730\u538b\u69a8cpu\u8d44\u6e90 \u6280\u672f\uff1a - \u5de5\u7a0b\u6280\u672f\uff1a\u5927\u5bb6\u90fd\u53ef\u4ee5\u5b66\u4f1a\u3002 - \u4f5c\u51fa\u81ea\u5df1\u7684\u5de5\u7a0b\u65b9\u4e3a\u6b63\u9014\u3002 \u591a\u4efb\u52a1\uff08multitasking) 1. \u975e\u62a2\u5360\u5f0f\uff08cooperative multitasking\uff09 - \u9664\u975e\u8fdb\u7a0b\u4e3b\u52a8\u8ba9\u51facpu\uff08yielding\uff09\uff0c\u5426\u5219\u5c06\u4e00\u76f4\u8fd0\u884c 2. \u62a2\u5360\u5f0f\uff08preemptive multitasking\uff09 - \u7531\u8fdb\u7a0b\u8c03\u5ea6\u5668\u5f3a\u5236\u5f00\u59cb\u6216\u6682\u505c\uff08\u62a2\u53e4\uff09\u67d0\u4e00\u8fdb\u7a0b\u7684\u6267\u884c \u8fdb\u7a0b\u8c03\u5ea6\uff08\u9009\u4fee\uff09 1. Linux2.5 \u7ecf\u5178 Unix 0(1) \u8c03\u5ea6\u7b56\u7565\uff0c\u504f\u5411\u670d\u52a1\u5668\uff0c\u4f46\u5bf9\u4ea4\u4e92\u4e0d\u53cb\u597d - timeslice \u8f6e\u8be2\u7b56\u7565 - \u6ca1\u6709\u5373\u65f6\u54cd\u5e94\uff0c 2. Linux2.6.23 \u91c7\u7528 CFS \u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5Completely Fair Scheduler - \u6309\u4f18\u5148\u7ea7\u5206\u914d\u65f6\u95f4\u7247\u7684\u6bd4\u4f8b\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u65f6\u95f4\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u65f6\u95f4\u4e0d\u5230\u4ed6\u5e94\u8be5\u5206\u914d\u7684\u6bd4\u4f8b,\u4f18\u5148\u6267\u884c \u8fdb\u7a0b\u7c7b\u578b - IO\u5bc6\u96c6\u578b\u5927\u90e8\u5206\u65f6\u95f4\u7528\u4e8e\u7b49\u5f85IO - CPU\u5bc6\u96c6\u578b\u5927\u90e8\u5206\u65f6\u95f4\u7528\u4e8e\u95f7\u5934\u8ba1\u7b97 \u8fdb\u7a0b\u4f18\u5148\u7ea7 - \u5b9e\u65f6\u8fdb\u7a0b >>> \u666e\u901a\u8fdb\u7a0b\uff080-99\uff09 - \u666e\u901a\u8fdb\u7a0bnice\u503c\uff08-20-19\uff09 \u65f6\u95f4\u5206\u914d - linux\u91c7\u7528\u6309\u4f18\u5148\u7ea7\u7684CPU\u65f6\u95f4\u6bd4 - \u5176\u4ed6\u7cfb\u7edf\u591a\u91c7\u7528\u6309\u4f18\u5148\u7ea7\u7684\u65f6\u95f4\u7247 eg.\u4e24\u4e2aapp\u540c\u65f6\u8fd0\u884c - \u4e00\u4e2a\u6587\u672c\u5904\u7406\u7a0b\u5e8f - \u4e00\u4e2a\u5f71\u89c6\u540e\u671f\u7a0b\u5e8f Linux \u9ed8\u8ba4\u8c03\u5ea6\u7b56\u7565\uff1a \u5b9e\u65f6\u8fdb\u7a0b\uff08\u6025\u8bca\uff09\uff1a \u4f18\u5148\u7ea7\u5206\u9ad8\u4f4e\uff1aSCHED_FIFO (First In First Out)\uff0c\u6b64\u79cd\u7b49\u7ea7\u6700\u9ad8\u3002\u9664\u975e\u81ea\u5df1\u8ba9\u51faCPU\u8d44\u6e90\u5426\u5219Linux\u4f1a\u76f4\u81f3\u6267\u884c\u5b83\u3002\u9664\u975e\u8fd8\u6709\u66f4\u9ad8\u7ea7\u522b\u7684FIOFO\u548cRR\u62a2\u5360\u5b83\u3002 \u4f18\u5148\u7ea7\u4e00\u6837\u65f6\uff1aSCHED_RR\uff08Round Robin\uff09\uff0cRR\u53ea\u662f\u8fd9\u79cd\u7ebf\u7a0b\u4e2d\u662f\u540c\u7ea7\u522bFIFO\u4e2d\u7684\u5e73\u5747\u5206\u914d \u53ea\u6709\u5b9e\u65f6\u8fdb\u7a0b\u4e3b\u52a8\u8ba9\u51fa\uff0c\u6216\u8005\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u666e\u901a\u8fdb\u7a0b\u624d\u6709\u673a\u4f1a\u8fd0\u884c \u666e\u901a\uff1a CFS","title":"\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u8c03\u5ea6"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_24","text":"\u4e2d\u65ad\u5904\u7406\u673a\u5236\u7684\u5b9e\u73b0\u7ec6\u8282\uff1a \u786c\u4ef6\u4e2d\u65ad --- \u4e2d\u65ad\u63a7\u5236\u5668 --- CPU --- kernel --- \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f - \u4e2d\u65ad\u5411\u91cf\u8868\uff1a - n1 - \u952e\u76d8 - \u5904\u7406\u7a0b\u5e8f - n2 - \u9f20\u6807 - \u5904\u7406\u7a0b\u5e8f - 0x80 - \u8f6f\u4e2d\u65ad - \u5904\u7406\u7a0b\u5e8f - CPU\u4f9d\u636e\u7279\u5b9a\u7684\u4e2d\u65ad\u4fe1\u53f7\u5199\u5165\u56fa\u5b9a\u5185\u5b58\u4f4d\u7f6e - kernel \u8bfb\u53d6\u5230\u4e2d\u65ad\u4fe1\u53f7\uff0c\u5e76\u6267\u884c\u5199\u597d\u7684\u4e2d\u65ad - \u4e2d\u65ad\u5904\u7406\u4e0a\u534a\u573a\u4e3akernel, \u4e0b\u534a\u573a\u4e3a\u5e94\u7528\u7a0b\u5e8f \u5206\u7c7b\uff1a \u786c\u4e2d\u65ad\uff1a - \u786c\u4ef6\u8ddf\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6253\u4ea4\u9053\u7684\u4e00\u79cd\u673a\u5236 \u8f6f\u4e2d\u65ad\uff0880 Hex \u4e2d\u65ad\uff09 == \u7cfb\u7edf\u8c03\u7528 - \u5e94\u7528\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u8c03\u7528\u7cfb\u7edf\u51fd\u6570 - \u7cfb\u7edf\u8c03\u7528\uff1aint 0x80 \u6216\u8005 sysenter \u539f\u8bed\uff08\u66f4\u8fdb\u4e00\u6b65\uff09 - \u901a\u8fc7 ax \u5bc4\u5b58\u5668\u586b\u5165\u8c03\u7528\u53f7 - \u53c2\u6570\u901a\u8fc7 bx cx dx si di \u5bc4\u5b58\u5668\u4f20\u5165\u5185\u6838 - \u8fd4\u56de\u503c\u901a\u8fc7 ax \u8fd4\u56de - \u64cd\u4f5c\u7cfb\u7edf\u7cfb\u7edf\u51fd\u6570\u8c03\u7528\u8868 - eax <- \u7cfb\u7edf\u8c03\u7528\u53f7 - write <- 4\u53f7 - exit <- 1\u53f7 \u6848\u4f8b\uff1a java \u8bfb\u7f51\u7edc \u2013> jvm read() \u2013 > c\u5e93 read() - > \u5185\u6838\u7a7a\u95f4 -> system_call() \uff08\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8f sysenter \u539f\u8bed\uff0c\u4f9d\u636e\u7cfb\u7edf\u51fd\u6570\u8c03\u7528\u8868\uff09 -> sys_read() \u5904\u7406\u54cd\u5e94\uff0c\u5e76\u5c06\u5904\u7406\u7ed3\u679c\u5bc4\u5b58\u5728 ax \u4e2d -> \u8fd4\u56dejvm -> java","title":"\u4e2d\u65ad"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_25","text":"","title":"\u4ece\u6c47\u7f16\u89d2\u5ea6\u7406\u89e3\u8f6f\u4e2d\u65ad"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_26","text":"\u5b89\u88c5\uff1a # nasm \u662f\u7528\u6765\u7f16\u8bd1\u6c47\u7f16\u6587\u4ef6\u7684 .asm yum install nasm hello.asm ;hello.asm ;write(int fd, const void *buffer, size_t nbytes) ;- fd \u6587\u4ef6\u63cf\u8ff0\u7b26 file descriptor - linux\u4e0b\u4e00\u5207\u7686\u6587\u4ef6 section data msg db \"Hello\", 0xA len equ $ - msg section .text global _start _start: mov edx, len mov ecx, msg mov ebx, 1 ;\u6587\u4ef6\u63cf\u8ff0\u7b261 std_out mov eax, 4 ;write\u51fd\u6570\u7cfb\u7edf\u8c03\u7528\u53f7 4 int 0x80 mov ebx, 0 mov eax, 1 ;exit\u51fd\u6570\u7cfb\u7edf\u8c03\u7528\u53f7 int 0x80 \u7f16\u8bd1\uff1a - nasm -f elf hello.asm -o hello.o \u94fe\u63a5\uff1a - ld -m elf_i386 -o hello hello.o \u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u8981\u4e48\u5904\u4e8e\u7528\u6237\u6001\uff0c\u8981\u4e48\u5904\u4e8e\u5185\u6838\u6001 - \u800c\u7a0b\u5e8f\u7684IO\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u5224\u5b9a\u4e3a\uff1a - \u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5b9a\u4f1a\u8c03\u7528\u5185\u6838\u6001\u6267\u884c\uff0c\u800c\u533a\u5206\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u5173\u952e\u70b9\u5728\u4e8e\uff1a\u6b64\u65f6\uff0c\u7528\u6237\u6001\u7684\u90e8\u5206\u662f\u5426\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5de5\u4f5c\u3002\u4e0d\u80fd\u5e72\u6d3b\u4e3a\u963b\u585e\uff0c\u53ef\u4ee5\u5e72\u6d3b\u7684\u4e3a\u975e\u963b\u585e\u3002","title":"\u642d\u5efa\u6c47\u7f16\u73af\u5883"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_27","text":"","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_28","text":"DOS \u65f6\u4ee3\uff1a \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c\uff08\u4e5f\u6709\u4e00\u4e9b\u7279\u6b8a\u7b97\u6cd5\u53ef\u4ee5\u652f\u6301\u591a\u8fdb\u7a0b\uff09 windows9x\uff1a\u591a\u4e2a\u8fdb\u7a0b\u5168\u90e8\u88c5\u5165\u5185\u5b58 1\uff1a\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u6491\u7206\u4e86 2\uff1a\u4e92\u76f8\u6253\u6270 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8bde\u751f\u4e86\u73b0\u5728\u7684\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\uff1a\u865a\u62df\u5730\u5740 \u5206\u9875\u88c5\u5165 \u8f6f\u786c\u4ef6\u7ed3\u5408\u5bfb\u5740 1.\u5206\u9875\uff08\u5185\u5b58\u4e0d\u591f\u7528\uff09\uff0c\u5185\u5b58\u4e2d\u5206\u6210\u56fa\u5b9a\u5927\u5c0f\u7684\u9875\u6846\uff08page frame 4K\uff09\uff0c\u540c\u65f6\u4e5f\u628a\u7a0b\u5e8f\uff08\u786c\u76d8\u4e0a\uff09\u5206\u6210 4K \u5927\u5c0f\u7684\u5757\uff0c\u7528\u5230\u54ea\u4e00\u5757\uff0c\u52a0\u8f7d\u90a3\u4e00\u5757\uff0c\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5185\u5b58\u5df2\u7ecf\u6ee1\u4e86\uff0c\u4f1a\u628a\u6700\u4e0d\u5e38\u7528\u7684\u4e00\u5757\u653e\u5230 swap \u5206\u533a\uff0c \u628a\u6700\u65b0\u7684\u4e00\u5757\u52a0\u8f7d\u8fdb\u6765\uff0c\u8fd9\u4e2a\u5c31\u662f\u8457\u540d\u7684 LRU** \u7b97\u6cd5** \u6848\u4f8b\uff1awin \u53cc\u51fb\u5e94\u7528\uff0c\u5373\u5c06\u7a0b\u5e8f**\u9875\u8868**\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u3002\u540c\u65f6\uff0c\u52a0\u8f7d\u5165\u53e3\u5730\u5740\u9875\uff0c\u4e4b\u540e\u8fde\u63a5\u5176\u4ed6\u9875\u3002\u540c\u65f6\uff0c\u5982\u679c\u5185\u5b58\u7a7a\u95f4\u6ee1\u4e86\uff0c\u90a3\u4e48\u4f1a\u628a\u6700\u4e0d\u5e38\u7528\u7684\u4e00\u5757\u653e\u5982 Linux \u7684 swap \u5206\u533a LRU \u7b97\u6cd5 LeetCode146 \u9898\uff0c\u5934\u6761\u8981\u6c42\u624b\u6495\uff0c\u963f\u91cc\u53bb\u5e74\u4e5f\u8981\u6c42\u624b\u6495 Least Recently Used \u6700\u4e0d\u5e38\u7528\uff0c\u8fd1\u4e4e\u6240\u6709\u7684\u8bbe\u8ba1\u5230\u7f13\u5b58\u7684\u90fd\u4f1a\u8bbe\u8ba1\u5230\u6b64\u7b97\u6cd5:LRU, LFU \u54c8\u5e0c\u8868\uff08\u4fdd\u8bc1 \u67e5\u627e\u64cd\u4f5c O(1)\uff09 + \u94fe\u8868 \uff08\u4fdd\u8bc1 \u6392\u5e8f\u64cd\u4f5c\u548c\u65b0\u589e\u64cd\u4f5c O(1)\uff09\uff09 \u53cc\u5411\u94fe\u8868 \uff08\u4fdd\u8bc1 \u5de6\u8fb9\u6307\u9488 \u6307\u5411\u53f3\u8fb9\u5757\uff09 2.\u865a\u62df\u5185\u5b58\uff08\u89e3\u51b3\u76f8\u4e92\u6253\u6270\u95ee\u9898\uff09 DOS Win31 \u5e94\u7528\u7a0b\u5e8f... \u4e92\u76f8\u5e72\u6389 \u4e3a\u4e86\u4fdd\u8bc1\u4e92\u4e0d\u5f71\u54cd - \u8ba9\u8fdb\u7a0b\u5de5\u4f5c\u5728\u865a\u62df\u7a7a\u95f4\uff0c\u7a0b\u5e8f\u4e2d\u7528\u5230\u7684\u7a7a\u95f4\u5730\u5740\u4e0d\u518d\u662f\u76f4\u63a5\u7684\u7269\u7406\u5730\u5740\uff0c\u800c\u662f\u865a\u62df\u7684\u5730\u5740\uff0c\u8fd9\u6837\uff0cA \u8fdb\u7a0b\u6c38\u8fdc\u4e0d\u53ef\u80fd\u8bbf\u95ee\u5230 B \u8fdb\u7a0b\u7684\u7a7a\u95f4 \u865a\u62df\u7a7a\u95f4\u591a\u5927\u5462\uff1f\u5bfb\u5740\u7a7a\u95f4 - 64 \u4f4d\u7cfb\u7edf 2 ^ 64\uff0c\u6bd4\u7269\u7406\u7a7a\u95f4\u5927\u5f88\u591a \uff0c\u5355\u4f4d\u662f byte \u7ad9\u5728\u865a\u62df\u7684\u89d2\u5ea6\uff0c\u8fdb\u7a0b\u662f\u72ec\u4eab\u6574\u4e2a\u7cfb\u7edf + CPU \u5185\u5b58\u6620\u5c04\uff1a\u504f\u79fb\u91cf + \u6bb5\u7684\u57fa\u5730\u5740 = \u7ebf\u6027\u5730\u5740 \uff08\u865a\u62df\u7a7a\u95f4\uff09 \u7ebf\u6027\u5730\u5740\u901a\u8fc7 OS + MMU\uff08\u786c\u4ef6 Memory Management Unit\uff09 \u7f3a\u9875\u4e2d\u65ad\uff08\u4e0d\u662f\u5f88\u91cd\u8981\uff09\uff1a \u865a\u62df\u5185\u5b58\u4e2d\u9700\u8981\u7528\u5230\u6570\u636e\u9875\uff0c\u5b9e\u9645\u5185\u5b58\u4e2d\u6ca1\u6709\uff0c\u4ea7\u751f\u7f3a\u9875\u5f02\u5e38\uff08\u4e2d\u65ad\uff09\uff0c\u7531\u5185\u6838\u5904\u7406\u5e76\u52a0\u8f7d\u786c\u76d8\u6570\u636e\u9875\u5230\u5185\u5b58\u4e2d\u3002 \u865a\u62df\u5185\u5b58\uff1a \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u865a\u62df\u7684\u72ec\u5360\u6574\u4e2aCPU \u8fdb\u7a0b\u5185\u90e8\u5206\u6bb5\uff0c\u6bb5\u5185\u90e8\u5206\u9875\uff0c\u9700\u8981\u8be5\u9875\u7684\u65f6\u5019\u52a0\u8f7d\u5230\u5185\u5b58\u9875\u6846(page frame) \u5185\u5b58\u6620\u5c04\uff1a 1. \u64cd\u4f5c \u6570\u636e\u6bb5 \u6570\u636e\u533a \u903b\u8f91\u5730\u5740 ---> \u6bb5\u7684\u57fa\u5730\u5740 + \u504f\u79fb\u91cf\uff08\u903b\u8f91\u5730\u5740\uff09 == \u865a\u62df\u5730\u5740/\u7ebf\u6027\u5730\u5740 2. \u7ebf\u6027\u5730\u5740\u901a\u8fc7 OS + MMU\uff08\u786c\u4ef6 Memory Management Unit\uff09\u6620\u5c04\u5230\u771f\u6b63\u5730\u903b\u8f91\u5730\u5740 \u5185\u5b58\u5730\u5740\u6620\u5c04\uff1a","title":"\u53d1\u5c55\u5386\u7a0b"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#zgc-the-z-garbage-collector","text":"\u7b97\u6cd5\u53eb\u505a\uff1aColored Pointer + Load Barrier - GC \u4fe1\u606f\u8bb0\u5f55\u5728\u6307\u9488\u4e0a\uff0c\u4e0d\u662f\u8bb0\u5f55\u5728\u5934\u90e8\uff0c immediate memory use - 42 \u4f4d\u6307\u9488 \u5bfb\u5740\u7a7a\u95f4 4T - JDK13 ---> 16T \u76ee\u524d\u4e3a\u6b62\u6700\u5927 16T 2^44 - \u539f\u56e0\uff1a\u5730\u5740\u603b\u7ebf\u76ee\u524d\uff1a48 \u4f4d\u3002\u56e0\u6b64\uff0c4 \u4f4d\u7ed9\u4e86\u989c\u8272\u6307\u9488\uff0c\u800c\u5269\u4f59\u7684\u8fd8\u670944\u4f4d\u53ef\u4ee5\u7528\u4e8e\u5bfb\u5740 \u989c\u8272\u6307\u9488\uff1a\u56db\u4e2a\u4e92\u76f8\u6392\u65a5 \u989c\u8272\u6307\u9488\u672c\u8d28\u4e0a\u5305\u542b\u4e86\u5730\u5740\u6620\u5c04\u7684\u6982\u5ff5 Marked0\uff084T\uff09 Marked1 (8T) Remapped (12T) Finalizable (16T)","title":"ZGC \uff08The Z garbage collector\uff09"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#cpu_3","text":"\u603b\u7ebf\u5185\u90e8\u5206\u4e3a\uff1a\u6570\u636e\u603b\u7ebf \u5730\u5740\u603b\u7ebf \u63a7\u5236\u603b\u7ebf \u5730\u5740\u603b\u7ebf\u76ee\u524d\uff1a48 \u4f4d \u56e0\u6b64\uff0c4 \u4f4d\u7ed9\u4e86\u989c\u8272\u6307\u9488\uff0c\u800c\u5269\u4f59\u7684\u8fd8\u670944\u4f4d\u53ef\u4ee5\u7528\u4e8e\u5bfb\u5740","title":"CPU \u5982\u4f55\u533a\u5206 \u4e00\u4e2a\u7acb\u5373\u6570 \u548c \u4e00\u6761\u6307\u4ee4"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_29","text":"","title":"\u5185\u6838\u540c\u6b65\u673a\u5236"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_30","text":"\u4e34\u754c\u533a\uff08critical area\uff09: \u8bbf\u95ee\u6216\u64cd\u4f5c\u5171\u4eab\u6570\u636e\u7684\u4ee3\u7801\u6bb5 \u7b80\u5355\u7406\u89e3\uff1asynchronized \u5927\u62ec\u53f7\u4e2d\u90e8\u5206\uff08\u539f\u5b50\u6027\uff09 \u7ade\u4e89\u6761\u4ef6\uff08race conditions\uff09\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u62e5\u6709\u4e34\u754c\u533a\u7684\u6267\u884c\u6743 \u6570\u636e\u4e0d\u4e00\u81f4\uff1adata unconsistency \u7531\u7ade\u4e89\u6761\u4ef6\u5f15\u8d77\u7684\u6570\u636e\u7834\u574f \u540c\u6b65\uff08synchronization\uff09\u907f\u514d race conditions \u5b9a\u4e49\u540c\u65f6\u6267\u884c\u4e34\u754c\u533a\u7684\u4ee3\u7801\u533a\u65f6\u6240\u5b9a\u7684\u6267\u884c\u89c4\u5219 \u9501\uff1a\u5b8c\u6210\u540c\u6b65\u7684\u624b\u6bb5\uff08\u95e8\u9501\uff0c\u95e8\u540e\u662f\u4e34\u754c\u533a\uff0c\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u5b58\u5728\uff09 \u4e0a\u9501\u89e3\u9501\u5fc5\u987b\u5177\u5907\u539f\u5b50\u6027 \u539f\u5b50\u6027\uff08\u8c61\u539f\u5b50\u4e00\u6837\u4e0d\u53ef\u5206\u5272\u7684\u64cd\u4f5c\uff09 \u6709\u5e8f\u6027\uff08\u7981\u6b62\u6307\u4ee4\u91cd\u6392\uff09 \u53ef\u89c1\u6027\uff08\u4e00\u4e2a\u7ebf\u7a0b\u5185\u7684\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u89c1\uff09 \u53c2\u770b\u89c1\u4e92\u65a5\u9501 \u6392\u4ed6\u9501 \u5171\u4eab\u9501 \u5206\u6bb5\u9501","title":"\u5173\u4e8e\u540c\u6b65\u7406\u8bba\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_31","text":"\u76ee\u7684\uff1a\u4fdd\u8bc1\u539f\u5b50\u6027\uff0c\u6709\u5e8f\u6027\uff0c\u53ef\u89c1\u6027(Atomicity, Ordering, Visibility) \u539f\u5b50\u64cd\u4f5c\uff1a\u5185\u6838\u4e2d\u7c7b\u4f3c\u4e8e AtomicXXX\uff0c\u4f4d\u4e8e \u81ea\u65cb\u9501\uff1a\u5185\u6838\u4e2d\u901a\u8fc7\u6c47\u7f16\u652f\u6301\u7684 cas\uff0c\u4f4d\u4e8e \u79bb\u5f00\u540e\uff0c\u518d\u6b21\u56de\u6765\u7684\u65f6\u5019 \u68c0\u67e5\u4e00\u4e0b\u9501\u72b6\u6001 \u8bfb - \u5199\u81ea\u65cb \u2013 \u7c7b\u4f3c\u4e8e ReadWriteLock \u53ef\u540c\u65f6\u8bfb\uff0c\u53ea\u80fd\u4e00\u4e2a\u5199 \u8bfb\u7684\u65f6\u5019\u662f\u5171\u4eab\u9501\uff0c\u5199\u7684\u65f6\u5019\u662f\u6392\u4ed6\u9501 \u4fe1\u53f7\u91cf \u2013 \u7c7b\u4f3c\u4e8e Semaphore(PV \u64cd\u4f5c down up \u64cd\u4f5c\uff1a\u5360\u6709\u548c\u91ca\u653e\uff09 \u91cd\u91cf\u7ea7\u9501\uff0c\u7ebf\u7a0b\u4f1a\u8fdb\u5165 wait\uff0c\u9002\u5408\u957f\u65f6\u95f4\u6301\u6709\u7684\u9501\u60c5\u51b5 \u5185\u6838\u91cc\u9762\u7684 Semaphore \u8bfb-\u5199\u4fe1\u53f7\u91cf \u2013 downread upread downwrite upwrite \u591a\u4e2a\u5199\uff0c\u53ef\u4ee5\u5206\u6bb5\u5199\uff0c\u6bd4\u8f83\u5c11\u7528(\u5206\u6bb5\u9501\uff09 \u4e92\u65a5\u4f53 (mutex) \u2013 \u7279\u6b8a\u7684\u4fe1\u53f7\u91cf\uff08\u4e8c\u503c\u4fe1\u53f7\u91cf\uff09 \u5e73\u65f6\u6240\u8bf4\u7684 Syncinized \u5b8c\u6210\u53d8\u91cf \u2013 \u7279\u6b8a\u7684\u4fe1\u53f7\u91cf\uff08A \u53d1\u51fa\u4fe1\u53f7\u7ed9 B\uff0cB \u7b49\u5f85\u5728\u5b8c\u6210\u53d8\u91cf\u4e0a\uff09 \u5185\u6838vfork() \u5728\u5b50\u8fdb\u7a0b\u7ed3\u675f\u65f6\u901a\u8fc7\u5b8c\u6210\u53d8\u91cf\u53eb\u9192\u7236\u8fdb\u7a0b \u7c7b\u4f3c\u4e8e (Latch) BKL\uff1a\u5927\u5185\u6838\u9501\uff08\u65e9\u671f\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u7528\uff09 \u987a\u5e8f\u9501\uff082.6\uff09\uff1a \u2013 \u7ebf\u7a0b\u53ef\u4ee5\u6302\u8d77\u7684\u8bfb\u5199\u81ea\u65cb\u9501 \u4f7f\u7528\u5e8f\u5217\u8ba1\u6570\u5668\u5b9e\u73b0\uff1a\u4ece 0 \u5f00\u59cb\uff0c\u5199\u65f6\u589e\u52a0 (+1)\uff0c\u5199\u5b8c\u91ca\u653e (+1)\uff0c\u8bfb\u524d\u53d1\u73b0\u5355\u6570\uff0c \u8bf4\u660e\u6709\u5199\u7ebf\u7a0b\uff0c\u7b49\u5f85\u6216\u5176\u4ed6\u7b49\u81ea\u884c\u51b3\u5b9a\u662f\u5426\u64cd\u4f5c\uff0c\u8bfb\u524d\u8bfb\u540e\u5e8f\u5217\u4e00\u6837\uff0c\u8bf4\u660e\u6ca1\u6709\u5199\u7ebf\u7a0b\u6253\u65ad\uff09 \u7981\u6b62\u62a2\u5360 \u2013 preempt_disable() \u5185\u5b58\u5c4f\u969c \u2013 \u89c1 volatile","title":"\u5185\u6838\u540c\u6b65\u5e38\u7528\u65b9\u6cd5"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#_32","text":"","title":"\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7cfb\u7edf"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#1","text":"boot.asm ; \u6587\u4ef6\u540d boot.asm org 7c00h ; BIOS\u8bfb\u5165MBR\u540e\uff0c\u4ece0x7c00h\u5904\u5f00\u59cb\u6267\u884c ; \u4e0b\u9762\u90e8\u5206\u548c10h\u6709\u5173\u4e2d\u65ad\uff0c10h\u4e2d\u65ad\u7528\u6765\u663e\u793a\u5b57\u7b26 mov ax, cs mov es, ax mov ax, msg mov bp, ax ; ES:BP\u8868\u793a\u663e\u793a\u5b57\u7b26\u4e32\u7684\u5730\u5740 mov cx, msgLen ; CX\u5b58\u5b57\u7b26\u957f\u5ea6 mov ax, 1301h ; AH=13h\u8868\u793a\u5411TTY\u663e\u793a\u5b57\u7b26\uff0cAL=01h\u8868\u793a\u663e\u793a\u65b9\u5f0f\uff08\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u663e\u793a\u5c5e\u6027\uff0c01h\u8868\u793a\u4e0d\u5305\u542b\uff09 mov bx, 000fh ; BH=00h\u8868\u793a\u9875\u53f7\uff0cBL=0fh\u8868\u793a\u989c\u8272 mov dl, 0 ; \u5217 int 10h msg: db \"hello world, welcome to OS!\" msgLen: equ $ - msg ; \u5b57\u7b26\u4e32\u957f\u5ea6 times 510 - ($ - $$) db 0 ; \u586b\u5145\u5269\u4f59\u90e8\u5206 dw 0aa55h ; \u9b54\u6570\uff0c\u5fc5\u987b\u6709\u8fd9\u4e24\u4e2a\u5b57\u8282BIOS\u624d\u786e\u8ba4\u662fMBR","title":"1. \u7f16\u5199\u6c47\u7f16\u7801"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#2","text":"nasm boot.asm -o boot.bin","title":"2. \u7f16\u8bd1"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#3","text":"dd if=/dev/zero of=floppy.img bs=1474560 count=1 \u751f\u6210\u7a7a\u767d\u8f6f\u76d8\u955c\u50cf dd if=boot.bin of=myos.img bs=512 count=1 \u5236\u4f5c\u5305\u542b\u4e3b\u5f15\u5bfc\u8bb0\u5f55 boot.bin \u7684\u542f\u52a8\u955c\u50cf\u6587\u4ef6 dd if=floppy.img of=myos.img skip=1 seek=1 bs=512 count=2879 \u5728 bin \u751f\u6210\u7684\u955c\u50cf\u6587\u4ef6\u540e\u8865\u4e0a\u7a7a\u767d\uff0c\u6210\u4e3a\u5408\u9002\u5927\u5c0f\u7684\u8f6f\u76d8\u955c\u50cf\uff0c\u4e00\u5171 2880 \u4e2a\u6247\u533a\uff0c\u7565\u8fc7\u7b2c\u4e00\u4e2a","title":"3. \u5236\u4f5c\u542f\u52a8\u8f6f\u76d8"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#4","text":"\u5c06 myos.img \u4e0b\u8f7d\u5230 windows VMWare \u521b\u5efa\u7a7a\u7684\u865a\u62df\u673a \u6587\u4ef6 - \u521b\u5efa\u65b0\u7684\u865a\u62df\u673a - \u5178\u578b \u7a0d\u540e\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf \u5176\u4ed6 \u4e00\u8def next \u5b8c\u6210 \u865a\u62df\u673a\u8bbe\u7f6e\uff0c\u53bb\u6389 CD/DVD \u9009\u9879\u4e2d \u201c\u542f\u52a8\u65f6\u8fde\u63a5\u201d \u7f51\u7edc\uff0c\u9009\u62e9 \u201c\u4ec5\u4e3b\u673a\u6a21\u5f0f\u201d\uff0c\u52fe\u9009 \u201c\u542f\u52a8\u65f6\u8fde\u63a5\u201d\uff08\u597d\u50cf\u65e0\u6240\u8c13\uff09 \u6dfb\u52a0\u8f6f\u76d8\u9a71\u52a8\u5668 \u4f7f\u7528\u8f6f\u76d8\u6620\u50cf \u627e\u5230 myos.img \u542f\u52a8\u865a\u62df\u673a","title":"4. \u7528\u8f6f\u76d8\u542f\u52a8\u7cfb\u7edf"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#0x7c00","text":"\u53c2\u8003\uff1a https://www.glamenv-septzen.net/en/view/6 http://mashibing.com/doc/","title":"\u4e3a\u4ec0\u4e48\u662f 0x7C00?"},{"location":"250%20Working%20Coding/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82/Java%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8E%8C%E6%8F%A1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86/#reference","text":"I wrote an operating system in conjunction with (a) - 10 mins to write the operating system Why BIOS loads MBR into 0x7C00 in x86 ?","title":"Reference"},{"location":"250%20Working%20Coding/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E4%B8%8E%E9%85%8D%E7%BD%AE/","text":"","title":"Content"},{"location":"250%20Working%20Coding/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","text":"","title":"Content"},{"location":"250%20Working%20Coding%20C/","text":"MyWiki for C/C++ Tech. \u00b6","title":"MyWiki for C/C++ Tech."},{"location":"250%20Working%20Coding%20C/#mywiki-for-cc-tech","text":"","title":"MyWiki for C/C++ Tech."},{"location":"250%20Working%20Coding%20Java/","text":"MyWiki for Java Tech. \u00b6","title":"MyWiki for Java Tech."},{"location":"250%20Working%20Coding%20Java/#mywiki-for-java-tech","text":"","title":"MyWiki for Java Tech."},{"location":"250%20Working%20Coding%20Python/","text":"MyWiki for Python Tech. \u00b6","title":"MyWiki for Python Tech."},{"location":"250%20Working%20Coding%20Python/#mywiki-for-python-tech","text":"","title":"MyWiki for Python Tech."}]}